
sigaction:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	insb   (%dx),%es:(%edi)
 8048136:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804813d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048144:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    $0x0,%al
 804814a:	00 00                	add    %al,(%eax)
 804814c:	10 00                	adc    %al,(%eax)
 804814e:	00 00                	add    %al,(%eax)
 8048150:	01 00                	add    %eax,(%eax)
 8048152:	00 00                	add    %al,(%eax)
 8048154:	47                   	inc    %edi
 8048155:	4e                   	dec    %esi
 8048156:	55                   	push   %ebp
 8048157:	00 00                	add    %al,(%eax)
 8048159:	00 00                	add    %al,(%eax)
 804815b:	00 02                	add    %al,(%edx)
 804815d:	00 00                	add    %al,(%eax)
 804815f:	00 06                	add    %al,(%esi)
 8048161:	00 00                	add    %al,(%eax)
 8048163:	00 20                	add    %ah,(%eax)
 8048165:	00 00                	add    %al,(%eax)
	...

Disassembly of section .hash:

08048168 <.hash>:
 8048168:	03 00                	add    (%eax),%eax
 804816a:	00 00                	add    %al,(%eax)
 804816c:	05 00 00 00 01       	add    $0x1000000,%eax
 8048171:	00 00                	add    %al,(%eax)
 8048173:	00 03                	add    %al,(%ebx)
 8048175:	00 00                	add    %al,(%eax)
 8048177:	00 04 00             	add    %al,(%eax,%eax,1)
	...
 804818a:	00 00                	add    %al,(%eax)
 804818c:	02 00                	add    (%eax),%al
	...

Disassembly of section .dynsym:

08048190 <.dynsym>:
	...
 80481a0:	36 00 00             	add    %al,%ss:(%eax)
	...
 80481ab:	00 20                	add    %ah,(%eax)
 80481ad:	00 00                	add    %al,(%eax)
 80481af:	00 0b                	add    %cl,(%ebx)
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 ec                	add    %ch,%ah
 80481b5:	84 04 08             	test   %al,(%eax,%ecx,1)
 80481b8:	04 00                	add    $0x0,%al
 80481ba:	00 00                	add    %al,(%eax)
 80481bc:	11 00                	adc    %eax,(%eax)
 80481be:	0f 00 24 00          	verr   (%eax,%eax,1)
	...
 80481ca:	00 00                	add    %al,(%eax)
 80481cc:	12 00                	adc    (%eax),%al
 80481ce:	00 00                	add    %al,(%eax)
 80481d0:	1a 00                	sbb    (%eax),%al
	...
 80481da:	00 00                	add    %al,(%eax)
 80481dc:	12 00                	adc    (%eax),%al
	...

Disassembly of section .dynstr:

080481e0 <.dynstr>:
 80481e0:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80481e4:	63 2e                	arpl   %bp,(%esi)
 80481e6:	73 6f                	jae    8048257 <len+0x804824b>
 80481e8:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 80481ed:	4f                   	dec    %edi
 80481ee:	5f                   	pop    %edi
 80481ef:	73 74                	jae    8048265 <len+0x8048259>
 80481f1:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 80481f8:	64 
 80481f9:	00 73 69             	add    %dh,0x69(%ebx)
 80481fc:	67 61                	addr16 popa 
 80481fe:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 8048202:	6e                   	outsb  %ds:(%esi),(%dx)
 8048203:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048206:	6c                   	insb   (%dx),%es:(%edi)
 8048207:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804820e:	72 74                	jb     8048284 <_init+0x10>
 8048210:	5f                   	pop    %edi
 8048211:	6d                   	insl   (%dx),%es:(%edi)
 8048212:	61                   	popa   
 8048213:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 804821a:	6f                   	outsl  %ds:(%esi),(%dx)
 804821b:	6e                   	outsb  %ds:(%esi),(%dx)
 804821c:	5f                   	pop    %edi
 804821d:	73 74                	jae    8048293 <_init+0x1f>
 804821f:	61                   	popa   
 8048220:	72 74                	jb     8048296 <_init+0x22>
 8048222:	5f                   	pop    %edi
 8048223:	5f                   	pop    %edi
 8048224:	00 47 4c             	add    %al,0x4c(%edi)
 8048227:	49                   	dec    %ecx
 8048228:	42                   	inc    %edx
 8048229:	43                   	inc    %ebx
 804822a:	5f                   	pop    %edi
 804822b:	32 2e                	xor    (%esi),%ch
 804822d:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048230 <.gnu.version>:
 8048230:	00 00                	add    %al,(%eax)
 8048232:	00 00                	add    %al,(%eax)
 8048234:	01 00                	add    %eax,(%eax)
 8048236:	02 00                	add    (%eax),%al
 8048238:	02 00                	add    (%eax),%al

Disassembly of section .gnu.version_r:

0804823c <.gnu.version_r>:
 804823c:	01 00                	add    %eax,(%eax)
 804823e:	01 00                	add    %eax,(%eax)
 8048240:	01 00                	add    %eax,(%eax)
 8048242:	00 00                	add    %al,(%eax)
 8048244:	10 00                	adc    %al,(%eax)
 8048246:	00 00                	add    %al,(%eax)
 8048248:	00 00                	add    %al,(%eax)
 804824a:	00 00                	add    %al,(%eax)
 804824c:	10 69 69             	adc    %ch,0x69(%ecx)
 804824f:	0d 00 00 02 00       	or     $0x20000,%eax
 8048254:	45                   	inc    %ebp
 8048255:	00 00                	add    %al,(%eax)
 8048257:	00 00                	add    %al,(%eax)
 8048259:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804825c <.rel.dyn>:
 804825c:	a8 96                	test   $0x96,%al
 804825e:	04 08                	add    $0x8,%al
 8048260:	06                   	push   %es
 8048261:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .rel.plt:

08048264 <.rel.plt>:
 8048264:	b8 96 04 08 07       	mov    $0x7080496,%eax
 8048269:	03 00                	add    (%eax),%eax
 804826b:	00 bc 96 04 08 07 04 	add    %bh,0x4070804(%esi,%edx,4)
	...

Disassembly of section .init:

08048274 <_init>:
 8048274:	53                   	push   %ebx
 8048275:	83 ec 08             	sub    $0x8,%esp
 8048278:	e8 93 00 00 00       	call   8048310 <__x86.get_pc_thunk.bx>
 804827d:	81 c3 2f 14 00 00    	add    $0x142f,%ebx
 8048283:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048289:	85 c0                	test   %eax,%eax
 804828b:	74 05                	je     8048292 <_init+0x1e>
 804828d:	e8 3e 00 00 00       	call   80482d0 <sigaction@plt+0x10>
 8048292:	83 c4 08             	add    $0x8,%esp
 8048295:	5b                   	pop    %ebx
 8048296:	c3                   	ret    

Disassembly of section .plt:

080482a0 <__libc_start_main@plt-0x10>:
 80482a0:	ff 35 b0 96 04 08    	pushl  0x80496b0
 80482a6:	ff 25 b4 96 04 08    	jmp    *0x80496b4
 80482ac:	00 00                	add    %al,(%eax)
	...

080482b0 <__libc_start_main@plt>:
 80482b0:	ff 25 b8 96 04 08    	jmp    *0x80496b8
 80482b6:	68 00 00 00 00       	push   $0x0
 80482bb:	e9 e0 ff ff ff       	jmp    80482a0 <_init+0x2c>

080482c0 <sigaction@plt>:
 80482c0:	ff 25 bc 96 04 08    	jmp    *0x80496bc
 80482c6:	68 08 00 00 00       	push   $0x8
 80482cb:	e9 d0 ff ff ff       	jmp    80482a0 <_init+0x2c>

Disassembly of section .plt.got:

080482d0 <.plt.got>:
 80482d0:	ff 25 a8 96 04 08    	jmp    *0x80496a8
 80482d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080482e0 <_start>:
 80482e0:	31 ed                	xor    %ebp,%ebp
 80482e2:	5e                   	pop    %esi
 80482e3:	89 e1                	mov    %esp,%ecx
 80482e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482e8:	50                   	push   %eax
 80482e9:	54                   	push   %esp
 80482ea:	52                   	push   %edx
 80482eb:	68 d0 84 04 08       	push   $0x80484d0
 80482f0:	68 70 84 04 08       	push   $0x8048470
 80482f5:	51                   	push   %ecx
 80482f6:	56                   	push   %esi
 80482f7:	68 0b 84 04 08       	push   $0x804840b
 80482fc:	e8 af ff ff ff       	call   80482b0 <__libc_start_main@plt>
 8048301:	f4                   	hlt    
 8048302:	66 90                	xchg   %ax,%ax
 8048304:	66 90                	xchg   %ax,%ax
 8048306:	66 90                	xchg   %ax,%ax
 8048308:	66 90                	xchg   %ax,%ax
 804830a:	66 90                	xchg   %ax,%ax
 804830c:	66 90                	xchg   %ax,%ax
 804830e:	66 90                	xchg   %ax,%ax

08048310 <__x86.get_pc_thunk.bx>:
 8048310:	8b 1c 24             	mov    (%esp),%ebx
 8048313:	c3                   	ret    
 8048314:	66 90                	xchg   %ax,%ax
 8048316:	66 90                	xchg   %ax,%ax
 8048318:	66 90                	xchg   %ax,%ax
 804831a:	66 90                	xchg   %ax,%ax
 804831c:	66 90                	xchg   %ax,%ax
 804831e:	66 90                	xchg   %ax,%ax

08048320 <deregister_tm_clones>:
 8048320:	b8 d7 96 04 08       	mov    $0x80496d7,%eax
 8048325:	2d d4 96 04 08       	sub    $0x80496d4,%eax
 804832a:	83 f8 06             	cmp    $0x6,%eax
 804832d:	76 1a                	jbe    8048349 <deregister_tm_clones+0x29>
 804832f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048334:	85 c0                	test   %eax,%eax
 8048336:	74 11                	je     8048349 <deregister_tm_clones+0x29>
 8048338:	55                   	push   %ebp
 8048339:	89 e5                	mov    %esp,%ebp
 804833b:	83 ec 14             	sub    $0x14,%esp
 804833e:	68 d4 96 04 08       	push   $0x80496d4
 8048343:	ff d0                	call   *%eax
 8048345:	83 c4 10             	add    $0x10,%esp
 8048348:	c9                   	leave  
 8048349:	f3 c3                	repz ret 
 804834b:	90                   	nop
 804834c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048350 <register_tm_clones>:
 8048350:	b8 d4 96 04 08       	mov    $0x80496d4,%eax
 8048355:	2d d4 96 04 08       	sub    $0x80496d4,%eax
 804835a:	c1 f8 02             	sar    $0x2,%eax
 804835d:	89 c2                	mov    %eax,%edx
 804835f:	c1 ea 1f             	shr    $0x1f,%edx
 8048362:	01 d0                	add    %edx,%eax
 8048364:	d1 f8                	sar    %eax
 8048366:	74 1b                	je     8048383 <register_tm_clones+0x33>
 8048368:	ba 00 00 00 00       	mov    $0x0,%edx
 804836d:	85 d2                	test   %edx,%edx
 804836f:	74 12                	je     8048383 <register_tm_clones+0x33>
 8048371:	55                   	push   %ebp
 8048372:	89 e5                	mov    %esp,%ebp
 8048374:	83 ec 10             	sub    $0x10,%esp
 8048377:	50                   	push   %eax
 8048378:	68 d4 96 04 08       	push   $0x80496d4
 804837d:	ff d2                	call   *%edx
 804837f:	83 c4 10             	add    $0x10,%esp
 8048382:	c9                   	leave  
 8048383:	f3 c3                	repz ret 
 8048385:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048390 <__do_global_dtors_aux>:
 8048390:	80 3d d8 96 04 08 00 	cmpb   $0x0,0x80496d8
 8048397:	75 13                	jne    80483ac <__do_global_dtors_aux+0x1c>
 8048399:	55                   	push   %ebp
 804839a:	89 e5                	mov    %esp,%ebp
 804839c:	83 ec 08             	sub    $0x8,%esp
 804839f:	e8 7c ff ff ff       	call   8048320 <deregister_tm_clones>
 80483a4:	c6 05 d8 96 04 08 01 	movb   $0x1,0x80496d8
 80483ab:	c9                   	leave  
 80483ac:	f3 c3                	repz ret 
 80483ae:	66 90                	xchg   %ax,%ax

080483b0 <frame_dummy>:
 80483b0:	b8 bc 95 04 08       	mov    $0x80495bc,%eax
 80483b5:	8b 10                	mov    (%eax),%edx
 80483b7:	85 d2                	test   %edx,%edx
 80483b9:	75 05                	jne    80483c0 <frame_dummy+0x10>
 80483bb:	eb 93                	jmp    8048350 <register_tm_clones>
 80483bd:	8d 76 00             	lea    0x0(%esi),%esi
 80483c0:	ba 00 00 00 00       	mov    $0x0,%edx
 80483c5:	85 d2                	test   %edx,%edx
 80483c7:	74 f2                	je     80483bb <frame_dummy+0xb>
 80483c9:	55                   	push   %ebp
 80483ca:	89 e5                	mov    %esp,%ebp
 80483cc:	83 ec 14             	sub    $0x14,%esp
 80483cf:	50                   	push   %eax
 80483d0:	ff d2                	call   *%edx
 80483d2:	83 c4 10             	add    $0x10,%esp
 80483d5:	c9                   	leave  
 80483d6:	e9 75 ff ff ff       	jmp    8048350 <register_tm_clones>

080483db <get_pc_thunk.bx>:
 80483db:	8b 1c 24             	mov    (%esp),%ebx
 80483de:	c3                   	ret    

080483df <myhandler>:
 80483df:	b8 04 00 00 00       	mov    $0x4,%eax
 80483e4:	bb 01 00 00 00       	mov    $0x1,%ebx
 80483e9:	54                   	push   %esp
 80483ea:	89 e1                	mov    %esp,%ecx
 80483ec:	ba 00 10 00 00       	mov    $0x1000,%edx
 80483f1:	cd 80                	int    $0x80
 80483f3:	b8 01 00 00 00       	mov    $0x1,%eax
 80483f8:	bb 03 00 00 00       	mov    $0x3,%ebx
 80483fd:	81 44 24 04 80 00 00 	addl   $0x80,0x4(%esp)
 8048404:	00 
 8048405:	8b 5c 24 04          	mov    0x4(%esp),%ebx
 8048409:	cd 80                	int    $0x80

0804840b <main>:
 804840b:	c7 05 e0 96 04 08 df 	movl   $0x80483df,0x80496e0
 8048412:	83 04 08 
 8048415:	bf 84 00 00 00       	mov    $0x84,%edi
 804841a:	c7 04 3d e0 96 04 08 	movl   $0x4,0x80496e0(,%edi,1)
 8048421:	04 00 00 00 
 8048425:	6a 00                	push   $0x0
 8048427:	68 e0 96 04 08       	push   $0x80496e0
 804842c:	6a 0b                	push   $0xb
 804842e:	e8 8d fe ff ff       	call   80482c0 <sigaction@plt>
 8048433:	83 c4 0c             	add    $0xc,%esp
 8048436:	90                   	nop
 8048437:	68 22 22 11 11       	push   $0x11112222
 804843c:	68 44 44 33 33       	push   $0x33334444
 8048441:	68 66 66 55 55       	push   $0x55556666
 8048446:	68 88 88 77 77       	push   $0x77778888
 804844b:	b8 04 00 00 00       	mov    $0x4,%eax
 8048450:	bb 01 00 00 00       	mov    $0x1,%ebx
 8048455:	54                   	push   %esp
 8048456:	89 e1                	mov    %esp,%ecx
 8048458:	ba 30 00 00 00       	mov    $0x30,%edx
 804845d:	cd 80                	int    $0x80
 804845f:	60                   	pusha  
 8048460:	90                   	nop
 8048461:	90                   	nop
 8048462:	90                   	nop
 8048463:	90                   	nop
 8048464:	90                   	nop
 8048465:	e9 da ae 1d 09       	jmp    11223344 <_end+0x91d9bd8>
 804846a:	66 90                	xchg   %ax,%ax
 804846c:	66 90                	xchg   %ax,%ax
 804846e:	66 90                	xchg   %ax,%ax

08048470 <__libc_csu_init>:
 8048470:	55                   	push   %ebp
 8048471:	57                   	push   %edi
 8048472:	56                   	push   %esi
 8048473:	53                   	push   %ebx
 8048474:	e8 97 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 8048479:	81 c3 33 12 00 00    	add    $0x1233,%ebx
 804847f:	83 ec 0c             	sub    $0xc,%esp
 8048482:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048486:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804848c:	e8 e3 fd ff ff       	call   8048274 <_init>
 8048491:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048497:	29 c6                	sub    %eax,%esi
 8048499:	c1 fe 02             	sar    $0x2,%esi
 804849c:	85 f6                	test   %esi,%esi
 804849e:	74 25                	je     80484c5 <__libc_csu_init+0x55>
 80484a0:	31 ff                	xor    %edi,%edi
 80484a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80484a8:	83 ec 04             	sub    $0x4,%esp
 80484ab:	ff 74 24 2c          	pushl  0x2c(%esp)
 80484af:	ff 74 24 2c          	pushl  0x2c(%esp)
 80484b3:	55                   	push   %ebp
 80484b4:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80484bb:	83 c7 01             	add    $0x1,%edi
 80484be:	83 c4 10             	add    $0x10,%esp
 80484c1:	39 f7                	cmp    %esi,%edi
 80484c3:	75 e3                	jne    80484a8 <__libc_csu_init+0x38>
 80484c5:	83 c4 0c             	add    $0xc,%esp
 80484c8:	5b                   	pop    %ebx
 80484c9:	5e                   	pop    %esi
 80484ca:	5f                   	pop    %edi
 80484cb:	5d                   	pop    %ebp
 80484cc:	c3                   	ret    
 80484cd:	8d 76 00             	lea    0x0(%esi),%esi

080484d0 <__libc_csu_fini>:
 80484d0:	f3 c3                	repz ret 

Disassembly of section .fini:

080484d4 <_fini>:
 80484d4:	53                   	push   %ebx
 80484d5:	83 ec 08             	sub    $0x8,%esp
 80484d8:	e8 33 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 80484dd:	81 c3 cf 11 00 00    	add    $0x11cf,%ebx
 80484e3:	83 c4 08             	add    $0x8,%esp
 80484e6:	5b                   	pop    %ebx
 80484e7:	c3                   	ret    

Disassembly of section .rodata:

080484e8 <_fp_hw>:
 80484e8:	03 00                	add    (%eax),%eax
	...

080484ec <_IO_stdin_used>:
 80484ec:	01 00                	add    %eax,(%eax)
 80484ee:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

080484f0 <__GNU_EH_FRAME_HDR>:
 80484f0:	01 1b                	add    %ebx,(%ebx)
 80484f2:	03 3b                	add    (%ebx),%edi
 80484f4:	20 00                	and    %al,(%eax)
 80484f6:	00 00                	add    %al,(%eax)
 80484f8:	03 00                	add    (%eax),%eax
 80484fa:	00 00                	add    %al,(%eax)
 80484fc:	b0 fd                	mov    $0xfd,%al
 80484fe:	ff                   	(bad)  
 80484ff:	ff                   	(bad)  
 8048500:	3c 00                	cmp    $0x0,%al
 8048502:	00 00                	add    %al,(%eax)
 8048504:	80 ff ff             	cmp    $0xff,%bh
 8048507:	ff 60 00             	jmp    *0x0(%eax)
 804850a:	00 00                	add    %al,(%eax)
 804850c:	e0 ff                	loopne 804850d <__GNU_EH_FRAME_HDR+0x1d>
 804850e:	ff                   	(bad)  
 804850f:	ff                   	.byte 0xff
 8048510:	ac                   	lods   %ds:(%esi),%al
 8048511:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

08048514 <__FRAME_END__-0x9c>:
 8048514:	14 00                	adc    $0x0,%al
 8048516:	00 00                	add    %al,(%eax)
 8048518:	00 00                	add    %al,(%eax)
 804851a:	00 00                	add    %al,(%eax)
 804851c:	01 7a 52             	add    %edi,0x52(%edx)
 804851f:	00 01                	add    %al,(%ecx)
 8048521:	7c 08                	jl     804852b <__GNU_EH_FRAME_HDR+0x3b>
 8048523:	01 1b                	add    %ebx,(%ebx)
 8048525:	0c 04                	or     $0x4,%al
 8048527:	04 88                	add    $0x88,%al
 8048529:	01 00                	add    %eax,(%eax)
 804852b:	00 20                	add    %ah,(%eax)
 804852d:	00 00                	add    %al,(%eax)
 804852f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048532:	00 00                	add    %al,(%eax)
 8048534:	6c                   	insb   (%dx),%es:(%edi)
 8048535:	fd                   	std    
 8048536:	ff                   	(bad)  
 8048537:	ff 30                	pushl  (%eax)
 8048539:	00 00                	add    %al,(%eax)
 804853b:	00 00                	add    %al,(%eax)
 804853d:	0e                   	push   %cs
 804853e:	08 46 0e             	or     %al,0xe(%esi)
 8048541:	0c 4a                	or     $0x4a,%al
 8048543:	0f 0b                	ud2    
 8048545:	74 04                	je     804854b <__GNU_EH_FRAME_HDR+0x5b>
 8048547:	78 00                	js     8048549 <__GNU_EH_FRAME_HDR+0x59>
 8048549:	3f                   	aas    
 804854a:	1a 3b                	sbb    (%ebx),%bh
 804854c:	2a 32                	sub    (%edx),%dh
 804854e:	24 22                	and    $0x22,%al
 8048550:	48                   	dec    %eax
 8048551:	00 00                	add    %al,(%eax)
 8048553:	00 40 00             	add    %al,0x0(%eax)
 8048556:	00 00                	add    %al,(%eax)
 8048558:	18 ff                	sbb    %bh,%bh
 804855a:	ff                   	(bad)  
 804855b:	ff 5d 00             	lcall  *0x0(%ebp)
 804855e:	00 00                	add    %al,(%eax)
 8048560:	00 41 0e             	add    %al,0xe(%ecx)
 8048563:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048569:	87 03                	xchg   %eax,(%ebx)
 804856b:	41                   	inc    %ecx
 804856c:	0e                   	push   %cs
 804856d:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048573:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 804857a:	24 44                	and    $0x44,%al
 804857c:	0e                   	push   %cs
 804857d:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048581:	41                   	inc    %ecx
 8048582:	0e                   	push   %cs
 8048583:	30 4d 0e             	xor    %cl,0xe(%ebp)
 8048586:	20 47 0e             	and    %al,0xe(%edi)
 8048589:	14 41                	adc    $0x41,%al
 804858b:	c3                   	ret    
 804858c:	0e                   	push   %cs
 804858d:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048590:	0e                   	push   %cs
 8048591:	0c 41                	or     $0x41,%al
 8048593:	c7                   	(bad)  
 8048594:	0e                   	push   %cs
 8048595:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048598:	0e                   	push   %cs
 8048599:	04 00                	add    $0x0,%al
 804859b:	00 10                	add    %dl,(%eax)
 804859d:	00 00                	add    %al,(%eax)
 804859f:	00 8c 00 00 00 2c ff 	add    %cl,-0xd40000(%eax,%eax,1)
 80485a6:	ff                   	(bad)  
 80485a7:	ff 02                	incl   (%edx)
 80485a9:	00 00                	add    %al,(%eax)
 80485ab:	00 00                	add    %al,(%eax)
 80485ad:	00 00                	add    %al,(%eax)
	...

080485b0 <__FRAME_END__>:
 80485b0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

080495b4 <__frame_dummy_init_array_entry>:
 80495b4:	b0 83                	mov    $0x83,%al
 80495b6:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

080495b8 <__do_global_dtors_aux_fini_array_entry>:
 80495b8:	90                   	nop
 80495b9:	83                   	.byte 0x83
 80495ba:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

080495bc <__JCR_END__>:
 80495bc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

080495c0 <_DYNAMIC>:
 80495c0:	01 00                	add    %eax,(%eax)
 80495c2:	00 00                	add    %al,(%eax)
 80495c4:	01 00                	add    %eax,(%eax)
 80495c6:	00 00                	add    %al,(%eax)
 80495c8:	0c 00                	or     $0x0,%al
 80495ca:	00 00                	add    %al,(%eax)
 80495cc:	74 82                	je     8049550 <__FRAME_END__+0xfa0>
 80495ce:	04 08                	add    $0x8,%al
 80495d0:	0d 00 00 00 d4       	or     $0xd4000000,%eax
 80495d5:	84 04 08             	test   %al,(%eax,%ecx,1)
 80495d8:	19 00                	sbb    %eax,(%eax)
 80495da:	00 00                	add    %al,(%eax)
 80495dc:	b4 95                	mov    $0x95,%ah
 80495de:	04 08                	add    $0x8,%al
 80495e0:	1b 00                	sbb    (%eax),%eax
 80495e2:	00 00                	add    %al,(%eax)
 80495e4:	04 00                	add    $0x0,%al
 80495e6:	00 00                	add    %al,(%eax)
 80495e8:	1a 00                	sbb    (%eax),%al
 80495ea:	00 00                	add    %al,(%eax)
 80495ec:	b8 95 04 08 1c       	mov    $0x1c080495,%eax
 80495f1:	00 00                	add    %al,(%eax)
 80495f3:	00 04 00             	add    %al,(%eax,%eax,1)
 80495f6:	00 00                	add    %al,(%eax)
 80495f8:	04 00                	add    $0x0,%al
 80495fa:	00 00                	add    %al,(%eax)
 80495fc:	68 81 04 08 05       	push   $0x5080481
 8049601:	00 00                	add    %al,(%eax)
 8049603:	00 e0                	add    %ah,%al
 8049605:	81 04 08 06 00 00 00 	addl   $0x6,(%eax,%ecx,1)
 804960c:	90                   	nop
 804960d:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049614:	4f                   	dec    %edi
 8049615:	00 00                	add    %al,(%eax)
 8049617:	00 0b                	add    %cl,(%ebx)
 8049619:	00 00                	add    %al,(%eax)
 804961b:	00 10                	add    %dl,(%eax)
 804961d:	00 00                	add    %al,(%eax)
 804961f:	00 15 00 00 00 00    	add    %dl,0x0
 8049625:	00 00                	add    %al,(%eax)
 8049627:	00 03                	add    %al,(%ebx)
 8049629:	00 00                	add    %al,(%eax)
 804962b:	00 ac 96 04 08 02 00 	add    %ch,0x20804(%esi,%edx,4)
 8049632:	00 00                	add    %al,(%eax)
 8049634:	10 00                	adc    %al,(%eax)
 8049636:	00 00                	add    %al,(%eax)
 8049638:	14 00                	adc    $0x0,%al
 804963a:	00 00                	add    %al,(%eax)
 804963c:	11 00                	adc    %eax,(%eax)
 804963e:	00 00                	add    %al,(%eax)
 8049640:	17                   	pop    %ss
 8049641:	00 00                	add    %al,(%eax)
 8049643:	00 64 82 04          	add    %ah,0x4(%edx,%eax,4)
 8049647:	08 11                	or     %dl,(%ecx)
 8049649:	00 00                	add    %al,(%eax)
 804964b:	00 5c 82 04          	add    %bl,0x4(%edx,%eax,4)
 804964f:	08 12                	or     %dl,(%edx)
 8049651:	00 00                	add    %al,(%eax)
 8049653:	00 08                	add    %cl,(%eax)
 8049655:	00 00                	add    %al,(%eax)
 8049657:	00 13                	add    %dl,(%ebx)
 8049659:	00 00                	add    %al,(%eax)
 804965b:	00 08                	add    %cl,(%eax)
 804965d:	00 00                	add    %al,(%eax)
 804965f:	00 fe                	add    %bh,%dh
 8049661:	ff                   	(bad)  
 8049662:	ff 6f 3c             	ljmp   *0x3c(%edi)
 8049665:	82                   	(bad)  
 8049666:	04 08                	add    $0x8,%al
 8049668:	ff                   	(bad)  
 8049669:	ff                   	(bad)  
 804966a:	ff 6f 01             	ljmp   *0x1(%edi)
 804966d:	00 00                	add    %al,(%eax)
 804966f:	00 f0                	add    %dh,%al
 8049671:	ff                   	(bad)  
 8049672:	ff 6f 30             	ljmp   *0x30(%edi)
 8049675:	82                   	(bad)  
 8049676:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

080496a8 <.got>:
 80496a8:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

080496ac <_GLOBAL_OFFSET_TABLE_>:
 80496ac:	c0 95 04 08 00 00 00 	rclb   $0x0,0x804(%ebp)
 80496b3:	00 00                	add    %al,(%eax)
 80496b5:	00 00                	add    %al,(%eax)
 80496b7:	00 b6 82 04 08 c6    	add    %dh,-0x39f7fb7e(%esi)
 80496bd:	82                   	(bad)  
 80496be:	04 08                	add    $0x8,%al

Disassembly of section .data:

080496c0 <__data_start>:
 80496c0:	00 00                	add    %al,(%eax)
	...

080496c4 <__dso_handle>:
 80496c4:	00 00                	add    %al,(%eax)
	...

080496c8 <mystr>:
 80496c8:	45                   	inc    %ebp
 80496c9:	78 69                	js     8049734 <my_sigaction+0x54>
 80496cb:	74 69                	je     8049736 <my_sigaction+0x56>
 80496cd:	6e                   	outsb  %ds:(%esi),(%dx)
 80496ce:	67 2e 2e 2e 0a 00    	cs cs or %cs:(%bx,%si),%al

Disassembly of section .bss:

080496d8 <completed.6564>:
	...

080496e0 <my_sigaction>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 47 4e             	sub    %al,0x4e(%edi)
   8:	55                   	push   %ebp
   9:	29 20                	sub    %esp,(%eax)
   b:	35 2e 35 2e 30       	xor    $0x302e352e,%eax
	...
