
enc:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	insb   (%dx),%es:(%edi)
 8048136:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804813d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048144:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    $0x0,%al
 804814a:	00 00                	add    %al,(%eax)
 804814c:	10 00                	adc    %al,(%eax)
 804814e:	00 00                	add    %al,(%eax)
 8048150:	01 00                	add    %eax,(%eax)
 8048152:	00 00                	add    %al,(%eax)
 8048154:	47                   	inc    %edi
 8048155:	4e                   	dec    %esi
 8048156:	55                   	push   %ebp
 8048157:	00 00                	add    %al,(%eax)
 8048159:	00 00                	add    %al,(%eax)
 804815b:	00 02                	add    %al,(%edx)
 804815d:	00 00                	add    %al,(%eax)
 804815f:	00 06                	add    %al,(%esi)
 8048161:	00 00                	add    %al,(%eax)
 8048163:	00 20                	add    %ah,(%eax)
 8048165:	00 00                	add    %al,(%eax)
	...

Disassembly of section .hash:

08048168 <.hash>:
 8048168:	03 00                	add    (%eax),%eax
 804816a:	00 00                	add    %al,(%eax)
 804816c:	04 00                	add    $0x0,%al
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	03 00                	add    (%eax),%eax
 8048176:	00 00                	add    %al,(%eax)
 8048178:	02 00                	add    (%eax),%al
	...

Disassembly of section .dynsym:

0804818c <.dynsym>:
	...
 804819c:	2c 00                	sub    $0x0,%al
	...
 80481a6:	00 00                	add    %al,(%eax)
 80481a8:	20 00                	and    %al,(%eax)
 80481aa:	00 00                	add    %al,(%eax)
 80481ac:	0b 00                	or     (%eax),%eax
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	4c                   	dec    %esp
 80481b1:	84 04 08             	test   %al,(%eax,%ecx,1)
 80481b4:	04 00                	add    $0x0,%al
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	11 00                	adc    %eax,(%eax)
 80481ba:	0f 00 1a             	ltr    (%edx)
	...
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00 12                	add    %dl,(%edx)
 80481c9:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynstr:

080481cc <.dynstr>:
 80481cc:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80481d0:	63 2e                	arpl   %bp,(%esi)
 80481d2:	73 6f                	jae    8048243 <len+0x8048237>
 80481d4:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 80481d9:	4f                   	dec    %edi
 80481da:	5f                   	pop    %edi
 80481db:	73 74                	jae    8048251 <_init+0x5>
 80481dd:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 80481e4:	64 
 80481e5:	00 5f 5f             	add    %bl,0x5f(%edi)
 80481e8:	6c                   	insb   (%dx),%es:(%edi)
 80481e9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80481f0:	72 74                	jb     8048266 <_init+0x1a>
 80481f2:	5f                   	pop    %edi
 80481f3:	6d                   	insl   (%dx),%es:(%edi)
 80481f4:	61                   	popa   
 80481f5:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 80481fc:	6f                   	outsl  %ds:(%esi),(%dx)
 80481fd:	6e                   	outsb  %ds:(%esi),(%dx)
 80481fe:	5f                   	pop    %edi
 80481ff:	73 74                	jae    8048275 <_init+0x29>
 8048201:	61                   	popa   
 8048202:	72 74                	jb     8048278 <_init+0x2c>
 8048204:	5f                   	pop    %edi
 8048205:	5f                   	pop    %edi
 8048206:	00 47 4c             	add    %al,0x4c(%edi)
 8048209:	49                   	dec    %ecx
 804820a:	42                   	inc    %edx
 804820b:	43                   	inc    %ebx
 804820c:	5f                   	pop    %edi
 804820d:	32 2e                	xor    (%esi),%ch
 804820f:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048212 <.gnu.version>:
 8048212:	00 00                	add    %al,(%eax)
 8048214:	00 00                	add    %al,(%eax)
 8048216:	01 00                	add    %eax,(%eax)
 8048218:	02 00                	add    (%eax),%al

Disassembly of section .gnu.version_r:

0804821c <.gnu.version_r>:
 804821c:	01 00                	add    %eax,(%eax)
 804821e:	01 00                	add    %eax,(%eax)
 8048220:	01 00                	add    %eax,(%eax)
 8048222:	00 00                	add    %al,(%eax)
 8048224:	10 00                	adc    %al,(%eax)
 8048226:	00 00                	add    %al,(%eax)
 8048228:	00 00                	add    %al,(%eax)
 804822a:	00 00                	add    %al,(%eax)
 804822c:	10 69 69             	adc    %ch,0x69(%ecx)
 804822f:	0d 00 00 02 00       	or     $0x20000,%eax
 8048234:	3b 00                	cmp    (%eax),%eax
 8048236:	00 00                	add    %al,(%eax)
 8048238:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804823c <.rel.dyn>:
 804823c:	08 96 04 08 06 01    	or     %dl,0x1060804(%esi)
	...

Disassembly of section .rel.plt:

08048244 <.rel.plt>:
 8048244:	18 96 04 08 07 03    	sbb    %dl,0x3070804(%esi)
	...

Disassembly of section .init:

0804824c <_init>:
 804824c:	53                   	push   %ebx
 804824d:	83 ec 08             	sub    $0x8,%esp
 8048250:	e8 7b 00 00 00       	call   80482d0 <__x86.get_pc_thunk.bx>
 8048255:	81 c3 b7 13 00 00    	add    $0x13b7,%ebx
 804825b:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048261:	85 c0                	test   %eax,%eax
 8048263:	74 05                	je     804826a <_init+0x1e>
 8048265:	e8 26 00 00 00       	call   8048290 <__libc_start_main@plt+0x10>
 804826a:	83 c4 08             	add    $0x8,%esp
 804826d:	5b                   	pop    %ebx
 804826e:	c3                   	ret    

Disassembly of section .plt:

08048270 <__libc_start_main@plt-0x10>:
 8048270:	ff 35 10 96 04 08    	pushl  0x8049610
 8048276:	ff 25 14 96 04 08    	jmp    *0x8049614
 804827c:	00 00                	add    %al,(%eax)
	...

08048280 <__libc_start_main@plt>:
 8048280:	ff 25 18 96 04 08    	jmp    *0x8049618
 8048286:	68 00 00 00 00       	push   $0x0
 804828b:	e9 e0 ff ff ff       	jmp    8048270 <_init+0x24>

Disassembly of section .plt.got:

08048290 <.plt.got>:
 8048290:	ff 25 08 96 04 08    	jmp    *0x8049608
 8048296:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080482a0 <_start>:
 80482a0:	31 ed                	xor    %ebp,%ebp
 80482a2:	5e                   	pop    %esi
 80482a3:	89 e1                	mov    %esp,%ecx
 80482a5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482a8:	50                   	push   %eax
 80482a9:	54                   	push   %esp
 80482aa:	52                   	push   %edx
 80482ab:	68 30 84 04 08       	push   $0x8048430
 80482b0:	68 d0 83 04 08       	push   $0x80483d0
 80482b5:	51                   	push   %ecx
 80482b6:	56                   	push   %esi
 80482b7:	68 ba 83 04 08       	push   $0x80483ba
 80482bc:	e8 bf ff ff ff       	call   8048280 <__libc_start_main@plt>
 80482c1:	f4                   	hlt    
 80482c2:	66 90                	xchg   %ax,%ax
 80482c4:	66 90                	xchg   %ax,%ax
 80482c6:	66 90                	xchg   %ax,%ax
 80482c8:	66 90                	xchg   %ax,%ax
 80482ca:	66 90                	xchg   %ax,%ax
 80482cc:	66 90                	xchg   %ax,%ax
 80482ce:	66 90                	xchg   %ax,%ax

080482d0 <__x86.get_pc_thunk.bx>:
 80482d0:	8b 1c 24             	mov    (%esp),%ebx
 80482d3:	c3                   	ret    
 80482d4:	66 90                	xchg   %ax,%ax
 80482d6:	66 90                	xchg   %ax,%ax
 80482d8:	66 90                	xchg   %ax,%ax
 80482da:	66 90                	xchg   %ax,%ax
 80482dc:	66 90                	xchg   %ax,%ax
 80482de:	66 90                	xchg   %ax,%ax

080482e0 <deregister_tm_clones>:
 80482e0:	b8 27 96 04 08       	mov    $0x8049627,%eax
 80482e5:	2d 24 96 04 08       	sub    $0x8049624,%eax
 80482ea:	83 f8 06             	cmp    $0x6,%eax
 80482ed:	76 1a                	jbe    8048309 <deregister_tm_clones+0x29>
 80482ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80482f4:	85 c0                	test   %eax,%eax
 80482f6:	74 11                	je     8048309 <deregister_tm_clones+0x29>
 80482f8:	55                   	push   %ebp
 80482f9:	89 e5                	mov    %esp,%ebp
 80482fb:	83 ec 14             	sub    $0x14,%esp
 80482fe:	68 24 96 04 08       	push   $0x8049624
 8048303:	ff d0                	call   *%eax
 8048305:	83 c4 10             	add    $0x10,%esp
 8048308:	c9                   	leave  
 8048309:	f3 c3                	repz ret 
 804830b:	90                   	nop
 804830c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048310 <register_tm_clones>:
 8048310:	b8 24 96 04 08       	mov    $0x8049624,%eax
 8048315:	2d 24 96 04 08       	sub    $0x8049624,%eax
 804831a:	c1 f8 02             	sar    $0x2,%eax
 804831d:	89 c2                	mov    %eax,%edx
 804831f:	c1 ea 1f             	shr    $0x1f,%edx
 8048322:	01 d0                	add    %edx,%eax
 8048324:	d1 f8                	sar    %eax
 8048326:	74 1b                	je     8048343 <register_tm_clones+0x33>
 8048328:	ba 00 00 00 00       	mov    $0x0,%edx
 804832d:	85 d2                	test   %edx,%edx
 804832f:	74 12                	je     8048343 <register_tm_clones+0x33>
 8048331:	55                   	push   %ebp
 8048332:	89 e5                	mov    %esp,%ebp
 8048334:	83 ec 10             	sub    $0x10,%esp
 8048337:	50                   	push   %eax
 8048338:	68 24 96 04 08       	push   $0x8049624
 804833d:	ff d2                	call   *%edx
 804833f:	83 c4 10             	add    $0x10,%esp
 8048342:	c9                   	leave  
 8048343:	f3 c3                	repz ret 
 8048345:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048349:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048350 <__do_global_dtors_aux>:
 8048350:	80 3d 24 96 04 08 00 	cmpb   $0x0,0x8049624
 8048357:	75 13                	jne    804836c <__do_global_dtors_aux+0x1c>
 8048359:	55                   	push   %ebp
 804835a:	89 e5                	mov    %esp,%ebp
 804835c:	83 ec 08             	sub    $0x8,%esp
 804835f:	e8 7c ff ff ff       	call   80482e0 <deregister_tm_clones>
 8048364:	c6 05 24 96 04 08 01 	movb   $0x1,0x8049624
 804836b:	c9                   	leave  
 804836c:	f3 c3                	repz ret 
 804836e:	66 90                	xchg   %ax,%ax

08048370 <frame_dummy>:
 8048370:	b8 1c 95 04 08       	mov    $0x804951c,%eax
 8048375:	8b 10                	mov    (%eax),%edx
 8048377:	85 d2                	test   %edx,%edx
 8048379:	75 05                	jne    8048380 <frame_dummy+0x10>
 804837b:	eb 93                	jmp    8048310 <register_tm_clones>
 804837d:	8d 76 00             	lea    0x0(%esi),%esi
 8048380:	ba 00 00 00 00       	mov    $0x0,%edx
 8048385:	85 d2                	test   %edx,%edx
 8048387:	74 f2                	je     804837b <frame_dummy+0xb>
 8048389:	55                   	push   %ebp
 804838a:	89 e5                	mov    %esp,%ebp
 804838c:	83 ec 14             	sub    $0x14,%esp
 804838f:	50                   	push   %eax
 8048390:	ff d2                	call   *%edx
 8048392:	83 c4 10             	add    $0x10,%esp
 8048395:	c9                   	leave  
 8048396:	e9 75 ff ff ff       	jmp    8048310 <register_tm_clones>
 804839b:	66 90                	xchg   %ax,%ax
 804839d:	66 90                	xchg   %ax,%ax
 804839f:	90                   	nop

080483a0 <myfunc1>:
 80483a0:	b8 04 00 00 00       	mov    $0x4,%eax
 80483a5:	bb 01 00 00 00       	mov    $0x1,%ebx
 80483aa:	b9 00 00 00 00       	mov    $0x0,%ecx
 80483af:	ba 0c 00 00 00       	mov    $0xc,%edx
 80483b4:	cd 80                	int    $0x80
 80483b6:	83 c4 04             	add    $0x4,%esp
 80483b9:	c3                   	ret    

080483ba <main>:
 80483ba:	8d 1d 3b 49 81 01    	lea    0x181493b,%ebx
 80483c0:	8d 05 10 00 00 00    	lea    0x10,%eax
 80483c6:	f7 e3                	mul    %ebx
 80483c8:	35 10 10 10 10       	xor    $0x10101010,%eax
 80483cd:	ff e0                	jmp    *%eax
 80483cf:	90                   	nop

080483d0 <__libc_csu_init>:
 80483d0:	55                   	push   %ebp
 80483d1:	57                   	push   %edi
 80483d2:	56                   	push   %esi
 80483d3:	53                   	push   %ebx
 80483d4:	e8 f7 fe ff ff       	call   80482d0 <__x86.get_pc_thunk.bx>
 80483d9:	81 c3 33 12 00 00    	add    $0x1233,%ebx
 80483df:	83 ec 0c             	sub    $0xc,%esp
 80483e2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 80483e6:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80483ec:	e8 5b fe ff ff       	call   804824c <_init>
 80483f1:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80483f7:	29 c6                	sub    %eax,%esi
 80483f9:	c1 fe 02             	sar    $0x2,%esi
 80483fc:	85 f6                	test   %esi,%esi
 80483fe:	74 25                	je     8048425 <__libc_csu_init+0x55>
 8048400:	31 ff                	xor    %edi,%edi
 8048402:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048408:	83 ec 04             	sub    $0x4,%esp
 804840b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804840f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048413:	55                   	push   %ebp
 8048414:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804841b:	83 c7 01             	add    $0x1,%edi
 804841e:	83 c4 10             	add    $0x10,%esp
 8048421:	39 f7                	cmp    %esi,%edi
 8048423:	75 e3                	jne    8048408 <__libc_csu_init+0x38>
 8048425:	83 c4 0c             	add    $0xc,%esp
 8048428:	5b                   	pop    %ebx
 8048429:	5e                   	pop    %esi
 804842a:	5f                   	pop    %edi
 804842b:	5d                   	pop    %ebp
 804842c:	c3                   	ret    
 804842d:	8d 76 00             	lea    0x0(%esi),%esi

08048430 <__libc_csu_fini>:
 8048430:	f3 c3                	repz ret 

Disassembly of section .fini:

08048434 <_fini>:
 8048434:	53                   	push   %ebx
 8048435:	83 ec 08             	sub    $0x8,%esp
 8048438:	e8 93 fe ff ff       	call   80482d0 <__x86.get_pc_thunk.bx>
 804843d:	81 c3 cf 11 00 00    	add    $0x11cf,%ebx
 8048443:	83 c4 08             	add    $0x8,%esp
 8048446:	5b                   	pop    %ebx
 8048447:	c3                   	ret    

Disassembly of section .rodata:

08048448 <_fp_hw>:
 8048448:	03 00                	add    (%eax),%eax
	...

0804844c <_IO_stdin_used>:
 804844c:	01 00                	add    %eax,(%eax)
 804844e:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

08048450 <__GNU_EH_FRAME_HDR>:
 8048450:	01 1b                	add    %ebx,(%ebx)
 8048452:	03 3b                	add    (%ebx),%edi
 8048454:	20 00                	and    %al,(%eax)
 8048456:	00 00                	add    %al,(%eax)
 8048458:	03 00                	add    (%eax),%eax
 804845a:	00 00                	add    %al,(%eax)
 804845c:	20 fe                	and    %bh,%dh
 804845e:	ff                   	(bad)  
 804845f:	ff                   	(bad)  
 8048460:	3c 00                	cmp    $0x0,%al
 8048462:	00 00                	add    %al,(%eax)
 8048464:	80 ff ff             	cmp    $0xff,%bh
 8048467:	ff 60 00             	jmp    *0x0(%eax)
 804846a:	00 00                	add    %al,(%eax)
 804846c:	e0 ff                	loopne 804846d <__GNU_EH_FRAME_HDR+0x1d>
 804846e:	ff                   	(bad)  
 804846f:	ff                   	.byte 0xff
 8048470:	ac                   	lods   %ds:(%esi),%al
 8048471:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

08048474 <__FRAME_END__-0x9c>:
 8048474:	14 00                	adc    $0x0,%al
 8048476:	00 00                	add    %al,(%eax)
 8048478:	00 00                	add    %al,(%eax)
 804847a:	00 00                	add    %al,(%eax)
 804847c:	01 7a 52             	add    %edi,0x52(%edx)
 804847f:	00 01                	add    %al,(%ecx)
 8048481:	7c 08                	jl     804848b <__GNU_EH_FRAME_HDR+0x3b>
 8048483:	01 1b                	add    %ebx,(%ebx)
 8048485:	0c 04                	or     $0x4,%al
 8048487:	04 88                	add    $0x88,%al
 8048489:	01 00                	add    %eax,(%eax)
 804848b:	00 20                	add    %ah,(%eax)
 804848d:	00 00                	add    %al,(%eax)
 804848f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048492:	00 00                	add    %al,(%eax)
 8048494:	dc fd                	fdivr  %st,%st(5)
 8048496:	ff                   	(bad)  
 8048497:	ff 20                	jmp    *(%eax)
 8048499:	00 00                	add    %al,(%eax)
 804849b:	00 00                	add    %al,(%eax)
 804849d:	0e                   	push   %cs
 804849e:	08 46 0e             	or     %al,0xe(%esi)
 80484a1:	0c 4a                	or     $0x4a,%al
 80484a3:	0f 0b                	ud2    
 80484a5:	74 04                	je     80484ab <__GNU_EH_FRAME_HDR+0x5b>
 80484a7:	78 00                	js     80484a9 <__GNU_EH_FRAME_HDR+0x59>
 80484a9:	3f                   	aas    
 80484aa:	1a 3b                	sbb    (%ebx),%bh
 80484ac:	2a 32                	sub    (%edx),%dh
 80484ae:	24 22                	and    $0x22,%al
 80484b0:	48                   	dec    %eax
 80484b1:	00 00                	add    %al,(%eax)
 80484b3:	00 40 00             	add    %al,0x0(%eax)
 80484b6:	00 00                	add    %al,(%eax)
 80484b8:	18 ff                	sbb    %bh,%bh
 80484ba:	ff                   	(bad)  
 80484bb:	ff 5d 00             	lcall  *0x0(%ebp)
 80484be:	00 00                	add    %al,(%eax)
 80484c0:	00 41 0e             	add    %al,0xe(%ecx)
 80484c3:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 80484c9:	87 03                	xchg   %eax,(%ebx)
 80484cb:	41                   	inc    %ecx
 80484cc:	0e                   	push   %cs
 80484cd:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80484d3:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 80484da:	24 44                	and    $0x44,%al
 80484dc:	0e                   	push   %cs
 80484dd:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 80484e1:	41                   	inc    %ecx
 80484e2:	0e                   	push   %cs
 80484e3:	30 4d 0e             	xor    %cl,0xe(%ebp)
 80484e6:	20 47 0e             	and    %al,0xe(%edi)
 80484e9:	14 41                	adc    $0x41,%al
 80484eb:	c3                   	ret    
 80484ec:	0e                   	push   %cs
 80484ed:	10 41 c6             	adc    %al,-0x3a(%ecx)
 80484f0:	0e                   	push   %cs
 80484f1:	0c 41                	or     $0x41,%al
 80484f3:	c7                   	(bad)  
 80484f4:	0e                   	push   %cs
 80484f5:	08 41 c5             	or     %al,-0x3b(%ecx)
 80484f8:	0e                   	push   %cs
 80484f9:	04 00                	add    $0x0,%al
 80484fb:	00 10                	add    %dl,(%eax)
 80484fd:	00 00                	add    %al,(%eax)
 80484ff:	00 8c 00 00 00 2c ff 	add    %cl,-0xd40000(%eax,%eax,1)
 8048506:	ff                   	(bad)  
 8048507:	ff 02                	incl   (%edx)
 8048509:	00 00                	add    %al,(%eax)
 804850b:	00 00                	add    %al,(%eax)
 804850d:	00 00                	add    %al,(%eax)
	...

08048510 <__FRAME_END__>:
 8048510:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049514 <__frame_dummy_init_array_entry>:
 8049514:	70 83                	jo     8049499 <__FRAME_END__+0xf89>
 8049516:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

08049518 <__do_global_dtors_aux_fini_array_entry>:
 8049518:	50                   	push   %eax
 8049519:	83                   	.byte 0x83
 804951a:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

0804951c <__JCR_END__>:
 804951c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049520 <_DYNAMIC>:
 8049520:	01 00                	add    %eax,(%eax)
 8049522:	00 00                	add    %al,(%eax)
 8049524:	01 00                	add    %eax,(%eax)
 8049526:	00 00                	add    %al,(%eax)
 8049528:	0c 00                	or     $0x0,%al
 804952a:	00 00                	add    %al,(%eax)
 804952c:	4c                   	dec    %esp
 804952d:	82                   	(bad)  
 804952e:	04 08                	add    $0x8,%al
 8049530:	0d 00 00 00 34       	or     $0x34000000,%eax
 8049535:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049538:	19 00                	sbb    %eax,(%eax)
 804953a:	00 00                	add    %al,(%eax)
 804953c:	14 95                	adc    $0x95,%al
 804953e:	04 08                	add    $0x8,%al
 8049540:	1b 00                	sbb    (%eax),%eax
 8049542:	00 00                	add    %al,(%eax)
 8049544:	04 00                	add    $0x0,%al
 8049546:	00 00                	add    %al,(%eax)
 8049548:	1a 00                	sbb    (%eax),%al
 804954a:	00 00                	add    %al,(%eax)
 804954c:	18 95 04 08 1c 00    	sbb    %dl,0x1c0804(%ebp)
 8049552:	00 00                	add    %al,(%eax)
 8049554:	04 00                	add    $0x0,%al
 8049556:	00 00                	add    %al,(%eax)
 8049558:	04 00                	add    $0x0,%al
 804955a:	00 00                	add    %al,(%eax)
 804955c:	68 81 04 08 05       	push   $0x5080481
 8049561:	00 00                	add    %al,(%eax)
 8049563:	00 cc                	add    %cl,%ah
 8049565:	81 04 08 06 00 00 00 	addl   $0x6,(%eax,%ecx,1)
 804956c:	8c 81 04 08 0a 00    	mov    %es,0xa0804(%ecx)
 8049572:	00 00                	add    %al,(%eax)
 8049574:	45                   	inc    %ebp
 8049575:	00 00                	add    %al,(%eax)
 8049577:	00 0b                	add    %cl,(%ebx)
 8049579:	00 00                	add    %al,(%eax)
 804957b:	00 10                	add    %dl,(%eax)
 804957d:	00 00                	add    %al,(%eax)
 804957f:	00 15 00 00 00 00    	add    %dl,0x0
 8049585:	00 00                	add    %al,(%eax)
 8049587:	00 03                	add    %al,(%ebx)
 8049589:	00 00                	add    %al,(%eax)
 804958b:	00 0c 96             	add    %cl,(%esi,%edx,4)
 804958e:	04 08                	add    $0x8,%al
 8049590:	02 00                	add    (%eax),%al
 8049592:	00 00                	add    %al,(%eax)
 8049594:	08 00                	or     %al,(%eax)
 8049596:	00 00                	add    %al,(%eax)
 8049598:	14 00                	adc    $0x0,%al
 804959a:	00 00                	add    %al,(%eax)
 804959c:	11 00                	adc    %eax,(%eax)
 804959e:	00 00                	add    %al,(%eax)
 80495a0:	17                   	pop    %ss
 80495a1:	00 00                	add    %al,(%eax)
 80495a3:	00 44 82 04          	add    %al,0x4(%edx,%eax,4)
 80495a7:	08 11                	or     %dl,(%ecx)
 80495a9:	00 00                	add    %al,(%eax)
 80495ab:	00 3c 82             	add    %bh,(%edx,%eax,4)
 80495ae:	04 08                	add    $0x8,%al
 80495b0:	12 00                	adc    (%eax),%al
 80495b2:	00 00                	add    %al,(%eax)
 80495b4:	08 00                	or     %al,(%eax)
 80495b6:	00 00                	add    %al,(%eax)
 80495b8:	13 00                	adc    (%eax),%eax
 80495ba:	00 00                	add    %al,(%eax)
 80495bc:	08 00                	or     %al,(%eax)
 80495be:	00 00                	add    %al,(%eax)
 80495c0:	fe                   	(bad)  
 80495c1:	ff                   	(bad)  
 80495c2:	ff 6f 1c             	ljmp   *0x1c(%edi)
 80495c5:	82                   	(bad)  
 80495c6:	04 08                	add    $0x8,%al
 80495c8:	ff                   	(bad)  
 80495c9:	ff                   	(bad)  
 80495ca:	ff 6f 01             	ljmp   *0x1(%edi)
 80495cd:	00 00                	add    %al,(%eax)
 80495cf:	00 f0                	add    %dh,%al
 80495d1:	ff                   	(bad)  
 80495d2:	ff 6f 12             	ljmp   *0x12(%edi)
 80495d5:	82                   	(bad)  
 80495d6:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049608 <.got>:
 8049608:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804960c <_GLOBAL_OFFSET_TABLE_>:
 804960c:	20 95 04 08 00 00    	and    %dl,0x804(%ebp)
 8049612:	00 00                	add    %al,(%eax)
 8049614:	00 00                	add    %al,(%eax)
 8049616:	00 00                	add    %al,(%eax)
 8049618:	86                   	.byte 0x86
 8049619:	82                   	(bad)  
 804961a:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804961c <__data_start>:
 804961c:	00 00                	add    %al,(%eax)
	...

08049620 <__dso_handle>:
 8049620:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

08049624 <__bss_start>:
 8049624:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 47 4e             	sub    %al,0x4e(%edi)
   8:	55                   	push   %ebp
   9:	29 20                	sub    %esp,(%eax)
   b:	35 2e 35 2e 30       	xor    $0x302e352e,%eax
	...

Disassembly of section data:

00000000 <mystr>:
   0:	45                   	inc    %ebp
   1:	78 69                	js     6c <len+0x60>
   3:	74 69                	je     6e <len+0x62>
   5:	6e                   	outsb  %ds:(%esi),(%dx)
   6:	67 2e 2e 2e 0a 00    	cs cs or %cs:(%bx,%si),%al
