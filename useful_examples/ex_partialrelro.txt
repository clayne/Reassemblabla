
ex_partialrelro:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 20                	add    %ah,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .hash:

08048188 <.hash>:
 8048188:	03 00                	add    (%eax),%eax
 804818a:	00 00                	add    %al,(%eax)
 804818c:	05 00 00 00 02       	add    $0x2000000,%eax
 8048191:	00 00                	add    %al,(%eax)
 8048193:	00 04 00             	add    %al,(%eax,%eax,1)
 8048196:	00 00                	add    %al,(%eax)
 8048198:	03 00                	add    (%eax),%eax
	...
 80481a6:	00 00                	add    %al,(%eax)
 80481a8:	01 00                	add    %eax,(%eax)
 80481aa:	00 00                	add    %al,(%eax)
 80481ac:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynsym:

080481b0 <.dynsym>:
	...
 80481c0:	1a 00                	sbb    (%eax),%al
	...
 80481ca:	00 00                	add    %al,(%eax)
 80481cc:	12 00                	adc    (%eax),%al
 80481ce:	00 00                	add    %al,(%eax)
 80481d0:	33 00                	xor    (%eax),%eax
	...
 80481da:	00 00                	add    %al,(%eax)
 80481dc:	20 00                	and    %al,(%eax)
 80481de:	00 00                	add    %al,(%eax)
 80481e0:	0b 00                	or     (%eax),%eax
 80481e2:	00 00                	add    %al,(%eax)
 80481e4:	ac                   	lods   %ds:(%esi),%al
 80481e5:	84 04 08             	test   %al,(%eax,%ecx,1)
 80481e8:	04 00                	add    $0x0,%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	11 00                	adc    %eax,(%eax)
 80481ee:	0f 00 21             	verr   (%ecx)
	...
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 12                	add    %dl,(%edx)
 80481fd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynstr:

08048200 <.dynstr>:
 8048200:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048204:	63 2e                	arpl   %bp,(%esi)
 8048206:	73 6f                	jae    8048277 <_init-0x19>
 8048208:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 804820d:	4f                   	dec    %edi
 804820e:	5f                   	pop    %edi
 804820f:	73 74                	jae    8048285 <_init-0xb>
 8048211:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048218:	64 
 8048219:	00 70 72             	add    %dh,0x72(%eax)
 804821c:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 8048223:	6c                   	insb   (%dx),%es:(%edi)
 8048224:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804822b:	72 74                	jb     80482a1 <_init+0x11>
 804822d:	5f                   	pop    %edi
 804822e:	6d                   	insl   (%dx),%es:(%edi)
 804822f:	61                   	popa   
 8048230:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 8048237:	6f                   	outsl  %ds:(%esi),(%dx)
 8048238:	6e                   	outsb  %ds:(%esi),(%dx)
 8048239:	5f                   	pop    %edi
 804823a:	73 74                	jae    80482b0 <_init+0x20>
 804823c:	61                   	popa   
 804823d:	72 74                	jb     80482b3 <_init+0x23>
 804823f:	5f                   	pop    %edi
 8048240:	5f                   	pop    %edi
 8048241:	00 47 4c             	add    %al,0x4c(%edi)
 8048244:	49                   	dec    %ecx
 8048245:	42                   	inc    %edx
 8048246:	43                   	inc    %ebx
 8048247:	5f                   	pop    %edi
 8048248:	32 2e                	xor    (%esi),%ch
 804824a:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

0804824c <.gnu.version>:
 804824c:	00 00                	add    %al,(%eax)
 804824e:	02 00                	add    (%eax),%al
 8048250:	00 00                	add    %al,(%eax)
 8048252:	01 00                	add    %eax,(%eax)
 8048254:	02 00                	add    (%eax),%al

Disassembly of section .gnu.version_r:

08048258 <.gnu.version_r>:
 8048258:	01 00                	add    %eax,(%eax)
 804825a:	01 00                	add    %eax,(%eax)
 804825c:	01 00                	add    %eax,(%eax)
 804825e:	00 00                	add    %al,(%eax)
 8048260:	10 00                	adc    %al,(%eax)
 8048262:	00 00                	add    %al,(%eax)
 8048264:	00 00                	add    %al,(%eax)
 8048266:	00 00                	add    %al,(%eax)
 8048268:	10 69 69             	adc    %ch,0x69(%ecx)
 804826b:	0d 00 00 02 00       	or     $0x20000,%eax
 8048270:	42                   	inc    %edx
 8048271:	00 00                	add    %al,(%eax)
 8048273:	00 00                	add    %al,(%eax)
 8048275:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048278 <.rel.dyn>:
 8048278:	fc                   	cld    
 8048279:	9f                   	lahf   
 804827a:	04 08                	add    $0x8,%al
 804827c:	06                   	push   %es
 804827d:	02 00                	add    (%eax),%al
	...

Disassembly of section .rel.plt:

08048280 <.rel.plt>:
 8048280:	0c a0                	or     $0xa0,%al
 8048282:	04 08                	add    $0x8,%al
 8048284:	07                   	pop    %es
 8048285:	01 00                	add    %eax,(%eax)
 8048287:	00 10                	add    %dl,(%eax)
 8048289:	a0 04 08 07 04       	mov    0x4070804,%al
	...

Disassembly of section .init:

08048290 <_init>:
 8048290:	53                   	push   %ebx
 8048291:	83 ec 08             	sub    $0x8,%esp
 8048294:	e8 97 00 00 00       	call   8048330 <__x86.get_pc_thunk.bx>
 8048299:	81 c3 67 1d 00 00    	add    $0x1d67,%ebx
 804829f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482a5:	85 c0                	test   %eax,%eax
 80482a7:	74 05                	je     80482ae <_init+0x1e>
 80482a9:	e8 42 00 00 00       	call   80482f0 <__libc_start_main@plt+0x10>
 80482ae:	83 c4 08             	add    $0x8,%esp
 80482b1:	5b                   	pop    %ebx
 80482b2:	c3                   	ret    

Disassembly of section .plt:

080482c0 <printf@plt-0x10>:
 80482c0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80482c6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80482cc:	00 00                	add    %al,(%eax)
	...

080482d0 <printf@plt>:
 80482d0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80482d6:	68 00 00 00 00       	push   $0x0
 80482db:	e9 e0 ff ff ff       	jmp    80482c0 <_init+0x30>

080482e0 <__libc_start_main@plt>:
 80482e0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80482e6:	68 08 00 00 00       	push   $0x8
 80482eb:	e9 d0 ff ff ff       	jmp    80482c0 <_init+0x30>

Disassembly of section .plt.got:

080482f0 <.plt.got>:
 80482f0:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482f6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048300 <_start>:
 8048300:	31 ed                	xor    %ebp,%ebp
 8048302:	5e                   	pop    %esi
 8048303:	89 e1                	mov    %esp,%ecx
 8048305:	83 e4 f0             	and    $0xfffffff0,%esp
 8048308:	50                   	push   %eax
 8048309:	54                   	push   %esp
 804830a:	52                   	push   %edx
 804830b:	68 90 84 04 08       	push   $0x8048490
 8048310:	68 30 84 04 08       	push   $0x8048430
 8048315:	51                   	push   %ecx
 8048316:	56                   	push   %esi
 8048317:	68 fb 83 04 08       	push   $0x80483fb
 804831c:	e8 bf ff ff ff       	call   80482e0 <__libc_start_main@plt>
 8048321:	f4                   	hlt    
 8048322:	66 90                	xchg   %ax,%ax
 8048324:	66 90                	xchg   %ax,%ax
 8048326:	66 90                	xchg   %ax,%ax
 8048328:	66 90                	xchg   %ax,%ax
 804832a:	66 90                	xchg   %ax,%ax
 804832c:	66 90                	xchg   %ax,%ax
 804832e:	66 90                	xchg   %ax,%ax

08048330 <__x86.get_pc_thunk.bx>:
 8048330:	8b 1c 24             	mov    (%esp),%ebx
 8048333:	c3                   	ret    
 8048334:	66 90                	xchg   %ax,%ax
 8048336:	66 90                	xchg   %ax,%ax
 8048338:	66 90                	xchg   %ax,%ax
 804833a:	66 90                	xchg   %ax,%ax
 804833c:	66 90                	xchg   %ax,%ax
 804833e:	66 90                	xchg   %ax,%ax

08048340 <deregister_tm_clones>:
 8048340:	b8 1f a0 04 08       	mov    $0x804a01f,%eax
 8048345:	2d 1c a0 04 08       	sub    $0x804a01c,%eax
 804834a:	83 f8 06             	cmp    $0x6,%eax
 804834d:	76 1a                	jbe    8048369 <deregister_tm_clones+0x29>
 804834f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048354:	85 c0                	test   %eax,%eax
 8048356:	74 11                	je     8048369 <deregister_tm_clones+0x29>
 8048358:	55                   	push   %ebp
 8048359:	89 e5                	mov    %esp,%ebp
 804835b:	83 ec 14             	sub    $0x14,%esp
 804835e:	68 1c a0 04 08       	push   $0x804a01c
 8048363:	ff d0                	call   *%eax
 8048365:	83 c4 10             	add    $0x10,%esp
 8048368:	c9                   	leave  
 8048369:	f3 c3                	repz ret 
 804836b:	90                   	nop
 804836c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048370 <register_tm_clones>:
 8048370:	b8 1c a0 04 08       	mov    $0x804a01c,%eax
 8048375:	2d 1c a0 04 08       	sub    $0x804a01c,%eax
 804837a:	c1 f8 02             	sar    $0x2,%eax
 804837d:	89 c2                	mov    %eax,%edx
 804837f:	c1 ea 1f             	shr    $0x1f,%edx
 8048382:	01 d0                	add    %edx,%eax
 8048384:	d1 f8                	sar    %eax
 8048386:	74 1b                	je     80483a3 <register_tm_clones+0x33>
 8048388:	ba 00 00 00 00       	mov    $0x0,%edx
 804838d:	85 d2                	test   %edx,%edx
 804838f:	74 12                	je     80483a3 <register_tm_clones+0x33>
 8048391:	55                   	push   %ebp
 8048392:	89 e5                	mov    %esp,%ebp
 8048394:	83 ec 10             	sub    $0x10,%esp
 8048397:	50                   	push   %eax
 8048398:	68 1c a0 04 08       	push   $0x804a01c
 804839d:	ff d2                	call   *%edx
 804839f:	83 c4 10             	add    $0x10,%esp
 80483a2:	c9                   	leave  
 80483a3:	f3 c3                	repz ret 
 80483a5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483b0 <__do_global_dtors_aux>:
 80483b0:	80 3d 1c a0 04 08 00 	cmpb   $0x0,0x804a01c
 80483b7:	75 13                	jne    80483cc <__do_global_dtors_aux+0x1c>
 80483b9:	55                   	push   %ebp
 80483ba:	89 e5                	mov    %esp,%ebp
 80483bc:	83 ec 08             	sub    $0x8,%esp
 80483bf:	e8 7c ff ff ff       	call   8048340 <deregister_tm_clones>
 80483c4:	c6 05 1c a0 04 08 01 	movb   $0x1,0x804a01c
 80483cb:	c9                   	leave  
 80483cc:	f3 c3                	repz ret 
 80483ce:	66 90                	xchg   %ax,%ax

080483d0 <frame_dummy>:
 80483d0:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 80483d5:	8b 10                	mov    (%eax),%edx
 80483d7:	85 d2                	test   %edx,%edx
 80483d9:	75 05                	jne    80483e0 <frame_dummy+0x10>
 80483db:	eb 93                	jmp    8048370 <register_tm_clones>
 80483dd:	8d 76 00             	lea    0x0(%esi),%esi
 80483e0:	ba 00 00 00 00       	mov    $0x0,%edx
 80483e5:	85 d2                	test   %edx,%edx
 80483e7:	74 f2                	je     80483db <frame_dummy+0xb>
 80483e9:	55                   	push   %ebp
 80483ea:	89 e5                	mov    %esp,%ebp
 80483ec:	83 ec 14             	sub    $0x14,%esp
 80483ef:	50                   	push   %eax
 80483f0:	ff d2                	call   *%edx
 80483f2:	83 c4 10             	add    $0x10,%esp
 80483f5:	c9                   	leave  
 80483f6:	e9 75 ff ff ff       	jmp    8048370 <register_tm_clones>

080483fb <main>:
 80483fb:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80483ff:	83 e4 f0             	and    $0xfffffff0,%esp
 8048402:	ff 71 fc             	pushl  -0x4(%ecx)
 8048405:	55                   	push   %ebp
 8048406:	89 e5                	mov    %esp,%ebp
 8048408:	51                   	push   %ecx
 8048409:	83 ec 04             	sub    $0x4,%esp
 804840c:	83 ec 0c             	sub    $0xc,%esp
 804840f:	68 b0 84 04 08       	push   $0x80484b0
 8048414:	e8 b7 fe ff ff       	call   80482d0 <printf@plt>
 8048419:	83 c4 10             	add    $0x10,%esp
 804841c:	90                   	nop
 804841d:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 8048420:	c9                   	leave  
 8048421:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048424:	c3                   	ret    
 8048425:	66 90                	xchg   %ax,%ax
 8048427:	66 90                	xchg   %ax,%ax
 8048429:	66 90                	xchg   %ax,%ax
 804842b:	66 90                	xchg   %ax,%ax
 804842d:	66 90                	xchg   %ax,%ax
 804842f:	90                   	nop

08048430 <__libc_csu_init>:
 8048430:	55                   	push   %ebp
 8048431:	57                   	push   %edi
 8048432:	56                   	push   %esi
 8048433:	53                   	push   %ebx
 8048434:	e8 f7 fe ff ff       	call   8048330 <__x86.get_pc_thunk.bx>
 8048439:	81 c3 c7 1b 00 00    	add    $0x1bc7,%ebx
 804843f:	83 ec 0c             	sub    $0xc,%esp
 8048442:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048446:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804844c:	e8 3f fe ff ff       	call   8048290 <_init>
 8048451:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048457:	29 c6                	sub    %eax,%esi
 8048459:	c1 fe 02             	sar    $0x2,%esi
 804845c:	85 f6                	test   %esi,%esi
 804845e:	74 25                	je     8048485 <__libc_csu_init+0x55>
 8048460:	31 ff                	xor    %edi,%edi
 8048462:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048468:	83 ec 04             	sub    $0x4,%esp
 804846b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804846f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048473:	55                   	push   %ebp
 8048474:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804847b:	83 c7 01             	add    $0x1,%edi
 804847e:	83 c4 10             	add    $0x10,%esp
 8048481:	39 f7                	cmp    %esi,%edi
 8048483:	75 e3                	jne    8048468 <__libc_csu_init+0x38>
 8048485:	83 c4 0c             	add    $0xc,%esp
 8048488:	5b                   	pop    %ebx
 8048489:	5e                   	pop    %esi
 804848a:	5f                   	pop    %edi
 804848b:	5d                   	pop    %ebp
 804848c:	c3                   	ret    
 804848d:	8d 76 00             	lea    0x0(%esi),%esi

08048490 <__libc_csu_fini>:
 8048490:	f3 c3                	repz ret 

Disassembly of section .fini:

08048494 <_fini>:
 8048494:	53                   	push   %ebx
 8048495:	83 ec 08             	sub    $0x8,%esp
 8048498:	e8 93 fe ff ff       	call   8048330 <__x86.get_pc_thunk.bx>
 804849d:	81 c3 63 1b 00 00    	add    $0x1b63,%ebx
 80484a3:	83 c4 08             	add    $0x8,%esp
 80484a6:	5b                   	pop    %ebx
 80484a7:	c3                   	ret    

Disassembly of section .rodata:

080484a8 <_fp_hw>:
 80484a8:	03 00                	add    (%eax),%eax
	...

080484ac <_IO_stdin_used>:
 80484ac:	01 00                	add    %eax,(%eax)
 80484ae:	02 00                	add    (%eax),%al
 80484b0:	67 6f                	outsl  %ds:(%si),(%dx)
	...

Disassembly of section .eh_frame_hdr:

080484b4 <__GNU_EH_FRAME_HDR>:
 80484b4:	01 1b                	add    %ebx,(%ebx)
 80484b6:	03 3b                	add    (%ebx),%edi
 80484b8:	28 00                	sub    %al,(%eax)
 80484ba:	00 00                	add    %al,(%eax)
 80484bc:	04 00                	add    $0x0,%al
 80484be:	00 00                	add    %al,(%eax)
 80484c0:	0c fe                	or     $0xfe,%al
 80484c2:	ff                   	(bad)  
 80484c3:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 80484c7:	00 47 ff             	add    %al,-0x1(%edi)
 80484ca:	ff                   	(bad)  
 80484cb:	ff 68 00             	ljmp   *0x0(%eax)
 80484ce:	00 00                	add    %al,(%eax)
 80484d0:	7c ff                	jl     80484d1 <__GNU_EH_FRAME_HDR+0x1d>
 80484d2:	ff                   	(bad)  
 80484d3:	ff 94 00 00 00 dc ff 	call   *-0x240000(%eax,%eax,1)
 80484da:	ff                   	(bad)  
 80484db:	ff e0                	jmp    *%eax
 80484dd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

080484e0 <__FRAME_END__-0xc8>:
 80484e0:	14 00                	adc    $0x0,%al
 80484e2:	00 00                	add    %al,(%eax)
 80484e4:	00 00                	add    %al,(%eax)
 80484e6:	00 00                	add    %al,(%eax)
 80484e8:	01 7a 52             	add    %edi,0x52(%edx)
 80484eb:	00 01                	add    %al,(%ecx)
 80484ed:	7c 08                	jl     80484f7 <__GNU_EH_FRAME_HDR+0x43>
 80484ef:	01 1b                	add    %ebx,(%ebx)
 80484f1:	0c 04                	or     $0x4,%al
 80484f3:	04 88                	add    $0x88,%al
 80484f5:	01 00                	add    %eax,(%eax)
 80484f7:	00 20                	add    %ah,(%eax)
 80484f9:	00 00                	add    %al,(%eax)
 80484fb:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80484fe:	00 00                	add    %al,(%eax)
 8048500:	c0 fd ff             	sar    $0xff,%ch
 8048503:	ff 30                	pushl  (%eax)
 8048505:	00 00                	add    %al,(%eax)
 8048507:	00 00                	add    %al,(%eax)
 8048509:	0e                   	push   %cs
 804850a:	08 46 0e             	or     %al,0xe(%esi)
 804850d:	0c 4a                	or     $0x4a,%al
 804850f:	0f 0b                	ud2    
 8048511:	74 04                	je     8048517 <__GNU_EH_FRAME_HDR+0x63>
 8048513:	78 00                	js     8048515 <__GNU_EH_FRAME_HDR+0x61>
 8048515:	3f                   	aas    
 8048516:	1a 3b                	sbb    (%ebx),%bh
 8048518:	2a 32                	sub    (%edx),%dh
 804851a:	24 22                	and    $0x22,%al
 804851c:	28 00                	sub    %al,(%eax)
 804851e:	00 00                	add    %al,(%eax)
 8048520:	40                   	inc    %eax
 8048521:	00 00                	add    %al,(%eax)
 8048523:	00 d7                	add    %dl,%bh
 8048525:	fe                   	(bad)  
 8048526:	ff                   	(bad)  
 8048527:	ff 2a                	ljmp   *(%edx)
 8048529:	00 00                	add    %al,(%eax)
 804852b:	00 00                	add    %al,(%eax)
 804852d:	44                   	inc    %esp
 804852e:	0c 01                	or     $0x1,%al
 8048530:	00 47 10             	add    %al,0x10(%edi)
 8048533:	05 02 75 00 43       	add    $0x43007502,%eax
 8048538:	0f 03 75 7c          	lsl    0x7c(%ebp),%esi
 804853c:	06                   	push   %es
 804853d:	57                   	push   %edi
 804853e:	0c 01                	or     $0x1,%al
 8048540:	00 41 c5             	add    %al,-0x3b(%ecx)
 8048543:	43                   	inc    %ebx
 8048544:	0c 04                	or     $0x4,%al
 8048546:	04 00                	add    $0x0,%al
 8048548:	48                   	dec    %eax
 8048549:	00 00                	add    %al,(%eax)
 804854b:	00 6c 00 00          	add    %ch,0x0(%eax,%eax,1)
 804854f:	00 e0                	add    %ah,%al
 8048551:	fe                   	(bad)  
 8048552:	ff                   	(bad)  
 8048553:	ff 5d 00             	lcall  *0x0(%ebp)
 8048556:	00 00                	add    %al,(%eax)
 8048558:	00 41 0e             	add    %al,0xe(%ecx)
 804855b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048561:	87 03                	xchg   %eax,(%ebx)
 8048563:	41                   	inc    %ecx
 8048564:	0e                   	push   %cs
 8048565:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804856b:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 8048572:	24 44                	and    $0x44,%al
 8048574:	0e                   	push   %cs
 8048575:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048579:	41                   	inc    %ecx
 804857a:	0e                   	push   %cs
 804857b:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804857e:	20 47 0e             	and    %al,0xe(%edi)
 8048581:	14 41                	adc    $0x41,%al
 8048583:	c3                   	ret    
 8048584:	0e                   	push   %cs
 8048585:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048588:	0e                   	push   %cs
 8048589:	0c 41                	or     $0x41,%al
 804858b:	c7                   	(bad)  
 804858c:	0e                   	push   %cs
 804858d:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048590:	0e                   	push   %cs
 8048591:	04 00                	add    $0x0,%al
 8048593:	00 10                	add    %dl,(%eax)
 8048595:	00 00                	add    %al,(%eax)
 8048597:	00 b8 00 00 00 f4    	add    %bh,-0xc000000(%eax)
 804859d:	fe                   	(bad)  
 804859e:	ff                   	(bad)  
 804859f:	ff 02                	incl   (%edx)
 80485a1:	00 00                	add    %al,(%eax)
 80485a3:	00 00                	add    %al,(%eax)
 80485a5:	00 00                	add    %al,(%eax)
	...

080485a8 <__FRAME_END__>:
 80485a8:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	d0                   	.byte 0xd0
 8049f09:	83                   	.byte 0x83
 8049f0a:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	b0 83                	mov    $0x83,%al
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	90                   	nop
 8049f21:	82                   	(bad)  
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 94       	or     $0x94000000,%eax
 8049f29:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	04 00                	add    $0x0,%al
 8049f4e:	00 00                	add    %al,(%eax)
 8049f50:	88 81 04 08 05 00    	mov    %al,0x50804(%ecx)
 8049f56:	00 00                	add    %al,(%eax)
 8049f58:	00 82 04 08 06 00    	add    %al,0x60804(%edx)
 8049f5e:	00 00                	add    %al,(%eax)
 8049f60:	b0 81                	mov    $0x81,%al
 8049f62:	04 08                	add    $0x8,%al
 8049f64:	0a 00                	or     (%eax),%al
 8049f66:	00 00                	add    %al,(%eax)
 8049f68:	4c                   	dec    %esp
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	10 00                	adc    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 80 82 04 08 11    	add    %al,0x11080482(%eax)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 78 82             	add    %bh,-0x7e(%eax)
 8049fa2:	04 08                	add    $0x8,%al
 8049fa4:	12 00                	adc    (%eax),%al
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	08 00                	or     %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 58             	ljmp   *0x58(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 4c             	ljmp   *0x4c(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	d6                   	(bad)  
 804a00d:	82                   	(bad)  
 804a00e:	04 08                	add    $0x8,%al
 804a010:	e6 82                	out    %al,$0x82
 804a012:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a014 <__data_start>:
 804a014:	00 00                	add    %al,(%eax)
	...

0804a018 <__dso_handle>:
 804a018:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a01c <__bss_start>:
 804a01c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 47 4e             	sub    %al,0x4e(%edi)
   8:	55                   	push   %ebp
   9:	29 20                	sub    %esp,(%eax)
   b:	35 2e 35 2e 30       	xor    $0x302e352e,%eax
	...
