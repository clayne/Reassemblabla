
libjiwon.so.1.25:     file format elf32-i386


Disassembly of section .note.gnu.build-id:

00000114 <.note.gnu.build-id>:
 114:	04 00                	add    $0x0,%al
 116:	00 00                	add    %al,(%eax)
 118:	14 00                	adc    $0x0,%al
 11a:	00 00                	add    %al,(%eax)
 11c:	03 00                	add    (%eax),%eax
 11e:	00 00                	add    %al,(%eax)
 120:	47                   	inc    %edi
 121:	4e                   	dec    %esi
 122:	55                   	push   %ebp
 123:	00 d5                	add    %dl,%ch
 125:	cc                   	int3   
 126:	62 4b a0             	bound  %ecx,-0x60(%ebx)
 129:	5a                   	pop    %edx
 12a:	86 0c 72             	xchg   %cl,(%edx,%esi,2)
 12d:	e3 71                	jecxz  1a0 <_init-0x1e0>
 12f:	52                   	push   %edx
 130:	0e                   	push   %cs
 131:	e5 97                	in     $0x97,%eax
 133:	c0                   	(bad)  
 134:	33                   	.byte 0x33
 135:	bd                   	.byte 0xbd
 136:	0f                   	.byte 0xf
 137:	9e                   	sahf   

Disassembly of section .gnu.hash:

00000138 <.gnu.hash>:
 138:	03 00                	add    (%eax),%eax
 13a:	00 00                	add    %al,(%eax)
 13c:	06                   	push   %es
 13d:	00 00                	add    %al,(%eax)
 13f:	00 02                	add    %al,(%edx)
 141:	00 00                	add    %al,(%eax)
 143:	00 06                	add    %al,(%esi)
 145:	00 00                	add    %al,(%eax)
 147:	00 88 01 28 01 00    	add    %cl,0x12801(%eax)
 14d:	c4                   	(bad)  
 14e:	c0 19 06             	rcrb   $0x6,(%ecx)
 151:	00 00                	add    %al,(%eax)
 153:	00 09                	add    %cl,(%ecx)
 155:	00 00                	add    %al,(%eax)
 157:	00 0b                	add    %cl,(%ebx)
 159:	00 00                	add    %al,(%eax)
 15b:	00 12                	add    %dl,(%edx)
 15d:	62 a1 7c 42 45 d5    	bound  %esp,-0x2ababd84(%ecx)
 163:	ec                   	in     (%dx),%al
 164:	bb e3 92 7c d8       	mov    $0xd87c92e3,%ebx
 169:	71 58                	jno    1c3 <_init-0x1bd>
 16b:	1c b9                	sbb    $0xb9,%al
 16d:	8d                   	(bad)  
 16e:	f1                   	icebp  
 16f:	0e                   	push   %cs
 170:	ea d3 ef 0e 37 37 c5 	ljmp   $0xc537,$0x370eefd3
 177:	10                   	.byte 0x10

Disassembly of section .dynsym:

00000178 <.dynsym>:
	...
 188:	1c 00                	sbb    $0x0,%al
	...
 192:	00 00                	add    %al,(%eax)
 194:	20 00                	and    %al,(%eax)
 196:	00 00                	add    %al,(%eax)
 198:	52                   	push   %edx
	...
 1a1:	00 00                	add    %al,(%eax)
 1a3:	00 22                	add    %ah,(%edx)
 1a5:	00 00                	add    %al,(%eax)
 1a7:	00 01                	add    %al,(%ecx)
	...
 1b1:	00 00                	add    %al,(%eax)
 1b3:	00 20                	add    %ah,(%eax)
 1b5:	00 00                	add    %al,(%eax)
 1b7:	00 61 00             	add    %ah,0x0(%ecx)
	...
 1c2:	00 00                	add    %al,(%eax)
 1c4:	20 00                	and    %al,(%eax)
 1c6:	00 00                	add    %al,(%eax)
 1c8:	38 00                	cmp    %al,(%eax)
	...
 1d2:	00 00                	add    %al,(%eax)
 1d4:	20 00                	and    %al,(%eax)
 1d6:	00 00                	add    %al,(%eax)
 1d8:	75 00                	jne    1da <_init-0x1a6>
 1da:	00 00                	add    %al,(%eax)
 1dc:	00 05 00 00 17 00    	add    %al,0x170000
 1e2:	00 00                	add    %al,(%eax)
 1e4:	12 00                	adc    (%eax),%al
 1e6:	0b 00                	or     (%eax),%eax
 1e8:	8a 00                	mov    (%eax),%al
 1ea:	00 00                	add    %al,(%eax)
 1ec:	10 20                	adc    %ah,(%eax)
 1ee:	00 00                	add    %al,(%eax)
 1f0:	00 00                	add    %al,(%eax)
 1f2:	00 00                	add    %al,(%eax)
 1f4:	10 00                	adc    %al,(%eax)
 1f6:	15 00 9d 00 00       	adc    $0x9d00,%eax
 1fb:	00 14 20             	add    %dl,(%eax,%eiz,1)
 1fe:	00 00                	add    %al,(%eax)
 200:	00 00                	add    %al,(%eax)
 202:	00 00                	add    %al,(%eax)
 204:	10 00                	adc    %al,(%eax)
 206:	16                   	push   %ss
 207:	00 91 00 00 00 10    	add    %dl,0x10000000(%ecx)
 20d:	20 00                	and    %al,(%eax)
 20f:	00 00                	add    %al,(%eax)
 211:	00 00                	add    %al,(%eax)
 213:	00 10                	add    %dl,(%eax)
 215:	00 16                	add    %dl,(%esi)
 217:	00 10                	add    %dl,(%eax)
 219:	00 00                	add    %al,(%eax)
 21b:	00 80 03 00 00 00    	add    %al,0x3(%eax)
 221:	00 00                	add    %al,(%eax)
 223:	00 12                	add    %dl,(%edx)
 225:	00 08                	add    %cl,(%eax)
 227:	00 16                	add    %dl,(%esi)
 229:	00 00                	add    %al,(%eax)
 22b:	00 30                	add    %dh,(%eax)
 22d:	05 00 00 00 00       	add    $0x0,%eax
 232:	00 00                	add    %al,(%eax)
 234:	12 00                	adc    (%eax),%al
 236:	0c 00                	or     $0x0,%al
 238:	7a 00                	jp     23a <_init-0x146>
 23a:	00 00                	add    %al,(%eax)
 23c:	17                   	pop    %ss
 23d:	05 00 00 15 00       	add    $0x150000,%eax
 242:	00 00                	add    %al,(%eax)
 244:	12 00                	adc    (%eax),%al
 246:	0b 00                	or     (%eax),%eax

Disassembly of section .dynstr:

00000248 <.dynstr>:
 248:	00 5f 5f             	add    %bl,0x5f(%edi)
 24b:	67 6d                	insl   (%dx),%es:(%di)
 24d:	6f                   	outsl  %ds:(%esi),(%dx)
 24e:	6e                   	outsb  %ds:(%esi),(%dx)
 24f:	5f                   	pop    %edi
 250:	73 74                	jae    2c6 <_init-0xba>
 252:	61                   	popa   
 253:	72 74                	jb     2c9 <_init-0xb7>
 255:	5f                   	pop    %edi
 256:	5f                   	pop    %edi
 257:	00 5f 69             	add    %bl,0x69(%edi)
 25a:	6e                   	outsb  %ds:(%esi),(%dx)
 25b:	69 74 00 5f 66 69 6e 	imul   $0x696e6966,0x5f(%eax,%eax,1),%esi
 262:	69 
 263:	00 5f 49             	add    %bl,0x49(%edi)
 266:	54                   	push   %esp
 267:	4d                   	dec    %ebp
 268:	5f                   	pop    %edi
 269:	64 65 72 65          	fs gs jb 2d2 <_init-0xae>
 26d:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 274:	4d 
 275:	43                   	inc    %ebx
 276:	6c                   	insb   (%dx),%es:(%edi)
 277:	6f                   	outsl  %ds:(%esi),(%dx)
 278:	6e                   	outsb  %ds:(%esi),(%dx)
 279:	65 54                	gs push %esp
 27b:	61                   	popa   
 27c:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 280:	5f                   	pop    %edi
 281:	49                   	dec    %ecx
 282:	54                   	push   %esp
 283:	4d                   	dec    %ebp
 284:	5f                   	pop    %edi
 285:	72 65                	jb     2ec <_init-0x94>
 287:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 28e:	4d 
 28f:	43                   	inc    %ebx
 290:	6c                   	insb   (%dx),%es:(%edi)
 291:	6f                   	outsl  %ds:(%esi),(%dx)
 292:	6e                   	outsb  %ds:(%esi),(%dx)
 293:	65 54                	gs push %esp
 295:	61                   	popa   
 296:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 29a:	5f                   	pop    %edi
 29b:	5f                   	pop    %edi
 29c:	63 78 61             	arpl   %di,0x61(%eax)
 29f:	5f                   	pop    %edi
 2a0:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%esi),%bp
 2a6:	7a 65                	jp     30d <_init-0x73>
 2a8:	00 5f 4a             	add    %bl,0x4a(%edi)
 2ab:	76 5f                	jbe    30c <_init-0x74>
 2ad:	52                   	push   %edx
 2ae:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
 2b5:	43 6c 
 2b7:	61                   	popa   
 2b8:	73 73                	jae    32d <_init-0x53>
 2ba:	65 73 00             	gs jae 2bd <_init-0xc3>
 2bd:	79 73                	jns    332 <_init-0x4e>
 2bf:	75 6d                	jne    32e <_init-0x52>
 2c1:	00 79 64             	add    %bh,0x64(%ecx)
 2c4:	69 66 66 00 6c 69 62 	imul   $0x62696c00,0x66(%esi),%esp
 2cb:	63 2e                	arpl   %bp,(%esi)
 2cd:	73 6f                	jae    33e <_init-0x42>
 2cf:	2e 36 00 5f 65       	cs add %bl,%ss:0x65(%edi)
 2d4:	64 61                	fs popa 
 2d6:	74 61                	je     339 <_init-0x47>
 2d8:	00 5f 5f             	add    %bl,0x5f(%edi)
 2db:	62 73 73             	bound  %esi,0x73(%ebx)
 2de:	5f                   	pop    %edi
 2df:	73 74                	jae    355 <_init-0x2b>
 2e1:	61                   	popa   
 2e2:	72 74                	jb     358 <_init-0x28>
 2e4:	00 5f 65             	add    %bl,0x65(%edi)
 2e7:	6e                   	outsb  %ds:(%esi),(%dx)
 2e8:	64 00 6c 69 62       	add    %ch,%fs:0x62(%ecx,%ebp,2)
 2ed:	6a 69                	push   $0x69
 2ef:	77 6f                	ja     360 <_init-0x20>
 2f1:	6e                   	outsb  %ds:(%esi),(%dx)
 2f2:	2e 73 6f             	jae,pn 364 <_init-0x1c>
 2f5:	2e 31 00             	xor    %eax,%cs:(%eax)
 2f8:	47                   	inc    %edi
 2f9:	4c                   	dec    %esp
 2fa:	49                   	dec    %ecx
 2fb:	42                   	inc    %edx
 2fc:	43                   	inc    %ebx
 2fd:	5f                   	pop    %edi
 2fe:	32 2e                	xor    (%esi),%ch
 300:	31 2e                	xor    %ebp,(%esi)
 302:	33 00                	xor    (%eax),%eax

Disassembly of section .gnu.version:

00000304 <.gnu.version>:
 304:	00 00                	add    %al,(%eax)
 306:	00 00                	add    %al,(%eax)
 308:	02 00                	add    (%eax),%al
 30a:	00 00                	add    %al,(%eax)
 30c:	00 00                	add    %al,(%eax)
 30e:	00 00                	add    %al,(%eax)
 310:	01 00                	add    %eax,(%eax)
 312:	01 00                	add    %eax,(%eax)
 314:	01 00                	add    %eax,(%eax)
 316:	01 00                	add    %eax,(%eax)
 318:	01 00                	add    %eax,(%eax)
 31a:	01 00                	add    %eax,(%eax)
 31c:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

00000320 <.gnu.version_r>:
 320:	01 00                	add    %eax,(%eax)
 322:	01 00                	add    %eax,(%eax)
 324:	80 00 00             	addb   $0x0,(%eax)
 327:	00 10                	add    %dl,(%eax)
 329:	00 00                	add    %al,(%eax)
 32b:	00 00                	add    %al,(%eax)
 32d:	00 00                	add    %al,(%eax)
 32f:	00 73 1f             	add    %dh,0x1f(%ebx)
 332:	69 09 00 00 02 00    	imul   $0x20000,(%ecx),%ecx
 338:	b0 00                	mov    $0x0,%al
 33a:	00 00                	add    %al,(%eax)
 33c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

00000340 <.rel.dyn>:
 340:	10 1f                	adc    %bl,(%edi)
 342:	00 00                	add    %al,(%eax)
 344:	08 00                	or     %al,(%eax)
 346:	00 00                	add    %al,(%eax)
 348:	14 1f                	adc    $0x1f,%al
 34a:	00 00                	add    %al,(%eax)
 34c:	08 00                	or     %al,(%eax)
 34e:	00 00                	add    %al,(%eax)
 350:	0c 20                	or     $0x20,%al
 352:	00 00                	add    %al,(%eax)
 354:	08 00                	or     %al,(%eax)
 356:	00 00                	add    %al,(%eax)
 358:	ec                   	in     (%dx),%al
 359:	1f                   	pop    %ds
 35a:	00 00                	add    %al,(%eax)
 35c:	06                   	push   %es
 35d:	01 00                	add    %eax,(%eax)
 35f:	00 f0                	add    %dh,%al
 361:	1f                   	pop    %ds
 362:	00 00                	add    %al,(%eax)
 364:	06                   	push   %es
 365:	02 00                	add    (%eax),%al
 367:	00 f4                	add    %dh,%ah
 369:	1f                   	pop    %ds
 36a:	00 00                	add    %al,(%eax)
 36c:	06                   	push   %es
 36d:	03 00                	add    (%eax),%eax
 36f:	00 f8                	add    %bh,%al
 371:	1f                   	pop    %ds
 372:	00 00                	add    %al,(%eax)
 374:	06                   	push   %es
 375:	04 00                	add    $0x0,%al
 377:	00 fc                	add    %bh,%ah
 379:	1f                   	pop    %ds
 37a:	00 00                	add    %al,(%eax)
 37c:	06                   	push   %es
 37d:	05                   	.byte 0x5
	...

Disassembly of section .init:

00000380 <_init>:
 380:	53                   	push   %ebx
 381:	83 ec 08             	sub    $0x8,%esp
 384:	e8 47 00 00 00       	call   3d0 <__x86.get_pc_thunk.bx>
 389:	81 c3 77 1c 00 00    	add    $0x1c77,%ebx
 38f:	8b 83 f4 ff ff ff    	mov    -0xc(%ebx),%eax
 395:	85 c0                	test   %eax,%eax
 397:	74 05                	je     39e <_init+0x1e>
 399:	e8 2a 00 00 00       	call   3c8 <_init+0x48>
 39e:	83 c4 08             	add    $0x8,%esp
 3a1:	5b                   	pop    %ebx
 3a2:	c3                   	ret    

Disassembly of section .plt:

000003b0 <.plt>:
 3b0:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 3b6:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 3bc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .plt.got:

000003c0 <.plt.got>:
 3c0:	ff a3 f0 ff ff ff    	jmp    *-0x10(%ebx)
 3c6:	66 90                	xchg   %ax,%ax
 3c8:	ff a3 f4 ff ff ff    	jmp    *-0xc(%ebx)
 3ce:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

000003d0 <__x86.get_pc_thunk.bx>:
 3d0:	8b 1c 24             	mov    (%esp),%ebx
 3d3:	c3                   	ret    
 3d4:	66 90                	xchg   %ax,%ax
 3d6:	66 90                	xchg   %ax,%ax
 3d8:	66 90                	xchg   %ax,%ax
 3da:	66 90                	xchg   %ax,%ax
 3dc:	66 90                	xchg   %ax,%ax
 3de:	66 90                	xchg   %ax,%ax

000003e0 <deregister_tm_clones>:
 3e0:	e8 17 01 00 00       	call   4fc <__x86.get_pc_thunk.dx>
 3e5:	81 c2 1b 1c 00 00    	add    $0x1c1b,%edx
 3eb:	8d 8a 10 00 00 00    	lea    0x10(%edx),%ecx
 3f1:	8d 82 13 00 00 00    	lea    0x13(%edx),%eax
 3f7:	29 c8                	sub    %ecx,%eax
 3f9:	83 f8 06             	cmp    $0x6,%eax
 3fc:	76 17                	jbe    415 <deregister_tm_clones+0x35>
 3fe:	8b 82 ec ff ff ff    	mov    -0x14(%edx),%eax
 404:	85 c0                	test   %eax,%eax
 406:	74 0d                	je     415 <deregister_tm_clones+0x35>
 408:	55                   	push   %ebp
 409:	89 e5                	mov    %esp,%ebp
 40b:	83 ec 14             	sub    $0x14,%esp
 40e:	51                   	push   %ecx
 40f:	ff d0                	call   *%eax
 411:	83 c4 10             	add    $0x10,%esp
 414:	c9                   	leave  
 415:	f3 c3                	repz ret 
 417:	89 f6                	mov    %esi,%esi
 419:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000420 <register_tm_clones>:
 420:	e8 d7 00 00 00       	call   4fc <__x86.get_pc_thunk.dx>
 425:	81 c2 db 1b 00 00    	add    $0x1bdb,%edx
 42b:	55                   	push   %ebp
 42c:	8d 8a 10 00 00 00    	lea    0x10(%edx),%ecx
 432:	8d 82 10 00 00 00    	lea    0x10(%edx),%eax
 438:	89 e5                	mov    %esp,%ebp
 43a:	53                   	push   %ebx
 43b:	29 c8                	sub    %ecx,%eax
 43d:	c1 f8 02             	sar    $0x2,%eax
 440:	83 ec 04             	sub    $0x4,%esp
 443:	89 c3                	mov    %eax,%ebx
 445:	c1 eb 1f             	shr    $0x1f,%ebx
 448:	01 d8                	add    %ebx,%eax
 44a:	d1 f8                	sar    %eax
 44c:	74 14                	je     462 <register_tm_clones+0x42>
 44e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
 454:	85 d2                	test   %edx,%edx
 456:	74 0a                	je     462 <register_tm_clones+0x42>
 458:	83 ec 08             	sub    $0x8,%esp
 45b:	50                   	push   %eax
 45c:	51                   	push   %ecx
 45d:	ff d2                	call   *%edx
 45f:	83 c4 10             	add    $0x10,%esp
 462:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 465:	c9                   	leave  
 466:	c3                   	ret    
 467:	89 f6                	mov    %esi,%esi
 469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000470 <__do_global_dtors_aux>:
 470:	55                   	push   %ebp
 471:	89 e5                	mov    %esp,%ebp
 473:	53                   	push   %ebx
 474:	e8 57 ff ff ff       	call   3d0 <__x86.get_pc_thunk.bx>
 479:	81 c3 87 1b 00 00    	add    $0x1b87,%ebx
 47f:	83 ec 04             	sub    $0x4,%esp
 482:	80 bb 10 00 00 00 00 	cmpb   $0x0,0x10(%ebx)
 489:	75 27                	jne    4b2 <__do_global_dtors_aux+0x42>
 48b:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
 491:	85 c0                	test   %eax,%eax
 493:	74 11                	je     4a6 <__do_global_dtors_aux+0x36>
 495:	83 ec 0c             	sub    $0xc,%esp
 498:	ff b3 0c 00 00 00    	pushl  0xc(%ebx)
 49e:	e8 1d ff ff ff       	call   3c0 <_init+0x40>
 4a3:	83 c4 10             	add    $0x10,%esp
 4a6:	e8 35 ff ff ff       	call   3e0 <deregister_tm_clones>
 4ab:	c6 83 10 00 00 00 01 	movb   $0x1,0x10(%ebx)
 4b2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 4b5:	c9                   	leave  
 4b6:	c3                   	ret    
 4b7:	89 f6                	mov    %esi,%esi
 4b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000004c0 <frame_dummy>:
 4c0:	e8 37 00 00 00       	call   4fc <__x86.get_pc_thunk.dx>
 4c5:	81 c2 3b 1b 00 00    	add    $0x1b3b,%edx
 4cb:	8d 82 18 ff ff ff    	lea    -0xe8(%edx),%eax
 4d1:	8b 08                	mov    (%eax),%ecx
 4d3:	85 c9                	test   %ecx,%ecx
 4d5:	75 09                	jne    4e0 <frame_dummy+0x20>
 4d7:	e9 44 ff ff ff       	jmp    420 <register_tm_clones>
 4dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 4e0:	8b 92 f8 ff ff ff    	mov    -0x8(%edx),%edx
 4e6:	85 d2                	test   %edx,%edx
 4e8:	74 ed                	je     4d7 <frame_dummy+0x17>
 4ea:	55                   	push   %ebp
 4eb:	89 e5                	mov    %esp,%ebp
 4ed:	83 ec 14             	sub    $0x14,%esp
 4f0:	50                   	push   %eax
 4f1:	ff d2                	call   *%edx
 4f3:	83 c4 10             	add    $0x10,%esp
 4f6:	c9                   	leave  
 4f7:	e9 24 ff ff ff       	jmp    420 <register_tm_clones>

000004fc <__x86.get_pc_thunk.dx>:
 4fc:	8b 14 24             	mov    (%esp),%edx
 4ff:	c3                   	ret    

00000500 <ysum>:
 500:	55                   	push   %ebp
 501:	89 e5                	mov    %esp,%ebp
 503:	e8 24 00 00 00       	call   52c <__x86.get_pc_thunk.ax>
 508:	05 f8 1a 00 00       	add    $0x1af8,%eax
 50d:	8b 55 08             	mov    0x8(%ebp),%edx
 510:	8b 45 0c             	mov    0xc(%ebp),%eax
 513:	01 d0                	add    %edx,%eax
 515:	5d                   	pop    %ebp
 516:	c3                   	ret    

00000517 <ydiff>:
 517:	55                   	push   %ebp
 518:	89 e5                	mov    %esp,%ebp
 51a:	e8 0d 00 00 00       	call   52c <__x86.get_pc_thunk.ax>
 51f:	05 e1 1a 00 00       	add    $0x1ae1,%eax
 524:	8b 45 08             	mov    0x8(%ebp),%eax
 527:	2b 45 0c             	sub    0xc(%ebp),%eax
 52a:	5d                   	pop    %ebp
 52b:	c3                   	ret    

0000052c <__x86.get_pc_thunk.ax>:
 52c:	8b 04 24             	mov    (%esp),%eax
 52f:	c3                   	ret    

Disassembly of section .fini:

00000530 <_fini>:
 530:	53                   	push   %ebx
 531:	83 ec 08             	sub    $0x8,%esp
 534:	e8 97 fe ff ff       	call   3d0 <__x86.get_pc_thunk.bx>
 539:	81 c3 c7 1a 00 00    	add    $0x1ac7,%ebx
 53f:	83 c4 08             	add    $0x8,%esp
 542:	5b                   	pop    %ebx
 543:	c3                   	ret    

Disassembly of section .eh_frame_hdr:

00000544 <__GNU_EH_FRAME_HDR>:
 544:	01 1b                	add    %ebx,(%ebx)
 546:	03 3b                	add    (%ebx),%edi
 548:	28 00                	sub    %al,(%eax)
 54a:	00 00                	add    %al,(%eax)
 54c:	04 00                	add    $0x0,%al
 54e:	00 00                	add    %al,(%eax)
 550:	6c                   	insb   (%dx),%es:(%edi)
 551:	fe                   	(bad)  
 552:	ff                   	(bad)  
 553:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 557:	00 bc ff ff ff 68 00 	add    %bh,0x68ffff(%edi,%edi,8)
 55e:	00 00                	add    %al,(%eax)
 560:	d3 ff                	sar    %cl,%edi
 562:	ff                   	(bad)  
 563:	ff 88 00 00 00 e8    	decl   -0x18000000(%eax)
 569:	ff                   	(bad)  
 56a:	ff                   	(bad)  
 56b:	ff                   	.byte 0xff
 56c:	a8 00                	test   $0x0,%al
	...

Disassembly of section .eh_frame:

00000570 <__FRAME_END__-0x90>:
 570:	14 00                	adc    $0x0,%al
 572:	00 00                	add    %al,(%eax)
 574:	00 00                	add    %al,(%eax)
 576:	00 00                	add    %al,(%eax)
 578:	01 7a 52             	add    %edi,0x52(%edx)
 57b:	00 01                	add    %al,(%ecx)
 57d:	7c 08                	jl     587 <__GNU_EH_FRAME_HDR+0x43>
 57f:	01 1b                	add    %ebx,(%ebx)
 581:	0c 04                	or     $0x4,%al
 583:	04 88                	add    $0x88,%al
 585:	01 00                	add    %eax,(%eax)
 587:	00 20                	add    %ah,(%eax)
 589:	00 00                	add    %al,(%eax)
 58b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 58e:	00 00                	add    %al,(%eax)
 590:	20 fe                	and    %bh,%dh
 592:	ff                   	(bad)  
 593:	ff 10                	call   *(%eax)
 595:	00 00                	add    %al,(%eax)
 597:	00 00                	add    %al,(%eax)
 599:	0e                   	push   %cs
 59a:	08 46 0e             	or     %al,0xe(%esi)
 59d:	0c 4a                	or     $0x4a,%al
 59f:	0f 0b                	ud2    
 5a1:	74 04                	je     5a7 <__GNU_EH_FRAME_HDR+0x63>
 5a3:	78 00                	js     5a5 <__GNU_EH_FRAME_HDR+0x61>
 5a5:	3f                   	aas    
 5a6:	1a 3b                	sbb    (%ebx),%bh
 5a8:	2a 32                	sub    (%edx),%dh
 5aa:	24 22                	and    $0x22,%al
 5ac:	1c 00                	sbb    $0x0,%al
 5ae:	00 00                	add    %al,(%eax)
 5b0:	40                   	inc    %eax
 5b1:	00 00                	add    %al,(%eax)
 5b3:	00 4c ff ff          	add    %cl,-0x1(%edi,%edi,8)
 5b7:	ff 17                	call   *(%edi)
 5b9:	00 00                	add    %al,(%eax)
 5bb:	00 00                	add    %al,(%eax)
 5bd:	41                   	inc    %ecx
 5be:	0e                   	push   %cs
 5bf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 5c5:	53                   	push   %ebx
 5c6:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 5c9:	04 00                	add    $0x0,%al
 5cb:	00 1c 00             	add    %bl,(%eax,%eax,1)
 5ce:	00 00                	add    %al,(%eax)
 5d0:	60                   	pusha  
 5d1:	00 00                	add    %al,(%eax)
 5d3:	00 43 ff             	add    %al,-0x1(%ebx)
 5d6:	ff                   	(bad)  
 5d7:	ff 15 00 00 00 00    	call   *0x0
 5dd:	41                   	inc    %ecx
 5de:	0e                   	push   %cs
 5df:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 5e5:	51                   	push   %ecx
 5e6:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 5e9:	04 00                	add    $0x0,%al
 5eb:	00 10                	add    %dl,(%eax)
 5ed:	00 00                	add    %al,(%eax)
 5ef:	00 80 00 00 00 38    	add    %al,0x38000000(%eax)
 5f5:	ff                   	(bad)  
 5f6:	ff                   	(bad)  
 5f7:	ff 04 00             	incl   (%eax,%eax,1)
 5fa:	00 00                	add    %al,(%eax)
 5fc:	00 00                	add    %al,(%eax)
	...

00000600 <__FRAME_END__>:
 600:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

00001f10 <__frame_dummy_init_array_entry>:
    1f10:	c0 04 00 00          	rolb   $0x0,(%eax,%eax,1)

Disassembly of section .fini_array:

00001f14 <__do_global_dtors_aux_fini_array_entry>:
    1f14:	70 04                	jo     1f1a <__JCR_END__+0x2>
	...

Disassembly of section .jcr:

00001f18 <__JCR_END__>:
    1f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

00001f1c <_DYNAMIC>:
    1f1c:	01 00                	add    %eax,(%eax)
    1f1e:	00 00                	add    %al,(%eax)
    1f20:	80 00 00             	addb   $0x0,(%eax)
    1f23:	00 0e                	add    %cl,(%esi)
    1f25:	00 00                	add    %al,(%eax)
    1f27:	00 a2 00 00 00 0c    	add    %ah,0xc000000(%edx)
    1f2d:	00 00                	add    %al,(%eax)
    1f2f:	00 80 03 00 00 0d    	add    %al,0xd000003(%eax)
    1f35:	00 00                	add    %al,(%eax)
    1f37:	00 30                	add    %dh,(%eax)
    1f39:	05 00 00 19 00       	add    $0x190000,%eax
    1f3e:	00 00                	add    %al,(%eax)
    1f40:	10 1f                	adc    %bl,(%edi)
    1f42:	00 00                	add    %al,(%eax)
    1f44:	1b 00                	sbb    (%eax),%eax
    1f46:	00 00                	add    %al,(%eax)
    1f48:	04 00                	add    $0x0,%al
    1f4a:	00 00                	add    %al,(%eax)
    1f4c:	1a 00                	sbb    (%eax),%al
    1f4e:	00 00                	add    %al,(%eax)
    1f50:	14 1f                	adc    $0x1f,%al
    1f52:	00 00                	add    %al,(%eax)
    1f54:	1c 00                	sbb    $0x0,%al
    1f56:	00 00                	add    %al,(%eax)
    1f58:	04 00                	add    $0x0,%al
    1f5a:	00 00                	add    %al,(%eax)
    1f5c:	f5                   	cmc    
    1f5d:	fe                   	(bad)  
    1f5e:	ff 6f 38             	ljmp   *0x38(%edi)
    1f61:	01 00                	add    %eax,(%eax)
    1f63:	00 05 00 00 00 48    	add    %al,0x48000000
    1f69:	02 00                	add    (%eax),%al
    1f6b:	00 06                	add    %al,(%esi)
    1f6d:	00 00                	add    %al,(%eax)
    1f6f:	00 78 01             	add    %bh,0x1(%eax)
    1f72:	00 00                	add    %al,(%eax)
    1f74:	0a 00                	or     (%eax),%al
    1f76:	00 00                	add    %al,(%eax)
    1f78:	bc 00 00 00 0b       	mov    $0xb000000,%esp
    1f7d:	00 00                	add    %al,(%eax)
    1f7f:	00 10                	add    %dl,(%eax)
    1f81:	00 00                	add    %al,(%eax)
    1f83:	00 03                	add    %al,(%ebx)
    1f85:	00 00                	add    %al,(%eax)
    1f87:	00 00                	add    %al,(%eax)
    1f89:	20 00                	and    %al,(%eax)
    1f8b:	00 11                	add    %dl,(%ecx)
    1f8d:	00 00                	add    %al,(%eax)
    1f8f:	00 40 03             	add    %al,0x3(%eax)
    1f92:	00 00                	add    %al,(%eax)
    1f94:	12 00                	adc    (%eax),%al
    1f96:	00 00                	add    %al,(%eax)
    1f98:	40                   	inc    %eax
    1f99:	00 00                	add    %al,(%eax)
    1f9b:	00 13                	add    %dl,(%ebx)
    1f9d:	00 00                	add    %al,(%eax)
    1f9f:	00 08                	add    %cl,(%eax)
    1fa1:	00 00                	add    %al,(%eax)
    1fa3:	00 fe                	add    %bh,%dh
    1fa5:	ff                   	(bad)  
    1fa6:	ff 6f 20             	ljmp   *0x20(%edi)
    1fa9:	03 00                	add    (%eax),%eax
    1fab:	00 ff                	add    %bh,%bh
    1fad:	ff                   	(bad)  
    1fae:	ff 6f 01             	ljmp   *0x1(%edi)
    1fb1:	00 00                	add    %al,(%eax)
    1fb3:	00 f0                	add    %dh,%al
    1fb5:	ff                   	(bad)  
    1fb6:	ff 6f 04             	ljmp   *0x4(%edi)
    1fb9:	03 00                	add    (%eax),%eax
    1fbb:	00 fa                	add    %bh,%dl
    1fbd:	ff                   	(bad)  
    1fbe:	ff 6f 03             	ljmp   *0x3(%edi)
	...

Disassembly of section .got:

00001fec <.got>:
	...

Disassembly of section .got.plt:

00002000 <_GLOBAL_OFFSET_TABLE_>:
    2000:	1c 1f                	sbb    $0x1f,%al
	...

Disassembly of section .data:

0000200c <__dso_handle>:
    200c:	0c 20                	or     $0x20,%al
	...

Disassembly of section .bss:

00002010 <__bss_start>:
    2010:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x308>
   a:	74 75                	je     81 <_init-0x2ff>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x2f1>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%esi,%ebp,1)
  22:	31 30                	xor    %esi,(%eax)
  24:	29 20                	sub    %esp,(%eax)
  26:	35 2e 34 2e 30       	xor    $0x302e342e,%eax
  2b:	20 32                	and    %dh,(%edx)
  2d:	30 31                	xor    %dh,(%ecx)
  2f:	36 30 36             	xor    %dh,%ss:(%esi)
  32:	30 39                	xor    %bh,(%ecx)
	...
