
ex_relro:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 20                	add    %ah,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 5c c5 62          	add    %bl,0x62(%ebp,%eax,8)
 804819b:	81 45 83 48 f5 fc 17 	addl   $0x17fcf548,-0x7d(%ebp)
 80481a2:	c4                   	(bad)  
 80481a3:	f9                   	stc    
 80481a4:	c8 ea 63 97          	enter  $0x63ea,$0x97
 80481a8:	96                   	xchg   %eax,%esi
 80481a9:	ca 83 ad             	lret   $0xad83

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	03 00                	add    (%eax),%eax
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	02 00                	add    (%eax),%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	60                   	pusha  
 80481be:	02 21                	add    (%ecx),%ah
 80481c0:	00 00                	add    %al,(%eax)
 80481c2:	00 00                	add    %al,(%eax)
 80481c4:	02 00                	add    (%eax),%al
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	04 00                	add    $0x0,%al
 80481ca:	00 00                	add    %al,(%eax)
 80481cc:	b8 2b 6b 15 ad       	mov    $0xad156b2b,%eax
 80481d1:	4b                   	dec    %ebx
 80481d2:	e3 c0                	jecxz  8048194 <_init-0x124>
 80481d4:	2f                   	das    
 80481d5:	4e                   	dec    %esi
 80481d6:	3d                   	.byte 0x3d
 80481d7:	f6                   	.byte 0xf6

Disassembly of section .dynsym:

080481d8 <.dynsym>:
	...
 80481e8:	33 00                	xor    (%eax),%eax
	...
 80481f2:	00 00                	add    %al,(%eax)
 80481f4:	20 00                	and    %al,(%eax)
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	1a 00                	sbb    (%eax),%al
	...
 8048202:	00 00                	add    %al,(%eax)
 8048204:	12 00                	adc    (%eax),%al
 8048206:	00 00                	add    %al,(%eax)
 8048208:	0b 00                	or     (%eax),%eax
 804820a:	00 00                	add    %al,(%eax)
 804820c:	bc 84 04 08 04       	mov    $0x4080484,%esp
 8048211:	00 00                	add    %al,(%eax)
 8048213:	00 11                	add    %dl,(%ecx)
 8048215:	00 0f                	add    %cl,(%edi)
 8048217:	00 21                	add    %ah,(%ecx)
	...
 8048221:	00 00                	add    %al,(%eax)
 8048223:	00 12                	add    %dl,(%edx)
 8048225:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynstr:

08048228 <.dynstr>:
 8048228:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804822c:	63 2e                	arpl   %bp,(%esi)
 804822e:	73 6f                	jae    804829f <_init-0x19>
 8048230:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048235:	4f                   	dec    %edi
 8048236:	5f                   	pop    %edi
 8048237:	73 74                	jae    80482ad <_init-0xb>
 8048239:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048240:	64 
 8048241:	00 70 72             	add    %dh,0x72(%eax)
 8048244:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 804824b:	6c                   	insb   (%dx),%es:(%edi)
 804824c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048253:	72 74                	jb     80482c9 <_init+0x11>
 8048255:	5f                   	pop    %edi
 8048256:	6d                   	insl   (%dx),%es:(%edi)
 8048257:	61                   	popa   
 8048258:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 804825f:	6f                   	outsl  %ds:(%esi),(%dx)
 8048260:	6e                   	outsb  %ds:(%esi),(%dx)
 8048261:	5f                   	pop    %edi
 8048262:	73 74                	jae    80482d8 <_init+0x20>
 8048264:	61                   	popa   
 8048265:	72 74                	jb     80482db <_init+0x23>
 8048267:	5f                   	pop    %edi
 8048268:	5f                   	pop    %edi
 8048269:	00 47 4c             	add    %al,0x4c(%edi)
 804826c:	49                   	dec    %ecx
 804826d:	42                   	inc    %edx
 804826e:	43                   	inc    %ebx
 804826f:	5f                   	pop    %edi
 8048270:	32 2e                	xor    (%esi),%ch
 8048272:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048274 <.gnu.version>:
 8048274:	00 00                	add    %al,(%eax)
 8048276:	00 00                	add    %al,(%eax)
 8048278:	02 00                	add    (%eax),%al
 804827a:	01 00                	add    %eax,(%eax)
 804827c:	02 00                	add    (%eax),%al

Disassembly of section .gnu.version_r:

08048280 <.gnu.version_r>:
 8048280:	01 00                	add    %eax,(%eax)
 8048282:	01 00                	add    %eax,(%eax)
 8048284:	01 00                	add    %eax,(%eax)
 8048286:	00 00                	add    %al,(%eax)
 8048288:	10 00                	adc    %al,(%eax)
 804828a:	00 00                	add    %al,(%eax)
 804828c:	00 00                	add    %al,(%eax)
 804828e:	00 00                	add    %al,(%eax)
 8048290:	10 69 69             	adc    %ch,0x69(%ecx)
 8048293:	0d 00 00 02 00       	or     $0x20000,%eax
 8048298:	42                   	inc    %edx
 8048299:	00 00                	add    %al,(%eax)
 804829b:	00 00                	add    %al,(%eax)
 804829d:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482a0 <.rel.dyn>:
 80482a0:	f4                   	hlt    
 80482a1:	9f                   	lahf   
 80482a2:	04 08                	add    $0x8,%al
 80482a4:	06                   	push   %es
 80482a5:	02 00                	add    (%eax),%al
 80482a7:	00 f8                	add    %bh,%al
 80482a9:	9f                   	lahf   
 80482aa:	04 08                	add    $0x8,%al
 80482ac:	06                   	push   %es
 80482ad:	01 00                	add    %eax,(%eax)
 80482af:	00 fc                	add    %bh,%ah
 80482b1:	9f                   	lahf   
 80482b2:	04 08                	add    $0x8,%al
 80482b4:	06                   	push   %es
 80482b5:	04 00                	add    $0x0,%al
	...

Disassembly of section .init:

080482b8 <_init>:
 80482b8:	53                   	push   %ebx
 80482b9:	83 ec 08             	sub    $0x8,%esp
 80482bc:	e8 7f 00 00 00       	call   8048340 <__x86.get_pc_thunk.bx>
 80482c1:	81 c3 27 1d 00 00    	add    $0x1d27,%ebx
 80482c7:	8b 83 10 00 00 00    	mov    0x10(%ebx),%eax
 80482cd:	85 c0                	test   %eax,%eax
 80482cf:	74 05                	je     80482d6 <_init+0x1e>
 80482d1:	e8 22 00 00 00       	call   80482f8 <_init+0x40>
 80482d6:	83 c4 08             	add    $0x8,%esp
 80482d9:	5b                   	pop    %ebx
 80482da:	c3                   	ret    

Disassembly of section .plt:

080482e0 <.plt>:
 80482e0:	ff 35 ec 9f 04 08    	pushl  0x8049fec
 80482e6:	ff 25 f0 9f 04 08    	jmp    *0x8049ff0
 80482ec:	00 00                	add    %al,(%eax)
	...

Disassembly of section .plt.got:

080482f0 <.plt.got>:
 80482f0:	ff 25 f4 9f 04 08    	jmp    *0x8049ff4
 80482f6:	66 90                	xchg   %ax,%ax
 80482f8:	ff 25 f8 9f 04 08    	jmp    *0x8049ff8
 80482fe:	66 90                	xchg   %ax,%ax
 8048300:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048306:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048310 <_start>:
 8048310:	31 ed                	xor    %ebp,%ebp
 8048312:	5e                   	pop    %esi
 8048313:	89 e1                	mov    %esp,%ecx
 8048315:	83 e4 f0             	and    $0xfffffff0,%esp
 8048318:	50                   	push   %eax
 8048319:	54                   	push   %esp
 804831a:	52                   	push   %edx
 804831b:	68 a0 84 04 08       	push   $0x80484a0
 8048320:	68 40 84 04 08       	push   $0x8048440
 8048325:	51                   	push   %ecx
 8048326:	56                   	push   %esi
 8048327:	68 0b 84 04 08       	push   $0x804840b
 804832c:	e8 cf ff ff ff       	call   8048300 <_init+0x48>
 8048331:	f4                   	hlt    
 8048332:	66 90                	xchg   %ax,%ax
 8048334:	66 90                	xchg   %ax,%ax
 8048336:	66 90                	xchg   %ax,%ax
 8048338:	66 90                	xchg   %ax,%ax
 804833a:	66 90                	xchg   %ax,%ax
 804833c:	66 90                	xchg   %ax,%ax
 804833e:	66 90                	xchg   %ax,%ax

08048340 <__x86.get_pc_thunk.bx>:
 8048340:	8b 1c 24             	mov    (%esp),%ebx
 8048343:	c3                   	ret    
 8048344:	66 90                	xchg   %ax,%ax
 8048346:	66 90                	xchg   %ax,%ax
 8048348:	66 90                	xchg   %ax,%ax
 804834a:	66 90                	xchg   %ax,%ax
 804834c:	66 90                	xchg   %ax,%ax
 804834e:	66 90                	xchg   %ax,%ax

08048350 <deregister_tm_clones>:
 8048350:	b8 0b a0 04 08       	mov    $0x804a00b,%eax
 8048355:	2d 08 a0 04 08       	sub    $0x804a008,%eax
 804835a:	83 f8 06             	cmp    $0x6,%eax
 804835d:	76 1a                	jbe    8048379 <deregister_tm_clones+0x29>
 804835f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048364:	85 c0                	test   %eax,%eax
 8048366:	74 11                	je     8048379 <deregister_tm_clones+0x29>
 8048368:	55                   	push   %ebp
 8048369:	89 e5                	mov    %esp,%ebp
 804836b:	83 ec 14             	sub    $0x14,%esp
 804836e:	68 08 a0 04 08       	push   $0x804a008
 8048373:	ff d0                	call   *%eax
 8048375:	83 c4 10             	add    $0x10,%esp
 8048378:	c9                   	leave  
 8048379:	f3 c3                	repz ret 
 804837b:	90                   	nop
 804837c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048380 <register_tm_clones>:
 8048380:	b8 08 a0 04 08       	mov    $0x804a008,%eax
 8048385:	2d 08 a0 04 08       	sub    $0x804a008,%eax
 804838a:	c1 f8 02             	sar    $0x2,%eax
 804838d:	89 c2                	mov    %eax,%edx
 804838f:	c1 ea 1f             	shr    $0x1f,%edx
 8048392:	01 d0                	add    %edx,%eax
 8048394:	d1 f8                	sar    %eax
 8048396:	74 1b                	je     80483b3 <register_tm_clones+0x33>
 8048398:	ba 00 00 00 00       	mov    $0x0,%edx
 804839d:	85 d2                	test   %edx,%edx
 804839f:	74 12                	je     80483b3 <register_tm_clones+0x33>
 80483a1:	55                   	push   %ebp
 80483a2:	89 e5                	mov    %esp,%ebp
 80483a4:	83 ec 10             	sub    $0x10,%esp
 80483a7:	50                   	push   %eax
 80483a8:	68 08 a0 04 08       	push   $0x804a008
 80483ad:	ff d2                	call   *%edx
 80483af:	83 c4 10             	add    $0x10,%esp
 80483b2:	c9                   	leave  
 80483b3:	f3 c3                	repz ret 
 80483b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483c0 <__do_global_dtors_aux>:
 80483c0:	80 3d 08 a0 04 08 00 	cmpb   $0x0,0x804a008
 80483c7:	75 13                	jne    80483dc <__do_global_dtors_aux+0x1c>
 80483c9:	55                   	push   %ebp
 80483ca:	89 e5                	mov    %esp,%ebp
 80483cc:	83 ec 08             	sub    $0x8,%esp
 80483cf:	e8 7c ff ff ff       	call   8048350 <deregister_tm_clones>
 80483d4:	c6 05 08 a0 04 08 01 	movb   $0x1,0x804a008
 80483db:	c9                   	leave  
 80483dc:	f3 c3                	repz ret 
 80483de:	66 90                	xchg   %ax,%ax

080483e0 <frame_dummy>: // laura
 80483e0:	b8 04 9f 04 08       	mov    $0x8049f04,%eax
 80483e5:	8b 10                	mov    (%eax),%edx
 80483e7:	85 d2                	test   %edx,%edx
 80483e9:	75 05                	jne    80483f0 <frame_dummy+0x10>
 80483eb:	eb 93                	jmp    8048380 <register_tm_clones>
 80483ed:	8d 76 00             	lea    0x0(%esi),%esi
 80483f0:	ba 00 00 00 00       	mov    $0x0,%edx
 80483f5:	85 d2                	test   %edx,%edx
 80483f7:	74 f2                	je     80483eb <frame_dummy+0xb>
 80483f9:	55                   	push   %ebp
 80483fa:	89 e5                	mov    %esp,%ebp
 80483fc:	83 ec 14             	sub    $0x14,%esp
 80483ff:	50                   	push   %eax
 8048400:	ff d2                	call   *%edx
 8048402:	83 c4 10             	add    $0x10,%esp
 8048405:	c9                   	leave  
 8048406:	e9 75 ff ff ff       	jmp    8048380 <register_tm_clones>

0804840b <main>:
 804840b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804840f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048412:	ff 71 fc             	pushl  -0x4(%ecx)
 8048415:	55                   	push   %ebp
 8048416:	89 e5                	mov    %esp,%ebp
 8048418:	51                   	push   %ecx
 8048419:	83 ec 04             	sub    $0x4,%esp
 804841c:	83 ec 0c             	sub    $0xc,%esp
 804841f:	68 c0 84 04 08       	push   $0x80484c0
 8048424:	e8 c7 fe ff ff       	call   80482f0 <_init+0x38>
 8048429:	83 c4 10             	add    $0x10,%esp
 804842c:	90                   	nop
 804842d:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 8048430:	c9                   	leave  
 8048431:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048434:	c3                   	ret    
 8048435:	66 90                	xchg   %ax,%ax
 8048437:	66 90                	xchg   %ax,%ax
 8048439:	66 90                	xchg   %ax,%ax
 804843b:	66 90                	xchg   %ax,%ax
 804843d:	66 90                	xchg   %ax,%ax
 804843f:	90                   	nop

08048440 <__libc_csu_init>: //laura
 8048440:	55                   	push   %ebp
 8048441:	57                   	push   %edi
 8048442:	56                   	push   %esi
 8048443:	53                   	push   %ebx
 8048444:	e8 f7 fe ff ff       	call   8048340 <__x86.get_pc_thunk.bx>
 8048449:	81 c3 9f 1b 00 00    	add    $0x1b9f,%ebx
 804844f:	83 ec 0c             	sub    $0xc,%esp
 8048452:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048456:	8d b3 18 ff ff ff    	lea    -0xe8(%ebx),%esi
 804845c:	e8 57 fe ff ff       	call   80482b8 <_init>
 8048461:	8d 83 14 ff ff ff    	lea    -0xec(%ebx),%eax
 8048467:	29 c6                	sub    %eax,%esi
 8048469:	c1 fe 02             	sar    $0x2,%esi
 804846c:	85 f6                	test   %esi,%esi
 804846e:	74 25                	je     8048495 <__libc_csu_init+0x55>
 8048470:	31 ff                	xor    %edi,%edi
 8048472:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048478:	83 ec 04             	sub    $0x4,%esp
 804847b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804847f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048483:	55                   	push   %ebp
 8048484:	ff 94 bb 14 ff ff ff 	call   *-0xec(%ebx,%edi,4)
 804848b:	83 c7 01             	add    $0x1,%edi
 804848e:	83 c4 10             	add    $0x10,%esp
 8048491:	39 f7                	cmp    %esi,%edi
 8048493:	75 e3                	jne    8048478 <__libc_csu_init+0x38>
 8048495:	83 c4 0c             	add    $0xc,%esp
 8048498:	5b                   	pop    %ebx
 8048499:	5e                   	pop    %esi
 804849a:	5f                   	pop    %edi
 804849b:	5d                   	pop    %ebp
 804849c:	c3                   	ret    
 804849d:	8d 76 00             	lea    0x0(%esi),%esi

080484a0 <__libc_csu_fini>:
 80484a0:	f3 c3                	repz ret 

Disassembly of section .fini:

080484a4 <_fini>:
 80484a4:	53                   	push   %ebx
 80484a5:	83 ec 08             	sub    $0x8,%esp
 80484a8:	e8 93 fe ff ff       	call   8048340 <__x86.get_pc_thunk.bx>
 80484ad:	81 c3 3b 1b 00 00    	add    $0x1b3b,%ebx
 80484b3:	83 c4 08             	add    $0x8,%esp
 80484b6:	5b                   	pop    %ebx
 80484b7:	c3                   	ret    

Disassembly of section .rodata:

080484b8 <_fp_hw>:
 80484b8:	03 00                	add    (%eax),%eax
	...

080484bc <_IO_stdin_used>:
 80484bc:	01 00                	add    %eax,(%eax)
 80484be:	02 00                	add    (%eax),%al
 80484c0:	67 6f                	outsl  %ds:(%si),(%dx)
	...

Disassembly of section .eh_frame_hdr:

080484c4 <__GNU_EH_FRAME_HDR>:
 80484c4:	01 1b                	add    %ebx,(%ebx)
 80484c6:	03 3b                	add    (%ebx),%edi
 80484c8:	28 00                	sub    %al,(%eax)
 80484ca:	00 00                	add    %al,(%eax)
 80484cc:	04 00                	add    $0x0,%al
 80484ce:	00 00                	add    %al,(%eax)
 80484d0:	1c fe                	sbb    $0xfe,%al
 80484d2:	ff                   	(bad)  
 80484d3:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 80484d7:	00 47 ff             	add    %al,-0x1(%edi)
 80484da:	ff                   	(bad)  
 80484db:	ff 68 00             	ljmp   *0x0(%eax)
 80484de:	00 00                	add    %al,(%eax)
 80484e0:	7c ff                	jl     80484e1 <__GNU_EH_FRAME_HDR+0x1d>
 80484e2:	ff                   	(bad)  
 80484e3:	ff 94 00 00 00 dc ff 	call   *-0x240000(%eax,%eax,1)
 80484ea:	ff                   	(bad)  
 80484eb:	ff e0                	jmp    *%eax
 80484ed:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

080484f0 <__FRAME_END__-0xc8>:
 80484f0:	14 00                	adc    $0x0,%al
 80484f2:	00 00                	add    %al,(%eax)
 80484f4:	00 00                	add    %al,(%eax)
 80484f6:	00 00                	add    %al,(%eax)
 80484f8:	01 7a 52             	add    %edi,0x52(%edx)
 80484fb:	00 01                	add    %al,(%ecx)
 80484fd:	7c 08                	jl     8048507 <__GNU_EH_FRAME_HDR+0x43>
 80484ff:	01 1b                	add    %ebx,(%ebx)
 8048501:	0c 04                	or     $0x4,%al
 8048503:	04 88                	add    $0x88,%al
 8048505:	01 00                	add    %eax,(%eax)
 8048507:	00 20                	add    %ah,(%eax)
 8048509:	00 00                	add    %al,(%eax)
 804850b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804850e:	00 00                	add    %al,(%eax)
 8048510:	d0 fd                	sar    %ch
 8048512:	ff                   	(bad)  
 8048513:	ff 10                	call   *(%eax)
 8048515:	00 00                	add    %al,(%eax)
 8048517:	00 00                	add    %al,(%eax)
 8048519:	0e                   	push   %cs
 804851a:	08 46 0e             	or     %al,0xe(%esi)
 804851d:	0c 4a                	or     $0x4a,%al
 804851f:	0f 0b                	ud2    
 8048521:	74 04                	je     8048527 <__GNU_EH_FRAME_HDR+0x63>
 8048523:	78 00                	js     8048525 <__GNU_EH_FRAME_HDR+0x61>
 8048525:	3f                   	aas    
 8048526:	1a 3b                	sbb    (%ebx),%bh
 8048528:	2a 32                	sub    (%edx),%dh
 804852a:	24 22                	and    $0x22,%al
 804852c:	28 00                	sub    %al,(%eax)
 804852e:	00 00                	add    %al,(%eax)
 8048530:	40                   	inc    %eax
 8048531:	00 00                	add    %al,(%eax)
 8048533:	00 d7                	add    %dl,%bh
 8048535:	fe                   	(bad)  
 8048536:	ff                   	(bad)  
 8048537:	ff 2a                	ljmp   *(%edx)
 8048539:	00 00                	add    %al,(%eax)
 804853b:	00 00                	add    %al,(%eax)
 804853d:	44                   	inc    %esp
 804853e:	0c 01                	or     $0x1,%al
 8048540:	00 47 10             	add    %al,0x10(%edi)
 8048543:	05 02 75 00 43       	add    $0x43007502,%eax
 8048548:	0f 03 75 7c          	lsl    0x7c(%ebp),%esi
 804854c:	06                   	push   %es
 804854d:	57                   	push   %edi
 804854e:	0c 01                	or     $0x1,%al
 8048550:	00 41 c5             	add    %al,-0x3b(%ecx)
 8048553:	43                   	inc    %ebx
 8048554:	0c 04                	or     $0x4,%al
 8048556:	04 00                	add    $0x0,%al
 8048558:	48                   	dec    %eax
 8048559:	00 00                	add    %al,(%eax)
 804855b:	00 6c 00 00          	add    %ch,0x0(%eax,%eax,1)
 804855f:	00 e0                	add    %ah,%al
 8048561:	fe                   	(bad)  
 8048562:	ff                   	(bad)  
 8048563:	ff 5d 00             	lcall  *0x0(%ebp)
 8048566:	00 00                	add    %al,(%eax)
 8048568:	00 41 0e             	add    %al,0xe(%ecx)
 804856b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048571:	87 03                	xchg   %eax,(%ebx)
 8048573:	41                   	inc    %ecx
 8048574:	0e                   	push   %cs
 8048575:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804857b:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 8048582:	24 44                	and    $0x44,%al
 8048584:	0e                   	push   %cs
 8048585:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048589:	41                   	inc    %ecx
 804858a:	0e                   	push   %cs
 804858b:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804858e:	20 47 0e             	and    %al,0xe(%edi)
 8048591:	14 41                	adc    $0x41,%al
 8048593:	c3                   	ret    
 8048594:	0e                   	push   %cs
 8048595:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048598:	0e                   	push   %cs
 8048599:	0c 41                	or     $0x41,%al
 804859b:	c7                   	(bad)  
 804859c:	0e                   	push   %cs
 804859d:	08 41 c5             	or     %al,-0x3b(%ecx)
 80485a0:	0e                   	push   %cs
 80485a1:	04 00                	add    $0x0,%al
 80485a3:	00 10                	add    %dl,(%eax)
 80485a5:	00 00                	add    %al,(%eax)
 80485a7:	00 b8 00 00 00 f4    	add    %bh,-0xc000000(%eax)
 80485ad:	fe                   	(bad)  
 80485ae:	ff                   	(bad)  
 80485af:	ff 02                	incl   (%edx)
 80485b1:	00 00                	add    %al,(%eax)
 80485b3:	00 00                	add    %al,(%eax)
 80485b5:	00 00                	add    %al,(%eax)
	...

080485b8 <__FRAME_END__>:
 80485b8:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049efc <__frame_dummy_init_array_entry>:
 8049efc:	e0 83                	loopne 8049e81 <__FRAME_END__+0x18c9>
 8049efe:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

08049f00 <__do_global_dtors_aux_fini_array_entry>:
 8049f00:	c0                   	.byte 0xc0
 8049f01:	83                   	.byte 0x83
 8049f02:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f04 <__JCR_END__>:
 8049f04:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f08 <_DYNAMIC>:
 8049f08:	01 00                	add    %eax,(%eax)
 8049f0a:	00 00                	add    %al,(%eax)
 8049f0c:	01 00                	add    %eax,(%eax)
 8049f0e:	00 00                	add    %al,(%eax)
 8049f10:	0c 00                	or     $0x0,%al
 8049f12:	00 00                	add    %al,(%eax)
 8049f14:	b8 82 04 08 0d       	mov    $0xd080482,%eax
 8049f19:	00 00                	add    %al,(%eax)
 8049f1b:	00 a4 84 04 08 19 00 	add    %ah,0x190804(%esp,%eax,4)
 8049f22:	00 00                	add    %al,(%eax)
 8049f24:	fc                   	cld    
 8049f25:	9e                   	sahf   
 8049f26:	04 08                	add    $0x8,%al
 8049f28:	1b 00                	sbb    (%eax),%eax
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	04 00                	add    $0x0,%al
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	1a 00                	sbb    (%eax),%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	00 9f 04 08 1c 00    	add    %bl,0x1c0804(%edi)
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	04 00                	add    $0x0,%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	f5                   	cmc    
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	28 82 04 08 06 00    	sub    %al,0x60804(%edx)
 8049f52:	00 00                	add    %al,(%eax)
 8049f54:	d8 81 04 08 0a 00    	fadds  0xa0804(%ecx)
 8049f5a:	00 00                	add    %al,(%eax)
 8049f5c:	4c                   	dec    %esp
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 e8                	add    %ch,%al
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	11 00                	adc    %eax,(%eax)
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	a0 82 04 08 12       	mov    0x12080482,%al
 8049f81:	00 00                	add    %al,(%eax)
 8049f83:	00 18                	add    %bl,(%eax)
 8049f85:	00 00                	add    %al,(%eax)
 8049f87:	00 13                	add    %dl,(%ebx)
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 08                	add    %cl,(%eax)
 8049f8d:	00 00                	add    %al,(%eax)
 8049f8f:	00 18                	add    %bl,(%eax)
 8049f91:	00 00                	add    %al,(%eax)
 8049f93:	00 00                	add    %al,(%eax)
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 fb                	add    %bh,%bl
 8049f99:	ff                   	(bad)  
 8049f9a:	ff 6f 01             	ljmp   *0x1(%edi)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 fe                	add    %bh,%dh
 8049fa1:	ff                   	(bad)  
 8049fa2:	ff 6f 80             	ljmp   *-0x80(%edi)
 8049fa5:	82                   	(bad)  
 8049fa6:	04 08                	add    $0x8,%al
 8049fa8:	ff                   	(bad)  
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 f0                	add    %dh,%al
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 74             	ljmp   *0x74(%edi)
 8049fb5:	82                   	(bad)  
 8049fb6:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049fe8 <_GLOBAL_OFFSET_TABLE_>:
 8049fe8:	08 9f 04 08 00 00    	or     %bl,0x804(%edi)
	...

Disassembly of section .data:

0804a000 <__data_start>:
 804a000:	00 00                	add    %al,(%eax)
	...

0804a004 <__dso_handle>:
 804a004:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a008 <__bss_start>:
 804a008:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048240>
   a:	74 75                	je     81 <_init-0x8048237>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x8048229>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%esi,%ebp,1)
  22:	31 30                	xor    %esi,(%eax)
  24:	29 20                	sub    %esp,(%eax)
  26:	35 2e 34 2e 30       	xor    $0x302e342e,%eax
  2b:	20 32                	and    %dh,(%edx)
  2d:	30 31                	xor    %dh,(%ecx)
  2f:	36 30 36             	xor    %dh,%ss:(%esi)
  32:	30 39                	xor    %bh,(%ecx)
	...
