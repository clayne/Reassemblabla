
./ex_pie:     file format elf32-i386


Disassembly of section .interp:

00000134 <.interp>:
 134:	2f                   	das    
 135:	6c                   	ins    BYTE PTR es:[edi],dx
 136:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 13d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 144:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

00000148 <.note.ABI-tag>:
 148:	04 00                	add    al,0x0
 14a:	00 00                	add    BYTE PTR [eax],al
 14c:	10 00                	adc    BYTE PTR [eax],al
 14e:	00 00                	add    BYTE PTR [eax],al
 150:	01 00                	add    DWORD PTR [eax],eax
 152:	00 00                	add    BYTE PTR [eax],al
 154:	47                   	inc    edi
 155:	4e                   	dec    esi
 156:	55                   	push   ebp
 157:	00 00                	add    BYTE PTR [eax],al
 159:	00 00                	add    BYTE PTR [eax],al
 15b:	00 02                	add    BYTE PTR [edx],al
 15d:	00 00                	add    BYTE PTR [eax],al
 15f:	00 06                	add    BYTE PTR [esi],al
 161:	00 00                	add    BYTE PTR [eax],al
 163:	00 20                	add    BYTE PTR [eax],ah
 165:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .hash:

00000168 <.hash>:
 168:	03 00                	add    eax,DWORD PTR [eax]
 16a:	00 00                	add    BYTE PTR [eax],al
 16c:	0d 00 00 00 0b       	or     eax,0xb000000
 171:	00 00                	add    BYTE PTR [eax],al
 173:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
 176:	00 00                	add    BYTE PTR [eax],al
 178:	09 00                	or     DWORD PTR [eax],eax
	...
 18a:	00 00                	add    BYTE PTR [eax],al
 18c:	02 00                	add    al,BYTE PTR [eax]
 18e:	00 00                	add    BYTE PTR [eax],al
 190:	03 00                	add    eax,DWORD PTR [eax]
 192:	00 00                	add    BYTE PTR [eax],al
 194:	04 00                	add    al,0x0
 196:	00 00                	add    BYTE PTR [eax],al
 198:	01 00                	add    DWORD PTR [eax],eax
 19a:	00 00                	add    BYTE PTR [eax],al
 19c:	07                   	pop    es
 19d:	00 00                	add    BYTE PTR [eax],al
 19f:	00 06                	add    BYTE PTR [esi],al
 1a1:	00 00                	add    BYTE PTR [eax],al
 1a3:	00 08                	add    BYTE PTR [eax],cl
 1a5:	00 00                	add    BYTE PTR [eax],al
 1a7:	00 05 00 00 00 0a    	add    BYTE PTR ds:0xa000000,al
 1ad:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynsym:

000001b0 <.dynsym>:
	...
 1c0:	5a                   	pop    edx
	...
 1c9:	00 00                	add    BYTE PTR [eax],al
 1cb:	00 20                	add    BYTE PTR [eax],ah
 1cd:	00 00                	add    BYTE PTR [eax],al
 1cf:	00 1a                	add    BYTE PTR [edx],bl
	...
 1d9:	00 00                	add    BYTE PTR [eax],al
 1db:	00 12                	add    BYTE PTR [edx],dl
 1dd:	00 00                	add    BYTE PTR [eax],al
 1df:	00 42 00             	add    BYTE PTR [edx+0x0],al
 1e2:	00 00                	add    BYTE PTR [eax],al
 1e4:	b4 18                	mov    ah,0x18
 1e6:	00 00                	add    BYTE PTR [eax],al
 1e8:	00 00                	add    BYTE PTR [eax],al
 1ea:	00 00                	add    BYTE PTR [eax],al
 1ec:	10 00                	adc    BYTE PTR [eax],al
 1ee:	18 00                	sbb    BYTE PTR [eax],al
 1f0:	21 00                	and    DWORD PTR [eax],eax
	...
 1fa:	00 00                	add    BYTE PTR [eax],al
 1fc:	22 00                	and    al,BYTE PTR [eax]
 1fe:	00 00                	add    BYTE PTR [eax],al
 200:	76 00                	jbe    202 <_init-0x1fa>
	...
 20a:	00 00                	add    BYTE PTR [eax],al
 20c:	20 00                	and    BYTE PTR [eax],al
 20e:	00 00                	add    BYTE PTR [eax],al
 210:	0b 00                	or     eax,DWORD PTR [eax]
 212:	00 00                	add    BYTE PTR [eax],al
 214:	7c 06                	jl     21c <_init-0x1e0>
 216:	00 00                	add    BYTE PTR [eax],al
 218:	04 00                	add    al,0x0
 21a:	00 00                	add    BYTE PTR [eax],al
 21c:	11 00                	adc    DWORD PTR [eax],eax
 21e:	0f 00                	(bad)  
 220:	30 00                	xor    BYTE PTR [eax],al
	...
 22a:	00 00                	add    BYTE PTR [eax],al
 22c:	12 00                	adc    al,BYTE PTR [eax]
 22e:	00 00                	add    BYTE PTR [eax],al
 230:	55                   	push   ebp
 231:	00 00                	add    BYTE PTR [eax],al
 233:	00 b8 18 00 00 00    	add    BYTE PTR [eax+0x18],bh
 239:	00 00                	add    BYTE PTR [eax],al
 23b:	00 10                	add    BYTE PTR [eax],dl
 23d:	00 19                	add    BYTE PTR [ecx],bl
 23f:	00 49 00             	add    BYTE PTR [ecx+0x0],cl
 242:	00 00                	add    BYTE PTR [eax],al
 244:	b4 18                	mov    ah,0x18
 246:	00 00                	add    BYTE PTR [eax],al
 248:	00 00                	add    BYTE PTR [eax],al
 24a:	00 00                	add    BYTE PTR [eax],al
 24c:	10 00                	adc    BYTE PTR [eax],al
 24e:	19 00                	sbb    DWORD PTR [eax],eax
 250:	3d 00 00 00 d0       	cmp    eax,0xd0000000
 255:	05 00 00 2a 00       	add    eax,0x2a0000
 25a:	00 00                	add    BYTE PTR [eax],al
 25c:	12 00                	adc    al,BYTE PTR [eax]
 25e:	0d 00 85 00 00       	or     eax,0x8500
	...
 26b:	00 20                	add    BYTE PTR [eax],ah
 26d:	00 00                	add    BYTE PTR [eax],al
 26f:	00 99 00 00 00 00    	add    BYTE PTR [ecx+0x0],bl
 275:	00 00                	add    BYTE PTR [eax],al
 277:	00 00                	add    BYTE PTR [eax],al
 279:	00 00                	add    BYTE PTR [eax],al
 27b:	00 20                	add    BYTE PTR [eax],ah
 27d:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynstr:

00000280 <.dynstr>:
 280:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 284:	63 2e                	arpl   WORD PTR [esi],bp
 286:	73 6f                	jae    2f7 <_init-0x105>
 288:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 28d:	4f                   	dec    edi
 28e:	5f                   	pop    edi
 28f:	73 74                	jae    305 <_init-0xf7>
 291:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 298:	64 
 299:	00 70 72             	add    BYTE PTR [eax+0x72],dh
 29c:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [esi+0x74],0x5f5f0066
 2a3:	63 78 61             	arpl   WORD PTR [eax+0x61],di
 2a6:	5f                   	pop    edi
 2a7:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [esi+0x61],0x696c
 2ad:	7a 65                	jp     314 <_init-0xe8>
 2af:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 2b2:	6c                   	ins    BYTE PTR es:[edi],dx
 2b3:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 2ba:	72 74                	jb     330 <_init-0xcc>
 2bc:	5f                   	pop    edi
 2bd:	6d                   	ins    DWORD PTR es:[edi],dx
 2be:	61                   	popa   
 2bf:	69 6e 00 5f 65 64 61 	imul   ebp,DWORD PTR [esi+0x0],0x6164655f
 2c6:	74 61                	je     329 <_init-0xd3>
 2c8:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 2cb:	62 73 73             	bound  esi,QWORD PTR [ebx+0x73]
 2ce:	5f                   	pop    edi
 2cf:	73 74                	jae    345 <_init-0xb7>
 2d1:	61                   	popa   
 2d2:	72 74                	jb     348 <_init-0xb4>
 2d4:	00 5f 65             	add    BYTE PTR [edi+0x65],bl
 2d7:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2d8:	64 00 5f 49          	add    BYTE PTR fs:[edi+0x49],bl
 2dc:	54                   	push   esp
 2dd:	4d                   	dec    ebp
 2de:	5f                   	pop    edi
 2df:	64 65 72 65          	fs gs jb 348 <_init-0xb4>
 2e3:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 2ea:	4d 
 2eb:	43                   	inc    ebx
 2ec:	6c                   	ins    BYTE PTR es:[edi],dx
 2ed:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2ee:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2ef:	65 54                	gs push esp
 2f1:	61                   	popa   
 2f2:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 2f6:	5f                   	pop    edi
 2f7:	5f                   	pop    edi
 2f8:	67 6d                	ins    DWORD PTR es:[di],dx
 2fa:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2fb:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2fc:	5f                   	pop    edi
 2fd:	73 74                	jae    373 <_init-0x89>
 2ff:	61                   	popa   
 300:	72 74                	jb     376 <_init-0x86>
 302:	5f                   	pop    edi
 303:	5f                   	pop    edi
 304:	00 5f 4a             	add    BYTE PTR [edi+0x4a],bl
 307:	76 5f                	jbe    368 <_init-0x94>
 309:	52                   	push   edx
 30a:	65 67 69 73 74 65 72 	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
 311:	43 6c 
 313:	61                   	popa   
 314:	73 73                	jae    389 <_init-0x73>
 316:	65 73 00             	gs jae 319 <_init-0xe3>
 319:	5f                   	pop    edi
 31a:	49                   	dec    ecx
 31b:	54                   	push   esp
 31c:	4d                   	dec    ebp
 31d:	5f                   	pop    edi
 31e:	72 65                	jb     385 <_init-0x77>
 320:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 327:	4d 
 328:	43                   	inc    ebx
 329:	6c                   	ins    BYTE PTR es:[edi],dx
 32a:	6f                   	outs   dx,DWORD PTR ds:[esi]
 32b:	6e                   	outs   dx,BYTE PTR ds:[esi]
 32c:	65 54                	gs push esp
 32e:	61                   	popa   
 32f:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 333:	47                   	inc    edi
 334:	4c                   	dec    esp
 335:	49                   	dec    ecx
 336:	42                   	inc    edx
 337:	43                   	inc    ebx
 338:	5f                   	pop    edi
 339:	32 2e                	xor    ch,BYTE PTR [esi]
 33b:	31 2e                	xor    DWORD PTR [esi],ebp
 33d:	33 00                	xor    eax,DWORD PTR [eax]
 33f:	47                   	inc    edi
 340:	4c                   	dec    esp
 341:	49                   	dec    ecx
 342:	42                   	inc    edx
 343:	43                   	inc    ebx
 344:	5f                   	pop    edi
 345:	32 2e                	xor    ch,BYTE PTR [esi]
 347:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

0000034a <.gnu.version>:
 34a:	00 00                	add    BYTE PTR [eax],al
 34c:	00 00                	add    BYTE PTR [eax],al
 34e:	02 00                	add    al,BYTE PTR [eax]
 350:	01 00                	add    DWORD PTR [eax],eax
 352:	03 00                	add    eax,DWORD PTR [eax]
 354:	00 00                	add    BYTE PTR [eax],al
 356:	01 00                	add    DWORD PTR [eax],eax
 358:	02 00                	add    al,BYTE PTR [eax]
 35a:	01 00                	add    DWORD PTR [eax],eax
 35c:	01 00                	add    DWORD PTR [eax],eax
 35e:	01 00                	add    DWORD PTR [eax],eax
 360:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .gnu.version_r:

00000364 <.gnu.version_r>:
 364:	01 00                	add    DWORD PTR [eax],eax
 366:	02 00                	add    al,BYTE PTR [eax]
 368:	01 00                	add    DWORD PTR [eax],eax
 36a:	00 00                	add    BYTE PTR [eax],al
 36c:	10 00                	adc    BYTE PTR [eax],al
 36e:	00 00                	add    BYTE PTR [eax],al
 370:	00 00                	add    BYTE PTR [eax],al
 372:	00 00                	add    BYTE PTR [eax],al
 374:	73 1f                	jae    395 <_init-0x67>
 376:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [ecx],0x30000
 37c:	b3 00                	mov    bl,0x0
 37e:	00 00                	add    BYTE PTR [eax],al
 380:	10 00                	adc    BYTE PTR [eax],al
 382:	00 00                	add    BYTE PTR [eax],al
 384:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 387:	0d 00 00 02 00       	or     eax,0x20000
 38c:	bf 00 00 00 00       	mov    edi,0x0
 391:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

00000394 <.rel.dyn>:
 394:	e5 05                	in     eax,0x5
 396:	00 00                	add    BYTE PTR [eax],al
 398:	08 00                	or     BYTE PTR [eax],al
 39a:	00 00                	add    BYTE PTR [eax],al
 39c:	7c 17                	jl     3b5 <_init-0x47>
 39e:	00 00                	add    BYTE PTR [eax],al
 3a0:	08 00                	or     BYTE PTR [eax],al
 3a2:	00 00                	add    BYTE PTR [eax],al
 3a4:	80 17 00             	adc    BYTE PTR [edi],0x0
 3a7:	00 08                	add    BYTE PTR [eax],cl
 3a9:	00 00                	add    BYTE PTR [eax],al
 3ab:	00 8c 18 00 00 08 00 	add    BYTE PTR [eax+ebx*1+0x80000],cl
 3b2:	00 00                	add    BYTE PTR [eax],al
 3b4:	b0 18                	mov    al,0x18
 3b6:	00 00                	add    BYTE PTR [eax],al
 3b8:	08 00                	or     BYTE PTR [eax],al
 3ba:	00 00                	add    BYTE PTR [eax],al
 3bc:	ea 05 00 00 02 02 00 	jmp    0x2:0x2000005
 3c3:	00 80 18 00 00 06    	add    BYTE PTR [eax+0x6000018],al
 3c9:	01 00                	add    DWORD PTR [eax],eax
 3cb:	00 84 18 00 00 06 04 	add    BYTE PTR [eax+ebx*1+0x4060000],al
 3d2:	00 00                	add    BYTE PTR [eax],al
 3d4:	88 18                	mov    BYTE PTR [eax],bl
 3d6:	00 00                	add    BYTE PTR [eax],al
 3d8:	06                   	push   es
 3d9:	05 00 00 90 18       	add    eax,0x18900000
 3de:	00 00                	add    BYTE PTR [eax],al
 3e0:	06                   	push   es
 3e1:	0b 00                	or     eax,DWORD PTR [eax]
 3e3:	00 94 18 00 00 06 0c 	add    BYTE PTR [eax+ebx*1+0xc060000],dl
	...

Disassembly of section .rel.plt:

000003ec <.rel.plt>:
 3ec:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 3ed:	18 00                	sbb    BYTE PTR [eax],al
 3ef:	00 07                	add    BYTE PTR [edi],al
 3f1:	02 00                	add    al,BYTE PTR [eax]
 3f3:	00 a8 18 00 00 07    	add    BYTE PTR [eax+0x7000018],ch
 3f9:	07                   	pop    es
	...

Disassembly of section .init:

000003fc <_init>:
 3fc:	53                   	push   ebx
 3fd:	83 ec 08             	sub    esp,0x8
 400:	e8 9b 00 00 00       	call   4a0 <__x86.get_pc_thunk.bx>
 405:	81 c3 93 14 00 00    	add    ebx,0x1493
 40b:	8b 83 f0 ff ff ff    	mov    eax,DWORD PTR [ebx-0x10]
 411:	85 c0                	test   eax,eax
 413:	74 05                	je     41a <_init+0x1e>
 415:	e8 3e 00 00 00       	call   458 <__libc_start_main@plt+0x18>
 41a:	83 c4 08             	add    esp,0x8
 41d:	5b                   	pop    ebx
 41e:	c3                   	ret    

Disassembly of section .plt:

00000420 <printf@plt-0x10>:
 420:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
 426:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
 42c:	00 00                	add    BYTE PTR [eax],al
	...

00000430 <printf@plt>:
 430:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
 436:	68 00 00 00 00       	push   0x0
 43b:	e9 e0 ff ff ff       	jmp    420 <_init+0x24>

00000440 <__libc_start_main@plt>:
 440:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
 446:	68 08 00 00 00       	push   0x8
 44b:	e9 d0 ff ff ff       	jmp    420 <_init+0x24>

Disassembly of section .plt.got:

00000450 <.plt.got>:
 450:	ff a3 ec ff ff ff    	jmp    DWORD PTR [ebx-0x14]
 456:	66 90                	xchg   ax,ax
 458:	ff a3 f0 ff ff ff    	jmp    DWORD PTR [ebx-0x10]
 45e:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000460 <_start>:
 460:	31 ed                	xor    ebp,ebp
 462:	5e                   	pop    esi
 463:	89 e1                	mov    ecx,esp
 465:	83 e4 f0             	and    esp,0xfffffff0
 468:	50                   	push   eax
 469:	54                   	push   esp
 46a:	52                   	push   edx
 46b:	e8 22 00 00 00       	call   492 <_start+0x32>
 470:	81 c3 28 14 00 00    	add    ebx,0x1428
 476:	8d 83 c8 ed ff ff    	lea    eax,[ebx-0x1238]
 47c:	50                   	push   eax
 47d:	8d 83 68 ed ff ff    	lea    eax,[ebx-0x1298]
 483:	50                   	push   eax
 484:	51                   	push   ecx
 485:	56                   	push   esi
 486:	ff b3 f4 ff ff ff    	push   DWORD PTR [ebx-0xc]
 48c:	e8 af ff ff ff       	call   440 <__libc_start_main@plt>
 491:	f4                   	hlt    
 492:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 495:	c3                   	ret    
 496:	66 90                	xchg   ax,ax
 498:	66 90                	xchg   ax,ax
 49a:	66 90                	xchg   ax,ax
 49c:	66 90                	xchg   ax,ax
 49e:	66 90                	xchg   ax,ax

000004a0 <__x86.get_pc_thunk.bx>:
 4a0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 4a3:	c3                   	ret    
 4a4:	66 90                	xchg   ax,ax
 4a6:	66 90                	xchg   ax,ax
 4a8:	66 90                	xchg   ax,ax
 4aa:	66 90                	xchg   ax,ax
 4ac:	66 90                	xchg   ax,ax
 4ae:	66 90                	xchg   ax,ax

000004b0 <deregister_tm_clones>:
 4b0:	e8 17 01 00 00       	call   5cc <__x86.get_pc_thunk.dx>
 4b5:	81 c2 e3 13 00 00    	add    edx,0x13e3
 4bb:	8d 8a 1c 00 00 00    	lea    ecx,[edx+0x1c]
 4c1:	8d 82 1f 00 00 00    	lea    eax,[edx+0x1f]
 4c7:	29 c8                	sub    eax,ecx
 4c9:	83 f8 06             	cmp    eax,0x6
 4cc:	76 17                	jbe    4e5 <deregister_tm_clones+0x35>
 4ce:	8b 82 e8 ff ff ff    	mov    eax,DWORD PTR [edx-0x18]
 4d4:	85 c0                	test   eax,eax
 4d6:	74 0d                	je     4e5 <deregister_tm_clones+0x35>
 4d8:	55                   	push   ebp
 4d9:	89 e5                	mov    ebp,esp
 4db:	83 ec 14             	sub    esp,0x14
 4de:	51                   	push   ecx
 4df:	ff d0                	call   eax
 4e1:	83 c4 10             	add    esp,0x10
 4e4:	c9                   	leave  
 4e5:	f3 c3                	repz ret 
 4e7:	89 f6                	mov    esi,esi
 4e9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000004f0 <register_tm_clones>:
 4f0:	e8 d7 00 00 00       	call   5cc <__x86.get_pc_thunk.dx>
 4f5:	81 c2 a3 13 00 00    	add    edx,0x13a3
 4fb:	55                   	push   ebp
 4fc:	8d 8a 1c 00 00 00    	lea    ecx,[edx+0x1c]
 502:	8d 82 1c 00 00 00    	lea    eax,[edx+0x1c]
 508:	89 e5                	mov    ebp,esp
 50a:	53                   	push   ebx
 50b:	29 c8                	sub    eax,ecx
 50d:	c1 f8 02             	sar    eax,0x2
 510:	83 ec 04             	sub    esp,0x4
 513:	89 c3                	mov    ebx,eax
 515:	c1 eb 1f             	shr    ebx,0x1f
 518:	01 d8                	add    eax,ebx
 51a:	d1 f8                	sar    eax,1
 51c:	74 14                	je     532 <register_tm_clones+0x42>
 51e:	8b 92 fc ff ff ff    	mov    edx,DWORD PTR [edx-0x4]
 524:	85 d2                	test   edx,edx
 526:	74 0a                	je     532 <register_tm_clones+0x42>
 528:	83 ec 08             	sub    esp,0x8
 52b:	50                   	push   eax
 52c:	51                   	push   ecx
 52d:	ff d2                	call   edx
 52f:	83 c4 10             	add    esp,0x10
 532:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 535:	c9                   	leave  
 536:	c3                   	ret    
 537:	89 f6                	mov    esi,esi
 539:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000540 <__do_global_dtors_aux>:
 540:	55                   	push   ebp
 541:	89 e5                	mov    ebp,esp
 543:	53                   	push   ebx
 544:	e8 57 ff ff ff       	call   4a0 <__x86.get_pc_thunk.bx>
 549:	81 c3 4f 13 00 00    	add    ebx,0x134f
 54f:	83 ec 04             	sub    esp,0x4
 552:	80 bb 1c 00 00 00 00 	cmp    BYTE PTR [ebx+0x1c],0x0
 559:	75 27                	jne    582 <__do_global_dtors_aux+0x42>
 55b:	8b 83 ec ff ff ff    	mov    eax,DWORD PTR [ebx-0x14]
 561:	85 c0                	test   eax,eax
 563:	74 11                	je     576 <__do_global_dtors_aux+0x36>
 565:	83 ec 0c             	sub    esp,0xc
 568:	ff b3 18 00 00 00    	push   DWORD PTR [ebx+0x18]
 56e:	e8 dd fe ff ff       	call   450 <__libc_start_main@plt+0x10>
 573:	83 c4 10             	add    esp,0x10
 576:	e8 35 ff ff ff       	call   4b0 <deregister_tm_clones>
 57b:	c6 83 1c 00 00 00 01 	mov    BYTE PTR [ebx+0x1c],0x1
 582:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 585:	c9                   	leave  
 586:	c3                   	ret    
 587:	89 f6                	mov    esi,esi
 589:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000590 <frame_dummy>:
 590:	e8 37 00 00 00       	call   5cc <__x86.get_pc_thunk.dx>
 595:	81 c2 03 13 00 00    	add    edx,0x1303
 59b:	8d 82 ec fe ff ff    	lea    eax,[edx-0x114]
 5a1:	8b 08                	mov    ecx,DWORD PTR [eax]
 5a3:	85 c9                	test   ecx,ecx
 5a5:	75 09                	jne    5b0 <frame_dummy+0x20>
 5a7:	e9 44 ff ff ff       	jmp    4f0 <register_tm_clones>
 5ac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 5b0:	8b 92 f8 ff ff ff    	mov    edx,DWORD PTR [edx-0x8]
 5b6:	85 d2                	test   edx,edx
 5b8:	74 ed                	je     5a7 <frame_dummy+0x17>
 5ba:	55                   	push   ebp
 5bb:	89 e5                	mov    ebp,esp
 5bd:	83 ec 14             	sub    esp,0x14
 5c0:	50                   	push   eax
 5c1:	ff d2                	call   edx
 5c3:	83 c4 10             	add    esp,0x10
 5c6:	c9                   	leave  
 5c7:	e9 24 ff ff ff       	jmp    4f0 <register_tm_clones>

000005cc <__x86.get_pc_thunk.dx>:
 5cc:	8b 14 24             	mov    edx,DWORD PTR [esp]
 5cf:	c3                   	ret    

000005d0 <main>:
 5d0:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 5d4:	83 e4 f0             	and    esp,0xfffffff0
 5d7:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 5da:	55                   	push   ebp
 5db:	89 e5                	mov    ebp,esp
 5dd:	51                   	push   ecx
 5de:	83 ec 04             	sub    esp,0x4
 5e1:	83 ec 0c             	sub    esp,0xc
 5e4:	68 80 06 00 00       	push   0x680
 5e9:	e8 fc ff ff ff       	call   5ea <main+0x1a>
 5ee:	83 c4 10             	add    esp,0x10
 5f1:	90                   	nop
 5f2:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 5f5:	c9                   	leave  
 5f6:	8d 61 fc             	lea    esp,[ecx-0x4]
 5f9:	c3                   	ret    
 5fa:	66 90                	xchg   ax,ax
 5fc:	66 90                	xchg   ax,ax
 5fe:	66 90                	xchg   ax,ax

00000600 <__libc_csu_init>:
 600:	55                   	push   ebp
 601:	57                   	push   edi
 602:	56                   	push   esi
 603:	53                   	push   ebx
 604:	e8 97 fe ff ff       	call   4a0 <__x86.get_pc_thunk.bx>
 609:	81 c3 8f 12 00 00    	add    ebx,0x128f
 60f:	83 ec 0c             	sub    esp,0xc
 612:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 616:	8d b3 e8 fe ff ff    	lea    esi,[ebx-0x118]
 61c:	e8 db fd ff ff       	call   3fc <_init>
 621:	8d 83 e4 fe ff ff    	lea    eax,[ebx-0x11c]
 627:	29 c6                	sub    esi,eax
 629:	c1 fe 02             	sar    esi,0x2
 62c:	85 f6                	test   esi,esi
 62e:	74 25                	je     655 <__libc_csu_init+0x55>
 630:	31 ff                	xor    edi,edi
 632:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 638:	83 ec 04             	sub    esp,0x4
 63b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 63f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 643:	55                   	push   ebp
 644:	ff 94 bb e4 fe ff ff 	call   DWORD PTR [ebx+edi*4-0x11c]
 64b:	83 c7 01             	add    edi,0x1
 64e:	83 c4 10             	add    esp,0x10
 651:	39 f7                	cmp    edi,esi
 653:	75 e3                	jne    638 <__libc_csu_init+0x38>
 655:	83 c4 0c             	add    esp,0xc
 658:	5b                   	pop    ebx
 659:	5e                   	pop    esi
 65a:	5f                   	pop    edi
 65b:	5d                   	pop    ebp
 65c:	c3                   	ret    
 65d:	8d 76 00             	lea    esi,[esi+0x0]

00000660 <__libc_csu_fini>:
 660:	f3 c3                	repz ret 

Disassembly of section .fini:

00000664 <_fini>:
 664:	53                   	push   ebx
 665:	83 ec 08             	sub    esp,0x8
 668:	e8 33 fe ff ff       	call   4a0 <__x86.get_pc_thunk.bx>
 66d:	81 c3 2b 12 00 00    	add    ebx,0x122b
 673:	83 c4 08             	add    esp,0x8
 676:	5b                   	pop    ebx
 677:	c3                   	ret    

Disassembly of section .rodata:

00000678 <_fp_hw>:
 678:	03 00                	add    eax,DWORD PTR [eax]
	...

0000067c <_IO_stdin_used>:
 67c:	01 00                	add    DWORD PTR [eax],eax
 67e:	02 00                	add    al,BYTE PTR [eax]
 680:	67 6f                	outs   dx,DWORD PTR ds:[si]
	...

Disassembly of section .eh_frame_hdr:

00000684 <__GNU_EH_FRAME_HDR>:
 684:	01 1b                	add    DWORD PTR [ebx],ebx
 686:	03 3b                	add    edi,DWORD PTR [ebx]
 688:	28 00                	sub    BYTE PTR [eax],al
 68a:	00 00                	add    BYTE PTR [eax],al
 68c:	04 00                	add    al,0x0
 68e:	00 00                	add    BYTE PTR [eax],al
 690:	9c                   	pushf  
 691:	fd                   	std    
 692:	ff                   	(bad)  
 693:	ff 44 00 00          	inc    DWORD PTR [eax+eax*1+0x0]
 697:	00 4c ff ff          	add    BYTE PTR [edi+edi*8-0x1],cl
 69b:	ff 68 00             	jmp    FWORD PTR [eax+0x0]
 69e:	00 00                	add    BYTE PTR [eax],al
 6a0:	7c ff                	jl     6a1 <__GNU_EH_FRAME_HDR+0x1d>
 6a2:	ff                   	(bad)  
 6a3:	ff 94 00 00 00 dc ff 	call   DWORD PTR [eax+eax*1-0x240000]
 6aa:	ff                   	(bad)  
 6ab:	ff e0                	jmp    eax
 6ad:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame:

000006b0 <__FRAME_END__-0xc8>:
 6b0:	14 00                	adc    al,0x0
 6b2:	00 00                	add    BYTE PTR [eax],al
 6b4:	00 00                	add    BYTE PTR [eax],al
 6b6:	00 00                	add    BYTE PTR [eax],al
 6b8:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 6bb:	00 01                	add    BYTE PTR [ecx],al
 6bd:	7c 08                	jl     6c7 <__GNU_EH_FRAME_HDR+0x43>
 6bf:	01 1b                	add    DWORD PTR [ebx],ebx
 6c1:	0c 04                	or     al,0x4
 6c3:	04 88                	add    al,0x88
 6c5:	01 00                	add    DWORD PTR [eax],eax
 6c7:	00 20                	add    BYTE PTR [eax],ah
 6c9:	00 00                	add    BYTE PTR [eax],al
 6cb:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 6ce:	00 00                	add    BYTE PTR [eax],al
 6d0:	50                   	push   eax
 6d1:	fd                   	std    
 6d2:	ff                   	(bad)  
 6d3:	ff 30                	push   DWORD PTR [eax]
 6d5:	00 00                	add    BYTE PTR [eax],al
 6d7:	00 00                	add    BYTE PTR [eax],al
 6d9:	0e                   	push   cs
 6da:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 6dd:	0c 4a                	or     al,0x4a
 6df:	0f 0b                	ud2    
 6e1:	74 04                	je     6e7 <__GNU_EH_FRAME_HDR+0x63>
 6e3:	78 00                	js     6e5 <__GNU_EH_FRAME_HDR+0x61>
 6e5:	3f                   	aas    
 6e6:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 6e8:	2a 32                	sub    dh,BYTE PTR [edx]
 6ea:	24 22                	and    al,0x22
 6ec:	28 00                	sub    BYTE PTR [eax],al
 6ee:	00 00                	add    BYTE PTR [eax],al
 6f0:	40                   	inc    eax
 6f1:	00 00                	add    BYTE PTR [eax],al
 6f3:	00 dc                	add    ah,bl
 6f5:	fe                   	(bad)  
 6f6:	ff                   	(bad)  
 6f7:	ff 2a                	jmp    FWORD PTR [edx]
 6f9:	00 00                	add    BYTE PTR [eax],al
 6fb:	00 00                	add    BYTE PTR [eax],al
 6fd:	44                   	inc    esp
 6fe:	0c 01                	or     al,0x1
 700:	00 47 10             	add    BYTE PTR [edi+0x10],al
 703:	05 02 75 00 43       	add    eax,0x43007502
 708:	0f 03 75 7c          	lsl    esi,WORD PTR [ebp+0x7c]
 70c:	06                   	push   es
 70d:	57                   	push   edi
 70e:	0c 01                	or     al,0x1
 710:	00 41 c5             	add    BYTE PTR [ecx-0x3b],al
 713:	43                   	inc    ebx
 714:	0c 04                	or     al,0x4
 716:	04 00                	add    al,0x0
 718:	48                   	dec    eax
 719:	00 00                	add    BYTE PTR [eax],al
 71b:	00 6c 00 00          	add    BYTE PTR [eax+eax*1+0x0],ch
 71f:	00 e0                	add    al,ah
 721:	fe                   	(bad)  
 722:	ff                   	(bad)  
 723:	ff 5d 00             	call   FWORD PTR [ebp+0x0]
 726:	00 00                	add    BYTE PTR [eax],al
 728:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 72b:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 731:	87 03                	xchg   DWORD PTR [ebx],eax
 733:	41                   	inc    ecx
 734:	0e                   	push   cs
 735:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 73b:	83 05 4e 0e 20 69 0e 	add    DWORD PTR ds:0x69200e4e,0xe
 742:	24 44                	and    al,0x44
 744:	0e                   	push   cs
 745:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
 749:	41                   	inc    ecx
 74a:	0e                   	push   cs
 74b:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
 74e:	20 47 0e             	and    BYTE PTR [edi+0xe],al
 751:	14 41                	adc    al,0x41
 753:	c3                   	ret    
 754:	0e                   	push   cs
 755:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 758:	0e                   	push   cs
 759:	0c 41                	or     al,0x41
 75b:	c7                   	(bad)  
 75c:	0e                   	push   cs
 75d:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 760:	0e                   	push   cs
 761:	04 00                	add    al,0x0
 763:	00 10                	add    BYTE PTR [eax],dl
 765:	00 00                	add    BYTE PTR [eax],al
 767:	00 b8 00 00 00 f4    	add    BYTE PTR [eax-0xc000000],bh
 76d:	fe                   	(bad)  
 76e:	ff                   	(bad)  
 76f:	ff 02                	inc    DWORD PTR [edx]
 771:	00 00                	add    BYTE PTR [eax],al
 773:	00 00                	add    BYTE PTR [eax],al
 775:	00 00                	add    BYTE PTR [eax],al
	...

00000778 <__FRAME_END__>:
 778:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

0000177c <__frame_dummy_init_array_entry>:
    177c:	90                   	nop
    177d:	05                   	.byte 0x5
	...

Disassembly of section .fini_array:

00001780 <__do_global_dtors_aux_fini_array_entry>:
    1780:	40                   	inc    eax
    1781:	05                   	.byte 0x5
	...

Disassembly of section .jcr:

00001784 <__JCR_END__>:
    1784:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

00001788 <_DYNAMIC>:
    1788:	01 00                	add    DWORD PTR [eax],eax
    178a:	00 00                	add    BYTE PTR [eax],al
    178c:	01 00                	add    DWORD PTR [eax],eax
    178e:	00 00                	add    BYTE PTR [eax],al
    1790:	0c 00                	or     al,0x0
    1792:	00 00                	add    BYTE PTR [eax],al
    1794:	fc                   	cld    
    1795:	03 00                	add    eax,DWORD PTR [eax]
    1797:	00 0d 00 00 00 64    	add    BYTE PTR ds:0x64000000,cl
    179d:	06                   	push   es
    179e:	00 00                	add    BYTE PTR [eax],al
    17a0:	19 00                	sbb    DWORD PTR [eax],eax
    17a2:	00 00                	add    BYTE PTR [eax],al
    17a4:	7c 17                	jl     17bd <_DYNAMIC+0x35>
    17a6:	00 00                	add    BYTE PTR [eax],al
    17a8:	1b 00                	sbb    eax,DWORD PTR [eax]
    17aa:	00 00                	add    BYTE PTR [eax],al
    17ac:	04 00                	add    al,0x0
    17ae:	00 00                	add    BYTE PTR [eax],al
    17b0:	1a 00                	sbb    al,BYTE PTR [eax]
    17b2:	00 00                	add    BYTE PTR [eax],al
    17b4:	80 17 00             	adc    BYTE PTR [edi],0x0
    17b7:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    17ba:	00 00                	add    BYTE PTR [eax],al
    17bc:	04 00                	add    al,0x0
    17be:	00 00                	add    BYTE PTR [eax],al
    17c0:	04 00                	add    al,0x0
    17c2:	00 00                	add    BYTE PTR [eax],al
    17c4:	68 01 00 00 05       	push   0x5000001
    17c9:	00 00                	add    BYTE PTR [eax],al
    17cb:	00 80 02 00 00 06    	add    BYTE PTR [eax+0x6000002],al
    17d1:	00 00                	add    BYTE PTR [eax],al
    17d3:	00 b0 01 00 00 0a    	add    BYTE PTR [eax+0xa000001],dh
    17d9:	00 00                	add    BYTE PTR [eax],al
    17db:	00 c9                	add    cl,cl
    17dd:	00 00                	add    BYTE PTR [eax],al
    17df:	00 0b                	add    BYTE PTR [ebx],cl
    17e1:	00 00                	add    BYTE PTR [eax],al
    17e3:	00 10                	add    BYTE PTR [eax],dl
    17e5:	00 00                	add    BYTE PTR [eax],al
    17e7:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
    17ed:	00 00                	add    BYTE PTR [eax],al
    17ef:	00 03                	add    BYTE PTR [ebx],al
    17f1:	00 00                	add    BYTE PTR [eax],al
    17f3:	00 98 18 00 00 02    	add    BYTE PTR [eax+0x2000018],bl
    17f9:	00 00                	add    BYTE PTR [eax],al
    17fb:	00 10                	add    BYTE PTR [eax],dl
    17fd:	00 00                	add    BYTE PTR [eax],al
    17ff:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
    1802:	00 00                	add    BYTE PTR [eax],al
    1804:	11 00                	adc    DWORD PTR [eax],eax
    1806:	00 00                	add    BYTE PTR [eax],al
    1808:	17                   	pop    ss
    1809:	00 00                	add    BYTE PTR [eax],al
    180b:	00 ec                	add    ah,ch
    180d:	03 00                	add    eax,DWORD PTR [eax]
    180f:	00 11                	add    BYTE PTR [ecx],dl
    1811:	00 00                	add    BYTE PTR [eax],al
    1813:	00 94 03 00 00 12 00 	add    BYTE PTR [ebx+eax*1+0x120000],dl
    181a:	00 00                	add    BYTE PTR [eax],al
    181c:	58                   	pop    eax
    181d:	00 00                	add    BYTE PTR [eax],al
    181f:	00 13                	add    BYTE PTR [ebx],dl
    1821:	00 00                	add    BYTE PTR [eax],al
    1823:	00 08                	add    BYTE PTR [eax],cl
    1825:	00 00                	add    BYTE PTR [eax],al
    1827:	00 16                	add    BYTE PTR [esi],dl
    1829:	00 00                	add    BYTE PTR [eax],al
    182b:	00 00                	add    BYTE PTR [eax],al
    182d:	00 00                	add    BYTE PTR [eax],al
    182f:	00 fb                	add    bl,bh
    1831:	ff                   	(bad)  
    1832:	ff 6f 00             	jmp    FWORD PTR [edi+0x0]
    1835:	00 00                	add    BYTE PTR [eax],al
    1837:	08 fe                	or     dh,bh
    1839:	ff                   	(bad)  
    183a:	ff 6f 64             	jmp    FWORD PTR [edi+0x64]
    183d:	03 00                	add    eax,DWORD PTR [eax]
    183f:	00 ff                	add    bh,bh
    1841:	ff                   	(bad)  
    1842:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    1845:	00 00                	add    BYTE PTR [eax],al
    1847:	00 f0                	add    al,dh
    1849:	ff                   	(bad)  
    184a:	ff 6f 4a             	jmp    FWORD PTR [edi+0x4a]
    184d:	03 00                	add    eax,DWORD PTR [eax]
    184f:	00 fa                	add    dl,bh
    1851:	ff                   	(bad)  
    1852:	ff 6f 05             	jmp    FWORD PTR [edi+0x5]
	...

Disassembly of section .got:

00001880 <.got>:
	...
    188c:	d0 05 00 00 00 00    	rol    BYTE PTR ds:0x0,1
    1892:	00 00                	add    BYTE PTR [eax],al
    1894:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

00001898 <_GLOBAL_OFFSET_TABLE_>:
    1898:	88 17                	mov    BYTE PTR [edi],dl
	...
    18a2:	00 00                	add    BYTE PTR [eax],al
    18a4:	36 04 00             	ss add al,0x0
    18a7:	00 46 04             	add    BYTE PTR [esi+0x4],al
	...

Disassembly of section .data:

000018ac <__data_start>:
    18ac:	00 00                	add    BYTE PTR [eax],al
	...

000018b0 <__dso_handle>:
    18b0:	b0 18                	mov    al,0x18
	...

Disassembly of section .bss:

000018b4 <__bss_start>:
    18b4:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   8:	55                   	push   ebp
   9:	29 20                	sub    DWORD PTR [eax],esp
   b:	35 2e 35 2e 30       	xor    eax,0x302e352e
	...
