
ex_pie:     file format elf32-i386


Disassembly of section .interp:

00000154 <.interp>:
 154:	2f                   	das    
 155:	6c                   	insb   (%dx),%es:(%edi)
 156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 15d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

00000168 <.note.ABI-tag>:
 168:	04 00                	add    $0x0,%al
 16a:	00 00                	add    %al,(%eax)
 16c:	10 00                	adc    %al,(%eax)
 16e:	00 00                	add    %al,(%eax)
 170:	01 00                	add    %eax,(%eax)
 172:	00 00                	add    %al,(%eax)
 174:	47                   	inc    %edi
 175:	4e                   	dec    %esi
 176:	55                   	push   %ebp
 177:	00 00                	add    %al,(%eax)
 179:	00 00                	add    %al,(%eax)
 17b:	00 02                	add    %al,(%edx)
 17d:	00 00                	add    %al,(%eax)
 17f:	00 06                	add    %al,(%esi)
 181:	00 00                	add    %al,(%eax)
 183:	00 20                	add    %ah,(%eax)
 185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

00000188 <.note.gnu.build-id>:
 188:	04 00                	add    $0x0,%al
 18a:	00 00                	add    %al,(%eax)
 18c:	14 00                	adc    $0x0,%al
 18e:	00 00                	add    %al,(%eax)
 190:	03 00                	add    (%eax),%eax
 192:	00 00                	add    %al,(%eax)
 194:	47                   	inc    %edi
 195:	4e                   	dec    %esi
 196:	55                   	push   %ebp
 197:	00 89 0d 8a 04 6a    	add    %cl,0x6a048a0d(%ecx)
 19d:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 19e:	ab                   	stos   %eax,%es:(%edi)
 19f:	ab                   	stos   %eax,%es:(%edi)
 1a0:	e6 9a                	out    %al,$0x9a
 1a2:	23 84 c5 15 94 14 f6 	and    -0x9eb6beb(%ebp,%eax,8),%eax
 1a9:	47                   	inc    %edi
 1aa:	ef                   	out    %eax,(%dx)
 1ab:	61                   	popa   

Disassembly of section .gnu.hash:

000001ac <.gnu.hash>:
 1ac:	03 00                	add    (%eax),%eax
 1ae:	00 00                	add    %al,(%eax)
 1b0:	08 00                	or     %al,(%eax)
 1b2:	00 00                	add    %al,(%eax)
 1b4:	01 00                	add    %eax,(%eax)
 1b6:	00 00                	add    %al,(%eax)
 1b8:	05 00 00 00 08       	add    $0x8000000,%eax
 1bd:	64 00 29             	add    %ch,%fs:(%ecx)
 1c0:	08 00                	or     %al,(%eax)
 1c2:	00 00                	add    %al,(%eax)
 1c4:	0a 00                	or     (%eax),%al
 1c6:	00 00                	add    %al,(%eax)
 1c8:	00 00                	add    %al,(%eax)
 1ca:	00 00                	add    %al,(%eax)
 1cc:	42                   	inc    %edx
 1cd:	45                   	inc    %ebp
 1ce:	d5 ec                	aad    $0xec
 1d0:	bb e3 92 7c ac       	mov    $0xac7c92e3,%ebx
 1d5:	4b                   	dec    %ebx
 1d6:	e3 c0                	jecxz  198 <_init-0x284>
 1d8:	d8 71 58             	fdivs  0x58(%ecx)
 1db:	1c 6b                	sbb    $0x6b,%al
 1dd:	7f 9a                	jg     179 <_init-0x2a3>
 1df:	7c                   	.byte 0x7c

Disassembly of section .dynsym:

000001e0 <.dynsym>:
	...
 1f0:	5a                   	pop    %edx
	...
 1f9:	00 00                	add    %al,(%eax)
 1fb:	00 20                	add    %ah,(%eax)
 1fd:	00 00                	add    %al,(%eax)
 1ff:	00 1a                	add    %bl,(%edx)
	...
 209:	00 00                	add    %al,(%eax)
 20b:	00 12                	add    %dl,(%edx)
 20d:	00 00                	add    %al,(%eax)
 20f:	00 21                	add    %ah,(%ecx)
	...
 219:	00 00                	add    %al,(%eax)
 21b:	00 22                	add    %ah,(%edx)
 21d:	00 00                	add    %al,(%eax)
 21f:	00 76 00             	add    %dh,0x0(%esi)
	...
 22a:	00 00                	add    %al,(%eax)
 22c:	20 00                	and    %al,(%eax)
 22e:	00 00                	add    %al,(%eax)
 230:	30 00                	xor    %al,(%eax)
	...
 23a:	00 00                	add    %al,(%eax)
 23c:	12 00                	adc    (%eax),%al
 23e:	00 00                	add    %al,(%eax)
 240:	85 00                	test   %eax,(%eax)
	...
 24a:	00 00                	add    %al,(%eax)
 24c:	20 00                	and    %al,(%eax)
 24e:	00 00                	add    %al,(%eax)
 250:	99                   	cltd   
	...
 259:	00 00                	add    %al,(%eax)
 25b:	00 20                	add    %ah,(%eax)
 25d:	00 00                	add    %al,(%eax)
 25f:	00 42 00             	add    %al,0x0(%edx)
 262:	00 00                	add    %al,(%eax)
 264:	1c 20                	sbb    $0x20,%al
 266:	00 00                	add    %al,(%eax)
 268:	00 00                	add    %al,(%eax)
 26a:	00 00                	add    %al,(%eax)
 26c:	10 00                	adc    %al,(%eax)
 26e:	19 00                	sbb    %eax,(%eax)
 270:	55                   	push   %ebp
 271:	00 00                	add    %al,(%eax)
 273:	00 20                	add    %ah,(%eax)
 275:	20 00                	and    %al,(%eax)
 277:	00 00                	add    %al,(%eax)
 279:	00 00                	add    %al,(%eax)
 27b:	00 10                	add    %dl,(%eax)
 27d:	00 1a                	add    %bl,(%edx)
 27f:	00 0b                	add    %cl,(%ebx)
 281:	00 00                	add    %al,(%eax)
 283:	00 ac 06 00 00 04 00 	add    %ch,0x40000(%esi,%eax,1)
 28a:	00 00                	add    %al,(%eax)
 28c:	11 00                	adc    %eax,(%eax)
 28e:	10 00                	adc    %al,(%eax)
 290:	49                   	dec    %ecx
 291:	00 00                	add    %al,(%eax)
 293:	00 1c 20             	add    %bl,(%eax,%eiz,1)
 296:	00 00                	add    %al,(%eax)
 298:	00 00                	add    %al,(%eax)
 29a:	00 00                	add    %al,(%eax)
 29c:	10 00                	adc    %al,(%eax)
 29e:	1a 00                	sbb    (%eax),%al
 2a0:	3d 00 00 00 f0       	cmp    $0xf0000000,%eax
 2a5:	05 00 00 38 00       	add    $0x380000,%eax
 2aa:	00 00                	add    %al,(%eax)
 2ac:	12 00                	adc    (%eax),%al
 2ae:	0e                   	push   %cs
	...

Disassembly of section .dynstr:

000002b0 <.dynstr>:
 2b0:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 2b4:	63 2e                	arpl   %bp,(%esi)
 2b6:	73 6f                	jae    327 <_init-0xf5>
 2b8:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 2bd:	4f                   	dec    %edi
 2be:	5f                   	pop    %edi
 2bf:	73 74                	jae    335 <_init-0xe7>
 2c1:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 2c8:	64 
 2c9:	00 70 72             	add    %dh,0x72(%eax)
 2cc:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 2d3:	63 78 61             	arpl   %di,0x61(%eax)
 2d6:	5f                   	pop    %edi
 2d7:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%esi),%bp
 2dd:	7a 65                	jp     344 <_init-0xd8>
 2df:	00 5f 5f             	add    %bl,0x5f(%edi)
 2e2:	6c                   	insb   (%dx),%es:(%edi)
 2e3:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 2ea:	72 74                	jb     360 <_init-0xbc>
 2ec:	5f                   	pop    %edi
 2ed:	6d                   	insl   (%dx),%es:(%edi)
 2ee:	61                   	popa   
 2ef:	69 6e 00 5f 65 64 61 	imul   $0x6164655f,0x0(%esi),%ebp
 2f6:	74 61                	je     359 <_init-0xc3>
 2f8:	00 5f 5f             	add    %bl,0x5f(%edi)
 2fb:	62 73 73             	bound  %esi,0x73(%ebx)
 2fe:	5f                   	pop    %edi
 2ff:	73 74                	jae    375 <_init-0xa7>
 301:	61                   	popa   
 302:	72 74                	jb     378 <_init-0xa4>
 304:	00 5f 65             	add    %bl,0x65(%edi)
 307:	6e                   	outsb  %ds:(%esi),(%dx)
 308:	64 00 5f 49          	add    %bl,%fs:0x49(%edi)
 30c:	54                   	push   %esp
 30d:	4d                   	dec    %ebp
 30e:	5f                   	pop    %edi
 30f:	64 65 72 65          	fs gs jb 378 <_init-0xa4>
 313:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 31a:	4d 
 31b:	43                   	inc    %ebx
 31c:	6c                   	insb   (%dx),%es:(%edi)
 31d:	6f                   	outsl  %ds:(%esi),(%dx)
 31e:	6e                   	outsb  %ds:(%esi),(%dx)
 31f:	65 54                	gs push %esp
 321:	61                   	popa   
 322:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 326:	5f                   	pop    %edi
 327:	5f                   	pop    %edi
 328:	67 6d                	insl   (%dx),%es:(%di)
 32a:	6f                   	outsl  %ds:(%esi),(%dx)
 32b:	6e                   	outsb  %ds:(%esi),(%dx)
 32c:	5f                   	pop    %edi
 32d:	73 74                	jae    3a3 <_init-0x79>
 32f:	61                   	popa   
 330:	72 74                	jb     3a6 <_init-0x76>
 332:	5f                   	pop    %edi
 333:	5f                   	pop    %edi
 334:	00 5f 4a             	add    %bl,0x4a(%edi)
 337:	76 5f                	jbe    398 <_init-0x84>
 339:	52                   	push   %edx
 33a:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
 341:	43 6c 
 343:	61                   	popa   
 344:	73 73                	jae    3b9 <_init-0x63>
 346:	65 73 00             	gs jae 349 <_init-0xd3>
 349:	5f                   	pop    %edi
 34a:	49                   	dec    %ecx
 34b:	54                   	push   %esp
 34c:	4d                   	dec    %ebp
 34d:	5f                   	pop    %edi
 34e:	72 65                	jb     3b5 <_init-0x67>
 350:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 357:	4d 
 358:	43                   	inc    %ebx
 359:	6c                   	insb   (%dx),%es:(%edi)
 35a:	6f                   	outsl  %ds:(%esi),(%dx)
 35b:	6e                   	outsb  %ds:(%esi),(%dx)
 35c:	65 54                	gs push %esp
 35e:	61                   	popa   
 35f:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 363:	47                   	inc    %edi
 364:	4c                   	dec    %esp
 365:	49                   	dec    %ecx
 366:	42                   	inc    %edx
 367:	43                   	inc    %ebx
 368:	5f                   	pop    %edi
 369:	32 2e                	xor    (%esi),%ch
 36b:	31 2e                	xor    %ebp,(%esi)
 36d:	33 00                	xor    (%eax),%eax
 36f:	47                   	inc    %edi
 370:	4c                   	dec    %esp
 371:	49                   	dec    %ecx
 372:	42                   	inc    %edx
 373:	43                   	inc    %ebx
 374:	5f                   	pop    %edi
 375:	32 2e                	xor    (%esi),%ch
 377:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

0000037a <.gnu.version>:
 37a:	00 00                	add    %al,(%eax)
 37c:	00 00                	add    %al,(%eax)
 37e:	02 00                	add    (%eax),%al
 380:	03 00                	add    (%eax),%eax
 382:	00 00                	add    %al,(%eax)
 384:	02 00                	add    (%eax),%al
 386:	00 00                	add    %al,(%eax)
 388:	00 00                	add    %al,(%eax)
 38a:	01 00                	add    %eax,(%eax)
 38c:	01 00                	add    %eax,(%eax)
 38e:	01 00                	add    %eax,(%eax)
 390:	01 00                	add    %eax,(%eax)
 392:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

00000394 <.gnu.version_r>:
 394:	01 00                	add    %eax,(%eax)
 396:	02 00                	add    (%eax),%al
 398:	01 00                	add    %eax,(%eax)
 39a:	00 00                	add    %al,(%eax)
 39c:	10 00                	adc    %al,(%eax)
 39e:	00 00                	add    %al,(%eax)
 3a0:	00 00                	add    %al,(%eax)
 3a2:	00 00                	add    %al,(%eax)
 3a4:	73 1f                	jae    3c5 <_init-0x57>
 3a6:	69 09 00 00 03 00    	imul   $0x30000,(%ecx),%ecx
 3ac:	b3 00                	mov    $0x0,%bl
 3ae:	00 00                	add    %al,(%eax)
 3b0:	10 00                	adc    %al,(%eax)
 3b2:	00 00                	add    %al,(%eax)
 3b4:	10 69 69             	adc    %ch,0x69(%ecx)
 3b7:	0d 00 00 02 00       	or     $0x20000,%eax
 3bc:	bf 00 00 00 00       	mov    $0x0,%edi
 3c1:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

000003c4 <.rel.dyn>:
 3c4:	ec                   	in     (%dx),%al
 3c5:	1e                   	push   %ds
 3c6:	00 00                	add    %al,(%eax)
 3c8:	08 00                	or     %al,(%eax)
 3ca:	00 00                	add    %al,(%eax)
 3cc:	f0 1e                	lock push %ds
 3ce:	00 00                	add    %al,(%eax)
 3d0:	08 00                	or     %al,(%eax)
 3d2:	00 00                	add    %al,(%eax)
 3d4:	f4                   	hlt    
 3d5:	1f                   	pop    %ds
 3d6:	00 00                	add    %al,(%eax)
 3d8:	08 00                	or     %al,(%eax)
 3da:	00 00                	add    %al,(%eax)
 3dc:	18 20                	sbb    %ah,(%eax)
 3de:	00 00                	add    %al,(%eax)
 3e0:	08 00                	or     %al,(%eax)
 3e2:	00 00                	add    %al,(%eax)
 3e4:	e8 1f 00 00 06       	call   6000408 <_end+0x5ffe3e8>
 3e9:	01 00                	add    %eax,(%eax)
 3eb:	00 ec                	add    %ch,%ah
 3ed:	1f                   	pop    %ds
 3ee:	00 00                	add    %al,(%eax)
 3f0:	06                   	push   %es
 3f1:	03 00                	add    (%eax),%eax
 3f3:	00 f0                	add    %dh,%al
 3f5:	1f                   	pop    %ds
 3f6:	00 00                	add    %al,(%eax)
 3f8:	06                   	push   %es
 3f9:	04 00                	add    $0x0,%al
 3fb:	00 f8                	add    %bh,%al
 3fd:	1f                   	pop    %ds
 3fe:	00 00                	add    %al,(%eax)
 400:	06                   	push   %es
 401:	06                   	push   %es
 402:	00 00                	add    %al,(%eax)
 404:	fc                   	cld    
 405:	1f                   	pop    %ds
 406:	00 00                	add    %al,(%eax)
 408:	06                   	push   %es
 409:	07                   	pop    %es
	...

Disassembly of section .rel.plt:

0000040c <.rel.plt>:
 40c:	0c 20                	or     $0x20,%al
 40e:	00 00                	add    %al,(%eax)
 410:	07                   	pop    %es
 411:	02 00                	add    (%eax),%al
 413:	00 10                	add    %dl,(%eax)
 415:	20 00                	and    %al,(%eax)
 417:	00 07                	add    %al,(%edi)
 419:	05                   	.byte 0x5
	...

Disassembly of section .init:

0000041c <_init>:
 41c:	53                   	push   %ebx
 41d:	83 ec 08             	sub    $0x8,%esp
 420:	e8 9b 00 00 00       	call   4c0 <__x86.get_pc_thunk.bx>
 425:	81 c3 db 1b 00 00    	add    $0x1bdb,%ebx
 42b:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
 431:	85 c0                	test   %eax,%eax
 433:	74 05                	je     43a <_init+0x1e>
 435:	e8 3e 00 00 00       	call   478 <__libc_start_main@plt+0x18>
 43a:	83 c4 08             	add    $0x8,%esp
 43d:	5b                   	pop    %ebx
 43e:	c3                   	ret    

Disassembly of section .plt:

00000440 <printf@plt-0x10>:
 440:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 446:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 44c:	00 00                	add    %al,(%eax)
	...

00000450 <printf@plt>:
 450:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 456:	68 00 00 00 00       	push   $0x0
 45b:	e9 e0 ff ff ff       	jmp    440 <_init+0x24>

00000460 <__libc_start_main@plt>:
 460:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 466:	68 08 00 00 00       	push   $0x8
 46b:	e9 d0 ff ff ff       	jmp    440 <_init+0x24>

Disassembly of section .plt.got:

00000470 <.plt.got>:
 470:	ff a3 ec ff ff ff    	jmp    *-0x14(%ebx)
 476:	66 90                	xchg   %ax,%ax
 478:	ff a3 f0 ff ff ff    	jmp    *-0x10(%ebx)
 47e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000480 <_start>:
 480:	31 ed                	xor    %ebp,%ebp
 482:	5e                   	pop    %esi
 483:	89 e1                	mov    %esp,%ecx
 485:	83 e4 f0             	and    $0xfffffff0,%esp
 488:	50                   	push   %eax
 489:	54                   	push   %esp
 48a:	52                   	push   %edx
 48b:	e8 22 00 00 00       	call   4b2 <_start+0x32>
 490:	81 c3 70 1b 00 00    	add    $0x1b70,%ebx
 496:	8d 83 90 e6 ff ff    	lea    -0x1970(%ebx),%eax
 49c:	50                   	push   %eax
 49d:	8d 83 30 e6 ff ff    	lea    -0x19d0(%ebx),%eax
 4a3:	50                   	push   %eax
 4a4:	51                   	push   %ecx
 4a5:	56                   	push   %esi
 4a6:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)
 4ac:	e8 af ff ff ff       	call   460 <__libc_start_main@plt>
 4b1:	f4                   	hlt    
 4b2:	8b 1c 24             	mov    (%esp),%ebx
 4b5:	c3                   	ret    
 4b6:	66 90                	xchg   %ax,%ax
 4b8:	66 90                	xchg   %ax,%ax
 4ba:	66 90                	xchg   %ax,%ax
 4bc:	66 90                	xchg   %ax,%ax
 4be:	66 90                	xchg   %ax,%ax

000004c0 <__x86.get_pc_thunk.bx>:
 4c0:	8b 1c 24             	mov    (%esp),%ebx
 4c3:	c3                   	ret    
 4c4:	66 90                	xchg   %ax,%ax
 4c6:	66 90                	xchg   %ax,%ax
 4c8:	66 90                	xchg   %ax,%ax
 4ca:	66 90                	xchg   %ax,%ax
 4cc:	66 90                	xchg   %ax,%ax
 4ce:	66 90                	xchg   %ax,%ax

000004d0 <deregister_tm_clones>:
 4d0:	e8 17 01 00 00       	call   5ec <__x86.get_pc_thunk.dx>
 4d5:	81 c2 2b 1b 00 00    	add    $0x1b2b,%edx
 4db:	8d 8a 1c 00 00 00    	lea    0x1c(%edx),%ecx
 4e1:	8d 82 1f 00 00 00    	lea    0x1f(%edx),%eax
 4e7:	29 c8                	sub    %ecx,%eax
 4e9:	83 f8 06             	cmp    $0x6,%eax
 4ec:	76 17                	jbe    505 <deregister_tm_clones+0x35>
 4ee:	8b 82 e8 ff ff ff    	mov    -0x18(%edx),%eax
 4f4:	85 c0                	test   %eax,%eax
 4f6:	74 0d                	je     505 <deregister_tm_clones+0x35>
 4f8:	55                   	push   %ebp
 4f9:	89 e5                	mov    %esp,%ebp
 4fb:	83 ec 14             	sub    $0x14,%esp
 4fe:	51                   	push   %ecx
 4ff:	ff d0                	call   *%eax
 501:	83 c4 10             	add    $0x10,%esp
 504:	c9                   	leave  
 505:	f3 c3                	repz ret 
 507:	89 f6                	mov    %esi,%esi
 509:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000510 <register_tm_clones>:
 510:	e8 d7 00 00 00       	call   5ec <__x86.get_pc_thunk.dx>
 515:	81 c2 eb 1a 00 00    	add    $0x1aeb,%edx
 51b:	55                   	push   %ebp
 51c:	8d 8a 1c 00 00 00    	lea    0x1c(%edx),%ecx
 522:	8d 82 1c 00 00 00    	lea    0x1c(%edx),%eax
 528:	89 e5                	mov    %esp,%ebp
 52a:	53                   	push   %ebx
 52b:	29 c8                	sub    %ecx,%eax
 52d:	c1 f8 02             	sar    $0x2,%eax
 530:	83 ec 04             	sub    $0x4,%esp
 533:	89 c3                	mov    %eax,%ebx
 535:	c1 eb 1f             	shr    $0x1f,%ebx
 538:	01 d8                	add    %ebx,%eax
 53a:	d1 f8                	sar    %eax
 53c:	74 14                	je     552 <register_tm_clones+0x42>
 53e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
 544:	85 d2                	test   %edx,%edx
 546:	74 0a                	je     552 <register_tm_clones+0x42>
 548:	83 ec 08             	sub    $0x8,%esp
 54b:	50                   	push   %eax
 54c:	51                   	push   %ecx
 54d:	ff d2                	call   *%edx
 54f:	83 c4 10             	add    $0x10,%esp
 552:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 555:	c9                   	leave  
 556:	c3                   	ret    
 557:	89 f6                	mov    %esi,%esi
 559:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000560 <__do_global_dtors_aux>:
 560:	55                   	push   %ebp
 561:	89 e5                	mov    %esp,%ebp
 563:	53                   	push   %ebx
 564:	e8 57 ff ff ff       	call   4c0 <__x86.get_pc_thunk.bx>
 569:	81 c3 97 1a 00 00    	add    $0x1a97,%ebx
 56f:	83 ec 04             	sub    $0x4,%esp
 572:	80 bb 1c 00 00 00 00 	cmpb   $0x0,0x1c(%ebx)
 579:	75 27                	jne    5a2 <__do_global_dtors_aux+0x42>
 57b:	8b 83 ec ff ff ff    	mov    -0x14(%ebx),%eax
 581:	85 c0                	test   %eax,%eax
 583:	74 11                	je     596 <__do_global_dtors_aux+0x36>
 585:	83 ec 0c             	sub    $0xc,%esp
 588:	ff b3 18 00 00 00    	pushl  0x18(%ebx)
 58e:	e8 dd fe ff ff       	call   470 <__libc_start_main@plt+0x10>
 593:	83 c4 10             	add    $0x10,%esp
 596:	e8 35 ff ff ff       	call   4d0 <deregister_tm_clones>
 59b:	c6 83 1c 00 00 00 01 	movb   $0x1,0x1c(%ebx)
 5a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 5a5:	c9                   	leave  
 5a6:	c3                   	ret    
 5a7:	89 f6                	mov    %esi,%esi
 5a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000005b0 <frame_dummy>:
 5b0:	e8 37 00 00 00       	call   5ec <__x86.get_pc_thunk.dx>
 5b5:	81 c2 4b 1a 00 00    	add    $0x1a4b,%edx
 5bb:	8d 82 f4 fe ff ff    	lea    -0x10c(%edx),%eax
 5c1:	8b 08                	mov    (%eax),%ecx
 5c3:	85 c9                	test   %ecx,%ecx
 5c5:	75 09                	jne    5d0 <frame_dummy+0x20>
 5c7:	e9 44 ff ff ff       	jmp    510 <register_tm_clones>
 5cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 5d0:	8b 92 f8 ff ff ff    	mov    -0x8(%edx),%edx
 5d6:	85 d2                	test   %edx,%edx
 5d8:	74 ed                	je     5c7 <frame_dummy+0x17>
 5da:	55                   	push   %ebp
 5db:	89 e5                	mov    %esp,%ebp
 5dd:	83 ec 14             	sub    $0x14,%esp
 5e0:	50                   	push   %eax
 5e1:	ff d2                	call   *%edx
 5e3:	83 c4 10             	add    $0x10,%esp
 5e6:	c9                   	leave  
 5e7:	e9 24 ff ff ff       	jmp    510 <register_tm_clones>

000005ec <__x86.get_pc_thunk.dx>:
 5ec:	8b 14 24             	mov    (%esp),%edx
 5ef:	c3                   	ret    

000005f0 <main>:
 5f0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 5f4:	83 e4 f0             	and    $0xfffffff0,%esp
 5f7:	ff 71 fc             	pushl  -0x4(%ecx)
 5fa:	55                   	push   %ebp
 5fb:	89 e5                	mov    %esp,%ebp
 5fd:	53                   	push   %ebx
 5fe:	51                   	push   %ecx
 5ff:	e8 24 00 00 00       	call   628 <__x86.get_pc_thunk.ax>
 604:	05 fc 19 00 00       	add    $0x19fc,%eax
 609:	83 ec 0c             	sub    $0xc,%esp
 60c:	8d 90 b0 e6 ff ff    	lea    -0x1950(%eax),%edx
 612:	52                   	push   %edx
 613:	89 c3                	mov    %eax,%ebx
 615:	e8 36 fe ff ff       	call   450 <printf@plt>
 61a:	83 c4 10             	add    $0x10,%esp
 61d:	90                   	nop
 61e:	8d 65 f8             	lea    -0x8(%ebp),%esp
 621:	59                   	pop    %ecx
 622:	5b                   	pop    %ebx
 623:	5d                   	pop    %ebp
 624:	8d 61 fc             	lea    -0x4(%ecx),%esp
 627:	c3                   	ret    

00000628 <__x86.get_pc_thunk.ax>:
 628:	8b 04 24             	mov    (%esp),%eax
 62b:	c3                   	ret    
 62c:	66 90                	xchg   %ax,%ax
 62e:	66 90                	xchg   %ax,%ax

00000630 <__libc_csu_init>:
 630:	55                   	push   %ebp
 631:	57                   	push   %edi
 632:	56                   	push   %esi
 633:	53                   	push   %ebx
 634:	e8 87 fe ff ff       	call   4c0 <__x86.get_pc_thunk.bx>
 639:	81 c3 c7 19 00 00    	add    $0x19c7,%ebx
 63f:	83 ec 0c             	sub    $0xc,%esp
 642:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 646:	8d b3 f0 fe ff ff    	lea    -0x110(%ebx),%esi
 64c:	e8 cb fd ff ff       	call   41c <_init>
 651:	8d 83 ec fe ff ff    	lea    -0x114(%ebx),%eax
 657:	29 c6                	sub    %eax,%esi
 659:	c1 fe 02             	sar    $0x2,%esi
 65c:	85 f6                	test   %esi,%esi
 65e:	74 25                	je     685 <__libc_csu_init+0x55>
 660:	31 ff                	xor    %edi,%edi
 662:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 668:	83 ec 04             	sub    $0x4,%esp
 66b:	ff 74 24 2c          	pushl  0x2c(%esp)
 66f:	ff 74 24 2c          	pushl  0x2c(%esp)
 673:	55                   	push   %ebp
 674:	ff 94 bb ec fe ff ff 	call   *-0x114(%ebx,%edi,4)
 67b:	83 c7 01             	add    $0x1,%edi
 67e:	83 c4 10             	add    $0x10,%esp
 681:	39 f7                	cmp    %esi,%edi
 683:	75 e3                	jne    668 <__libc_csu_init+0x38>
 685:	83 c4 0c             	add    $0xc,%esp
 688:	5b                   	pop    %ebx
 689:	5e                   	pop    %esi
 68a:	5f                   	pop    %edi
 68b:	5d                   	pop    %ebp
 68c:	c3                   	ret    
 68d:	8d 76 00             	lea    0x0(%esi),%esi

00000690 <__libc_csu_fini>:
 690:	f3 c3                	repz ret 

Disassembly of section .fini:

00000694 <_fini>:
 694:	53                   	push   %ebx
 695:	83 ec 08             	sub    $0x8,%esp
 698:	e8 23 fe ff ff       	call   4c0 <__x86.get_pc_thunk.bx>
 69d:	81 c3 63 19 00 00    	add    $0x1963,%ebx
 6a3:	83 c4 08             	add    $0x8,%esp
 6a6:	5b                   	pop    %ebx
 6a7:	c3                   	ret    

Disassembly of section .rodata:

000006a8 <_fp_hw>:
 6a8:	03 00                	add    (%eax),%eax
	...

000006ac <_IO_stdin_used>:
 6ac:	01 00                	add    %eax,(%eax)
 6ae:	02 00                	add    (%eax),%al
 6b0:	67 6f                	outsl  %ds:(%si),(%dx)
	...

Disassembly of section .eh_frame_hdr:

000006b4 <__GNU_EH_FRAME_HDR>:
 6b4:	01 1b                	add    %ebx,(%ebx)
 6b6:	03 3b                	add    (%ebx),%edi
 6b8:	30 00                	xor    %al,(%eax)
 6ba:	00 00                	add    %al,(%eax)
 6bc:	05 00 00 00 8c       	add    $0x8c000000,%eax
 6c1:	fd                   	std    
 6c2:	ff                   	(bad)  
 6c3:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 6c7:	00 3c ff             	add    %bh,(%edi,%edi,8)
 6ca:	ff                   	(bad)  
 6cb:	ff 70 00             	pushl  0x0(%eax)
 6ce:	00 00                	add    %al,(%eax)
 6d0:	74 ff                	je     6d1 <__GNU_EH_FRAME_HDR+0x1d>
 6d2:	ff                   	(bad)  
 6d3:	ff a4 00 00 00 7c ff 	jmp    *-0x840000(%eax,%eax,1)
 6da:	ff                   	(bad)  
 6db:	ff                   	(bad)  
 6dc:	b8 00 00 00 dc       	mov    $0xdc000000,%eax
 6e1:	ff                   	(bad)  
 6e2:	ff                   	(bad)  
 6e3:	ff 04 01             	incl   (%ecx,%eax,1)
	...

Disassembly of section .eh_frame:

000006e8 <__FRAME_END__-0xe4>:
 6e8:	14 00                	adc    $0x0,%al
 6ea:	00 00                	add    %al,(%eax)
 6ec:	00 00                	add    %al,(%eax)
 6ee:	00 00                	add    %al,(%eax)
 6f0:	01 7a 52             	add    %edi,0x52(%edx)
 6f3:	00 01                	add    %al,(%ecx)
 6f5:	7c 08                	jl     6ff <__GNU_EH_FRAME_HDR+0x4b>
 6f7:	01 1b                	add    %ebx,(%ebx)
 6f9:	0c 04                	or     $0x4,%al
 6fb:	04 88                	add    $0x88,%al
 6fd:	01 00                	add    %eax,(%eax)
 6ff:	00 20                	add    %ah,(%eax)
 701:	00 00                	add    %al,(%eax)
 703:	00 1c 00             	add    %bl,(%eax,%eax,1)
 706:	00 00                	add    %al,(%eax)
 708:	38 fd                	cmp    %bh,%ch
 70a:	ff                   	(bad)  
 70b:	ff 30                	pushl  (%eax)
 70d:	00 00                	add    %al,(%eax)
 70f:	00 00                	add    %al,(%eax)
 711:	0e                   	push   %cs
 712:	08 46 0e             	or     %al,0xe(%esi)
 715:	0c 4a                	or     $0x4a,%al
 717:	0f 0b                	ud2    
 719:	74 04                	je     71f <__GNU_EH_FRAME_HDR+0x6b>
 71b:	78 00                	js     71d <__GNU_EH_FRAME_HDR+0x69>
 71d:	3f                   	aas    
 71e:	1a 3b                	sbb    (%ebx),%bh
 720:	2a 32                	sub    (%edx),%dh
 722:	24 22                	and    $0x22,%al
 724:	30 00                	xor    %al,(%eax)
 726:	00 00                	add    %al,(%eax)
 728:	40                   	inc    %eax
 729:	00 00                	add    %al,(%eax)
 72b:	00 c4                	add    %al,%ah
 72d:	fe                   	(bad)  
 72e:	ff                   	(bad)  
 72f:	ff                   	(bad)  
 730:	38 00                	cmp    %al,(%eax)
 732:	00 00                	add    %al,(%eax)
 734:	00 44 0c 01          	add    %al,0x1(%esp,%ecx,1)
 738:	00 47 10             	add    %al,0x10(%edi)
 73b:	05 02 75 00 44       	add    $0x44007502,%eax
 740:	0f 03 75 78          	lsl    0x78(%ebp),%esi
 744:	06                   	push   %es
 745:	10 03                	adc    %al,(%ebx)
 747:	02 75 7c             	add    0x7c(%ebp),%dh
 74a:	63 c1                	arpl   %ax,%cx
 74c:	0c 01                	or     $0x1,%al
 74e:	00 41 c3             	add    %al,-0x3d(%ecx)
 751:	41                   	inc    %ecx
 752:	c5 43 0c             	lds    0xc(%ebx),%eax
 755:	04 04                	add    $0x4,%al
 757:	00 10                	add    %dl,(%eax)
 759:	00 00                	add    %al,(%eax)
 75b:	00 74 00 00          	add    %dh,0x0(%eax,%eax,1)
 75f:	00 c8                	add    %cl,%al
 761:	fe                   	(bad)  
 762:	ff                   	(bad)  
 763:	ff 04 00             	incl   (%eax,%eax,1)
 766:	00 00                	add    %al,(%eax)
 768:	00 00                	add    %al,(%eax)
 76a:	00 00                	add    %al,(%eax)
 76c:	48                   	dec    %eax
 76d:	00 00                	add    %al,(%eax)
 76f:	00 88 00 00 00 bc    	add    %cl,-0x44000000(%eax)
 775:	fe                   	(bad)  
 776:	ff                   	(bad)  
 777:	ff 5d 00             	lcall  *0x0(%ebp)
 77a:	00 00                	add    %al,(%eax)
 77c:	00 41 0e             	add    %al,0xe(%ecx)
 77f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 785:	87 03                	xchg   %eax,(%ebx)
 787:	41                   	inc    %ecx
 788:	0e                   	push   %cs
 789:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 78f:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 796:	24 44                	and    $0x44,%al
 798:	0e                   	push   %cs
 799:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 79d:	41                   	inc    %ecx
 79e:	0e                   	push   %cs
 79f:	30 4d 0e             	xor    %cl,0xe(%ebp)
 7a2:	20 47 0e             	and    %al,0xe(%edi)
 7a5:	14 41                	adc    $0x41,%al
 7a7:	c3                   	ret    
 7a8:	0e                   	push   %cs
 7a9:	10 41 c6             	adc    %al,-0x3a(%ecx)
 7ac:	0e                   	push   %cs
 7ad:	0c 41                	or     $0x41,%al
 7af:	c7                   	(bad)  
 7b0:	0e                   	push   %cs
 7b1:	08 41 c5             	or     %al,-0x3b(%ecx)
 7b4:	0e                   	push   %cs
 7b5:	04 00                	add    $0x0,%al
 7b7:	00 10                	add    %dl,(%eax)
 7b9:	00 00                	add    %al,(%eax)
 7bb:	00 d4                	add    %dl,%ah
 7bd:	00 00                	add    %al,(%eax)
 7bf:	00 d0                	add    %dl,%al
 7c1:	fe                   	(bad)  
 7c2:	ff                   	(bad)  
 7c3:	ff 02                	incl   (%edx)
 7c5:	00 00                	add    %al,(%eax)
 7c7:	00 00                	add    %al,(%eax)
 7c9:	00 00                	add    %al,(%eax)
	...

000007cc <__FRAME_END__>:
 7cc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

00001eec <__frame_dummy_init_array_entry>:
    1eec:	b0 05                	mov    $0x5,%al
	...

Disassembly of section .fini_array:

00001ef0 <__do_global_dtors_aux_fini_array_entry>:
    1ef0:	60                   	pusha  
    1ef1:	05                   	.byte 0x5
	...

Disassembly of section .jcr:

00001ef4 <__JCR_END__>:
    1ef4:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

00001ef8 <_DYNAMIC>:
    1ef8:	01 00                	add    %eax,(%eax)
    1efa:	00 00                	add    %al,(%eax)
    1efc:	01 00                	add    %eax,(%eax)
    1efe:	00 00                	add    %al,(%eax)
    1f00:	0c 00                	or     $0x0,%al
    1f02:	00 00                	add    %al,(%eax)
    1f04:	1c 04                	sbb    $0x4,%al
    1f06:	00 00                	add    %al,(%eax)
    1f08:	0d 00 00 00 94       	or     $0x94000000,%eax
    1f0d:	06                   	push   %es
    1f0e:	00 00                	add    %al,(%eax)
    1f10:	19 00                	sbb    %eax,(%eax)
    1f12:	00 00                	add    %al,(%eax)
    1f14:	ec                   	in     (%dx),%al
    1f15:	1e                   	push   %ds
    1f16:	00 00                	add    %al,(%eax)
    1f18:	1b 00                	sbb    (%eax),%eax
    1f1a:	00 00                	add    %al,(%eax)
    1f1c:	04 00                	add    $0x0,%al
    1f1e:	00 00                	add    %al,(%eax)
    1f20:	1a 00                	sbb    (%eax),%al
    1f22:	00 00                	add    %al,(%eax)
    1f24:	f0 1e                	lock push %ds
    1f26:	00 00                	add    %al,(%eax)
    1f28:	1c 00                	sbb    $0x0,%al
    1f2a:	00 00                	add    %al,(%eax)
    1f2c:	04 00                	add    $0x0,%al
    1f2e:	00 00                	add    %al,(%eax)
    1f30:	f5                   	cmc    
    1f31:	fe                   	(bad)  
    1f32:	ff 6f ac             	ljmp   *-0x54(%edi)
    1f35:	01 00                	add    %eax,(%eax)
    1f37:	00 05 00 00 00 b0    	add    %al,0xb0000000
    1f3d:	02 00                	add    (%eax),%al
    1f3f:	00 06                	add    %al,(%esi)
    1f41:	00 00                	add    %al,(%eax)
    1f43:	00 e0                	add    %ah,%al
    1f45:	01 00                	add    %eax,(%eax)
    1f47:	00 0a                	add    %cl,(%edx)
    1f49:	00 00                	add    %al,(%eax)
    1f4b:	00 c9                	add    %cl,%cl
    1f4d:	00 00                	add    %al,(%eax)
    1f4f:	00 0b                	add    %cl,(%ebx)
    1f51:	00 00                	add    %al,(%eax)
    1f53:	00 10                	add    %dl,(%eax)
    1f55:	00 00                	add    %al,(%eax)
    1f57:	00 15 00 00 00 00    	add    %dl,0x0
    1f5d:	00 00                	add    %al,(%eax)
    1f5f:	00 03                	add    %al,(%ebx)
    1f61:	00 00                	add    %al,(%eax)
    1f63:	00 00                	add    %al,(%eax)
    1f65:	20 00                	and    %al,(%eax)
    1f67:	00 02                	add    %al,(%edx)
    1f69:	00 00                	add    %al,(%eax)
    1f6b:	00 10                	add    %dl,(%eax)
    1f6d:	00 00                	add    %al,(%eax)
    1f6f:	00 14 00             	add    %dl,(%eax,%eax,1)
    1f72:	00 00                	add    %al,(%eax)
    1f74:	11 00                	adc    %eax,(%eax)
    1f76:	00 00                	add    %al,(%eax)
    1f78:	17                   	pop    %ss
    1f79:	00 00                	add    %al,(%eax)
    1f7b:	00 0c 04             	add    %cl,(%esp,%eax,1)
    1f7e:	00 00                	add    %al,(%eax)
    1f80:	11 00                	adc    %eax,(%eax)
    1f82:	00 00                	add    %al,(%eax)
    1f84:	c4 03                	les    (%ebx),%eax
    1f86:	00 00                	add    %al,(%eax)
    1f88:	12 00                	adc    (%eax),%al
    1f8a:	00 00                	add    %al,(%eax)
    1f8c:	48                   	dec    %eax
    1f8d:	00 00                	add    %al,(%eax)
    1f8f:	00 13                	add    %dl,(%ebx)
    1f91:	00 00                	add    %al,(%eax)
    1f93:	00 08                	add    %cl,(%eax)
    1f95:	00 00                	add    %al,(%eax)
    1f97:	00 fb                	add    %bh,%bl
    1f99:	ff                   	(bad)  
    1f9a:	ff 6f 00             	ljmp   *0x0(%edi)
    1f9d:	00 00                	add    %al,(%eax)
    1f9f:	08 fe                	or     %bh,%dh
    1fa1:	ff                   	(bad)  
    1fa2:	ff 6f 94             	ljmp   *-0x6c(%edi)
    1fa5:	03 00                	add    (%eax),%eax
    1fa7:	00 ff                	add    %bh,%bh
    1fa9:	ff                   	(bad)  
    1faa:	ff 6f 01             	ljmp   *0x1(%edi)
    1fad:	00 00                	add    %al,(%eax)
    1faf:	00 f0                	add    %dh,%al
    1fb1:	ff                   	(bad)  
    1fb2:	ff 6f 7a             	ljmp   *0x7a(%edi)
    1fb5:	03 00                	add    (%eax),%eax
    1fb7:	00 fa                	add    %bh,%dl
    1fb9:	ff                   	(bad)  
    1fba:	ff 6f 04             	ljmp   *0x4(%edi)
	...

Disassembly of section .got:

00001fe8 <.got>:
	...
    1ff4:	f0 05 00 00 00 00    	lock add $0x0,%eax
    1ffa:	00 00                	add    %al,(%eax)
    1ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

00002000 <_GLOBAL_OFFSET_TABLE_>:
    2000:	f8                   	clc    
    2001:	1e                   	push   %ds
	...
    200a:	00 00                	add    %al,(%eax)
    200c:	56                   	push   %esi
    200d:	04 00                	add    $0x0,%al
    200f:	00 66 04             	add    %ah,0x4(%esi)
	...

Disassembly of section .data:

00002014 <__data_start>:
    2014:	00 00                	add    %al,(%eax)
	...

00002018 <__dso_handle>:
    2018:	18 20                	sbb    %ah,(%eax)
	...

Disassembly of section .bss:

0000201c <__bss_start>:
    201c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x3a4>
   a:	74 75                	je     81 <_init-0x39b>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x38d>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%esi,%ebp,1)
  22:	31 30                	xor    %esi,(%eax)
  24:	29 20                	sub    %esp,(%eax)
  26:	35 2e 34 2e 30       	xor    $0x302e342e,%eax
  2b:	20 32                	and    %dh,(%edx)
  2d:	30 31                	xor    %dh,(%ecx)
  2f:	36 30 36             	xor    %dh,%ss:(%esi)
  32:	30 39                	xor    %bh,(%ecx)
	...
