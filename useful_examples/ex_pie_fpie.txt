
ex_pie_fpie:     file format elf32-i386


Disassembly of section .interp:

00000134 <.interp>:
 134:	2f                   	das    
 135:	6c                   	insb   (%dx),%es:(%edi)
 136:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 13d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 144:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

00000148 <.note.ABI-tag>:
 148:	04 00                	add    $0x0,%al
 14a:	00 00                	add    %al,(%eax)
 14c:	10 00                	adc    %al,(%eax)
 14e:	00 00                	add    %al,(%eax)
 150:	01 00                	add    %eax,(%eax)
 152:	00 00                	add    %al,(%eax)
 154:	47                   	inc    %edi
 155:	4e                   	dec    %esi
 156:	55                   	push   %ebp
 157:	00 00                	add    %al,(%eax)
 159:	00 00                	add    %al,(%eax)
 15b:	00 02                	add    %al,(%edx)
 15d:	00 00                	add    %al,(%eax)
 15f:	00 06                	add    %al,(%esi)
 161:	00 00                	add    %al,(%eax)
 163:	00 20                	add    %ah,(%eax)
 165:	00 00                	add    %al,(%eax)
	...

Disassembly of section .hash:

00000168 <.hash>:
 168:	03 00                	add    (%eax),%eax
 16a:	00 00                	add    %al,(%eax)
 16c:	0d 00 00 00 0b       	or     $0xb000000,%eax
 171:	00 00                	add    %al,(%eax)
 173:	00 0c 00             	add    %cl,(%eax,%eax,1)
 176:	00 00                	add    %al,(%eax)
 178:	09 00                	or     %eax,(%eax)
	...
 18a:	00 00                	add    %al,(%eax)
 18c:	02 00                	add    (%eax),%al
 18e:	00 00                	add    %al,(%eax)
 190:	03 00                	add    (%eax),%eax
 192:	00 00                	add    %al,(%eax)
 194:	04 00                	add    $0x0,%al
 196:	00 00                	add    %al,(%eax)
 198:	01 00                	add    %eax,(%eax)
 19a:	00 00                	add    %al,(%eax)
 19c:	07                   	pop    %es
 19d:	00 00                	add    %al,(%eax)
 19f:	00 06                	add    %al,(%esi)
 1a1:	00 00                	add    %al,(%eax)
 1a3:	00 08                	add    %cl,(%eax)
 1a5:	00 00                	add    %al,(%eax)
 1a7:	00 05 00 00 00 0a    	add    %al,0xa000000
 1ad:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynsym:

000001b0 <.dynsym>:
	...
 1c0:	5a                   	pop    %edx
	...
 1c9:	00 00                	add    %al,(%eax)
 1cb:	00 20                	add    %ah,(%eax)
 1cd:	00 00                	add    %al,(%eax)
 1cf:	00 1a                	add    %bl,(%edx)
	...
 1d9:	00 00                	add    %al,(%eax)
 1db:	00 12                	add    %dl,(%edx)
 1dd:	00 00                	add    %al,(%eax)
 1df:	00 42 00             	add    %al,0x0(%edx)
 1e2:	00 00                	add    %al,(%eax)
 1e4:	d0 18                	rcrb   (%eax)
 1e6:	00 00                	add    %al,(%eax)
 1e8:	00 00                	add    %al,(%eax)
 1ea:	00 00                	add    %al,(%eax)
 1ec:	10 00                	adc    %al,(%eax)
 1ee:	18 00                	sbb    %al,(%eax)
 1f0:	21 00                	and    %eax,(%eax)
	...
 1fa:	00 00                	add    %al,(%eax)
 1fc:	22 00                	and    (%eax),%al
 1fe:	00 00                	add    %al,(%eax)
 200:	76 00                	jbe    202 <_init-0x1ea>
	...
 20a:	00 00                	add    %al,(%eax)
 20c:	20 00                	and    %al,(%eax)
 20e:	00 00                	add    %al,(%eax)
 210:	0b 00                	or     (%eax),%eax
 212:	00 00                	add    %al,(%eax)
 214:	7c 06                	jl     21c <_init-0x1d0>
 216:	00 00                	add    %al,(%eax)
 218:	04 00                	add    $0x0,%al
 21a:	00 00                	add    %al,(%eax)
 21c:	11 00                	adc    %eax,(%eax)
 21e:	0f 00                	(bad)  
 220:	30 00                	xor    %al,(%eax)
	...
 22a:	00 00                	add    %al,(%eax)
 22c:	12 00                	adc    (%eax),%al
 22e:	00 00                	add    %al,(%eax)
 230:	55                   	push   %ebp
 231:	00 00                	add    %al,(%eax)
 233:	00 d4                	add    %dl,%ah
 235:	18 00                	sbb    %al,(%eax)
 237:	00 00                	add    %al,(%eax)
 239:	00 00                	add    %al,(%eax)
 23b:	00 10                	add    %dl,(%eax)
 23d:	00 19                	add    %bl,(%ecx)
 23f:	00 49 00             	add    %cl,0x0(%ecx)
 242:	00 00                	add    %al,(%eax)
 244:	d0 18                	rcrb   (%eax)
 246:	00 00                	add    %al,(%eax)
 248:	00 00                	add    %al,(%eax)
 24a:	00 00                	add    %al,(%eax)
 24c:	10 00                	adc    %al,(%eax)
 24e:	19 00                	sbb    %eax,(%eax)
 250:	3d 00 00 00 c0       	cmp    $0xc0000000,%eax
 255:	05 00 00 38 00       	add    $0x380000,%eax
 25a:	00 00                	add    %al,(%eax)
 25c:	12 00                	adc    (%eax),%al
 25e:	0d 00 85 00 00       	or     $0x8500,%eax
	...
 26b:	00 20                	add    %ah,(%eax)
 26d:	00 00                	add    %al,(%eax)
 26f:	00 99 00 00 00 00    	add    %bl,0x0(%ecx)
 275:	00 00                	add    %al,(%eax)
 277:	00 00                	add    %al,(%eax)
 279:	00 00                	add    %al,(%eax)
 27b:	00 20                	add    %ah,(%eax)
 27d:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynstr:

00000280 <.dynstr>:
 280:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 284:	63 2e                	arpl   %bp,(%esi)
 286:	73 6f                	jae    2f7 <_init-0xf5>
 288:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 28d:	4f                   	dec    %edi
 28e:	5f                   	pop    %edi
 28f:	73 74                	jae    305 <_init-0xe7>
 291:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 298:	64 
 299:	00 70 72             	add    %dh,0x72(%eax)
 29c:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 2a3:	63 78 61             	arpl   %di,0x61(%eax)
 2a6:	5f                   	pop    %edi
 2a7:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%esi),%bp
 2ad:	7a 65                	jp     314 <_init-0xd8>
 2af:	00 5f 5f             	add    %bl,0x5f(%edi)
 2b2:	6c                   	insb   (%dx),%es:(%edi)
 2b3:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 2ba:	72 74                	jb     330 <_init-0xbc>
 2bc:	5f                   	pop    %edi
 2bd:	6d                   	insl   (%dx),%es:(%edi)
 2be:	61                   	popa   
 2bf:	69 6e 00 5f 65 64 61 	imul   $0x6164655f,0x0(%esi),%ebp
 2c6:	74 61                	je     329 <_init-0xc3>
 2c8:	00 5f 5f             	add    %bl,0x5f(%edi)
 2cb:	62 73 73             	bound  %esi,0x73(%ebx)
 2ce:	5f                   	pop    %edi
 2cf:	73 74                	jae    345 <_init-0xa7>
 2d1:	61                   	popa   
 2d2:	72 74                	jb     348 <_init-0xa4>
 2d4:	00 5f 65             	add    %bl,0x65(%edi)
 2d7:	6e                   	outsb  %ds:(%esi),(%dx)
 2d8:	64 00 5f 49          	add    %bl,%fs:0x49(%edi)
 2dc:	54                   	push   %esp
 2dd:	4d                   	dec    %ebp
 2de:	5f                   	pop    %edi
 2df:	64 65 72 65          	fs gs jb 348 <_init-0xa4>
 2e3:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 2ea:	4d 
 2eb:	43                   	inc    %ebx
 2ec:	6c                   	insb   (%dx),%es:(%edi)
 2ed:	6f                   	outsl  %ds:(%esi),(%dx)
 2ee:	6e                   	outsb  %ds:(%esi),(%dx)
 2ef:	65 54                	gs push %esp
 2f1:	61                   	popa   
 2f2:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 2f6:	5f                   	pop    %edi
 2f7:	5f                   	pop    %edi
 2f8:	67 6d                	insl   (%dx),%es:(%di)
 2fa:	6f                   	outsl  %ds:(%esi),(%dx)
 2fb:	6e                   	outsb  %ds:(%esi),(%dx)
 2fc:	5f                   	pop    %edi
 2fd:	73 74                	jae    373 <_init-0x79>
 2ff:	61                   	popa   
 300:	72 74                	jb     376 <_init-0x76>
 302:	5f                   	pop    %edi
 303:	5f                   	pop    %edi
 304:	00 5f 4a             	add    %bl,0x4a(%edi)
 307:	76 5f                	jbe    368 <_init-0x84>
 309:	52                   	push   %edx
 30a:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
 311:	43 6c 
 313:	61                   	popa   
 314:	73 73                	jae    389 <_init-0x63>
 316:	65 73 00             	gs jae 319 <_init-0xd3>
 319:	5f                   	pop    %edi
 31a:	49                   	dec    %ecx
 31b:	54                   	push   %esp
 31c:	4d                   	dec    %ebp
 31d:	5f                   	pop    %edi
 31e:	72 65                	jb     385 <_init-0x67>
 320:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 327:	4d 
 328:	43                   	inc    %ebx
 329:	6c                   	insb   (%dx),%es:(%edi)
 32a:	6f                   	outsl  %ds:(%esi),(%dx)
 32b:	6e                   	outsb  %ds:(%esi),(%dx)
 32c:	65 54                	gs push %esp
 32e:	61                   	popa   
 32f:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 333:	47                   	inc    %edi
 334:	4c                   	dec    %esp
 335:	49                   	dec    %ecx
 336:	42                   	inc    %edx
 337:	43                   	inc    %ebx
 338:	5f                   	pop    %edi
 339:	32 2e                	xor    (%esi),%ch
 33b:	31 2e                	xor    %ebp,(%esi)
 33d:	33 00                	xor    (%eax),%eax
 33f:	47                   	inc    %edi
 340:	4c                   	dec    %esp
 341:	49                   	dec    %ecx
 342:	42                   	inc    %edx
 343:	43                   	inc    %ebx
 344:	5f                   	pop    %edi
 345:	32 2e                	xor    (%esi),%ch
 347:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

0000034a <.gnu.version>:
 34a:	00 00                	add    %al,(%eax)
 34c:	00 00                	add    %al,(%eax)
 34e:	02 00                	add    (%eax),%al
 350:	01 00                	add    %eax,(%eax)
 352:	03 00                	add    (%eax),%eax
 354:	00 00                	add    %al,(%eax)
 356:	01 00                	add    %eax,(%eax)
 358:	02 00                	add    (%eax),%al
 35a:	01 00                	add    %eax,(%eax)
 35c:	01 00                	add    %eax,(%eax)
 35e:	01 00                	add    %eax,(%eax)
 360:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gnu.version_r:

00000364 <.gnu.version_r>:
 364:	01 00                	add    %eax,(%eax)
 366:	02 00                	add    (%eax),%al
 368:	01 00                	add    %eax,(%eax)
 36a:	00 00                	add    %al,(%eax)
 36c:	10 00                	adc    %al,(%eax)
 36e:	00 00                	add    %al,(%eax)
 370:	00 00                	add    %al,(%eax)
 372:	00 00                	add    %al,(%eax)
 374:	73 1f                	jae    395 <_init-0x57>
 376:	69 09 00 00 03 00    	imul   $0x30000,(%ecx),%ecx
 37c:	b3 00                	mov    $0x0,%bl
 37e:	00 00                	add    %al,(%eax)
 380:	10 00                	adc    %al,(%eax)
 382:	00 00                	add    %al,(%eax)
 384:	10 69 69             	adc    %ch,0x69(%ecx)
 387:	0d 00 00 02 00       	or     $0x20000,%eax
 38c:	bf 00 00 00 00       	mov    $0x0,%edi
 391:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

00000394 <.rel.dyn>:
 394:	a0 17 00 00 08       	mov    0x8000017,%al
 399:	00 00                	add    %al,(%eax)
 39b:	00 a4 17 00 00 08 00 	add    %ah,0x80000(%edi,%edx,1)
 3a2:	00 00                	add    %al,(%eax)
 3a4:	a8 18                	test   $0x18,%al
 3a6:	00 00                	add    %al,(%eax)
 3a8:	08 00                	or     %al,(%eax)
 3aa:	00 00                	add    %al,(%eax)
 3ac:	cc                   	int3   
 3ad:	18 00                	sbb    %al,(%eax)
 3af:	00 08                	add    %cl,(%eax)
 3b1:	00 00                	add    %al,(%eax)
 3b3:	00 9c 18 00 00 06 01 	add    %bl,0x1060000(%eax,%ebx,1)
 3ba:	00 00                	add    %al,(%eax)
 3bc:	a0 18 00 00 06       	mov    0x6000018,%al
 3c1:	04 00                	add    $0x0,%al
 3c3:	00 a4 18 00 00 06 05 	add    %ah,0x5060000(%eax,%ebx,1)
 3ca:	00 00                	add    %al,(%eax)
 3cc:	ac                   	lods   %ds:(%esi),%al
 3cd:	18 00                	sbb    %al,(%eax)
 3cf:	00 06                	add    %al,(%esi)
 3d1:	0b 00                	or     (%eax),%eax
 3d3:	00 b0 18 00 00 06    	add    %dh,0x6000018(%eax)
 3d9:	0c 00                	or     $0x0,%al
	...

Disassembly of section .rel.plt:

000003dc <.rel.plt>:
 3dc:	c0 18 00             	rcrb   $0x0,(%eax)
 3df:	00 07                	add    %al,(%edi)
 3e1:	02 00                	add    (%eax),%al
 3e3:	00 c4                	add    %al,%ah
 3e5:	18 00                	sbb    %al,(%eax)
 3e7:	00 07                	add    %al,(%edi)
 3e9:	07                   	pop    %es
	...

Disassembly of section .init:

000003ec <_init>:
 3ec:	53                   	push   %ebx
 3ed:	83 ec 08             	sub    $0x8,%esp
 3f0:	e8 9b 00 00 00       	call   490 <__x86.get_pc_thunk.bx>
 3f5:	81 c3 bf 14 00 00    	add    $0x14bf,%ebx
 3fb:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
 401:	85 c0                	test   %eax,%eax
 403:	74 05                	je     40a <_init+0x1e>
 405:	e8 3e 00 00 00       	call   448 <__libc_start_main@plt+0x18>
 40a:	83 c4 08             	add    $0x8,%esp
 40d:	5b                   	pop    %ebx
 40e:	c3                   	ret    

Disassembly of section .plt:

00000410 <printf@plt-0x10>:
 410:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 416:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 41c:	00 00                	add    %al,(%eax)
	...

00000420 <printf@plt>:
 420:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 426:	68 00 00 00 00       	push   $0x0
 42b:	e9 e0 ff ff ff       	jmp    410 <_init+0x24>

00000430 <__libc_start_main@plt>:
 430:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 436:	68 08 00 00 00       	push   $0x8
 43b:	e9 d0 ff ff ff       	jmp    410 <_init+0x24>

Disassembly of section .plt.got:

00000440 <.plt.got>:
 440:	ff a3 ec ff ff ff    	jmp    *-0x14(%ebx)
 446:	66 90                	xchg   %ax,%ax
 448:	ff a3 f0 ff ff ff    	jmp    *-0x10(%ebx)
 44e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000450 <_start>:
 450:	31 ed                	xor    %ebp,%ebp
 452:	5e                   	pop    %esi
 453:	89 e1                	mov    %esp,%ecx
 455:	83 e4 f0             	and    $0xfffffff0,%esp
 458:	50                   	push   %eax
 459:	54                   	push   %esp
 45a:	52                   	push   %edx
 45b:	e8 22 00 00 00       	call   482 <_start+0x32>
 460:	81 c3 54 14 00 00    	add    $0x1454,%ebx
 466:	8d 83 ac ed ff ff    	lea    -0x1254(%ebx),%eax
 46c:	50                   	push   %eax
 46d:	8d 83 4c ed ff ff    	lea    -0x12b4(%ebx),%eax
 473:	50                   	push   %eax
 474:	51                   	push   %ecx
 475:	56                   	push   %esi
 476:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)
 47c:	e8 af ff ff ff       	call   430 <__libc_start_main@plt>
 481:	f4                   	hlt    
 482:	8b 1c 24             	mov    (%esp),%ebx
 485:	c3                   	ret    
 486:	66 90                	xchg   %ax,%ax
 488:	66 90                	xchg   %ax,%ax
 48a:	66 90                	xchg   %ax,%ax
 48c:	66 90                	xchg   %ax,%ax
 48e:	66 90                	xchg   %ax,%ax

00000490 <__x86.get_pc_thunk.bx>:
 490:	8b 1c 24             	mov    (%esp),%ebx
 493:	c3                   	ret    
 494:	66 90                	xchg   %ax,%ax
 496:	66 90                	xchg   %ax,%ax
 498:	66 90                	xchg   %ax,%ax
 49a:	66 90                	xchg   %ax,%ax
 49c:	66 90                	xchg   %ax,%ax
 49e:	66 90                	xchg   %ax,%ax

000004a0 <deregister_tm_clones>:
 4a0:	e8 17 01 00 00       	call   5bc <__x86.get_pc_thunk.dx>
 4a5:	81 c2 0f 14 00 00    	add    $0x140f,%edx
 4ab:	8d 8a 1c 00 00 00    	lea    0x1c(%edx),%ecx
 4b1:	8d 82 1f 00 00 00    	lea    0x1f(%edx),%eax
 4b7:	29 c8                	sub    %ecx,%eax
 4b9:	83 f8 06             	cmp    $0x6,%eax
 4bc:	76 17                	jbe    4d5 <deregister_tm_clones+0x35>
 4be:	8b 82 e8 ff ff ff    	mov    -0x18(%edx),%eax
 4c4:	85 c0                	test   %eax,%eax
 4c6:	74 0d                	je     4d5 <deregister_tm_clones+0x35>
 4c8:	55                   	push   %ebp
 4c9:	89 e5                	mov    %esp,%ebp
 4cb:	83 ec 14             	sub    $0x14,%esp
 4ce:	51                   	push   %ecx
 4cf:	ff d0                	call   *%eax
 4d1:	83 c4 10             	add    $0x10,%esp
 4d4:	c9                   	leave  
 4d5:	f3 c3                	repz ret 
 4d7:	89 f6                	mov    %esi,%esi
 4d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000004e0 <register_tm_clones>:
 4e0:	e8 d7 00 00 00       	call   5bc <__x86.get_pc_thunk.dx>
 4e5:	81 c2 cf 13 00 00    	add    $0x13cf,%edx
 4eb:	55                   	push   %ebp
 4ec:	8d 8a 1c 00 00 00    	lea    0x1c(%edx),%ecx
 4f2:	8d 82 1c 00 00 00    	lea    0x1c(%edx),%eax
 4f8:	89 e5                	mov    %esp,%ebp
 4fa:	53                   	push   %ebx
 4fb:	29 c8                	sub    %ecx,%eax
 4fd:	c1 f8 02             	sar    $0x2,%eax
 500:	83 ec 04             	sub    $0x4,%esp
 503:	89 c3                	mov    %eax,%ebx
 505:	c1 eb 1f             	shr    $0x1f,%ebx
 508:	01 d8                	add    %ebx,%eax
 50a:	d1 f8                	sar    %eax
 50c:	74 14                	je     522 <register_tm_clones+0x42>
 50e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
 514:	85 d2                	test   %edx,%edx
 516:	74 0a                	je     522 <register_tm_clones+0x42>
 518:	83 ec 08             	sub    $0x8,%esp
 51b:	50                   	push   %eax
 51c:	51                   	push   %ecx
 51d:	ff d2                	call   *%edx
 51f:	83 c4 10             	add    $0x10,%esp
 522:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 525:	c9                   	leave  
 526:	c3                   	ret    
 527:	89 f6                	mov    %esi,%esi
 529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000530 <__do_global_dtors_aux>:
 530:	55                   	push   %ebp
 531:	89 e5                	mov    %esp,%ebp
 533:	53                   	push   %ebx
 534:	e8 57 ff ff ff       	call   490 <__x86.get_pc_thunk.bx>
 539:	81 c3 7b 13 00 00    	add    $0x137b,%ebx
 53f:	83 ec 04             	sub    $0x4,%esp
 542:	80 bb 1c 00 00 00 00 	cmpb   $0x0,0x1c(%ebx)
 549:	75 27                	jne    572 <__do_global_dtors_aux+0x42>
 54b:	8b 83 ec ff ff ff    	mov    -0x14(%ebx),%eax
 551:	85 c0                	test   %eax,%eax
 553:	74 11                	je     566 <__do_global_dtors_aux+0x36>
 555:	83 ec 0c             	sub    $0xc,%esp
 558:	ff b3 18 00 00 00    	pushl  0x18(%ebx)
 55e:	e8 dd fe ff ff       	call   440 <__libc_start_main@plt+0x10>
 563:	83 c4 10             	add    $0x10,%esp
 566:	e8 35 ff ff ff       	call   4a0 <deregister_tm_clones>
 56b:	c6 83 1c 00 00 00 01 	movb   $0x1,0x1c(%ebx)
 572:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 575:	c9                   	leave  
 576:	c3                   	ret    
 577:	89 f6                	mov    %esi,%esi
 579:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000580 <frame_dummy>:
 580:	e8 37 00 00 00       	call   5bc <__x86.get_pc_thunk.dx>
 585:	81 c2 2f 13 00 00    	add    $0x132f,%edx
 58b:	8d 82 f4 fe ff ff    	lea    -0x10c(%edx),%eax
 591:	8b 08                	mov    (%eax),%ecx
 593:	85 c9                	test   %ecx,%ecx
 595:	75 09                	jne    5a0 <frame_dummy+0x20>
 597:	e9 44 ff ff ff       	jmp    4e0 <register_tm_clones>
 59c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 5a0:	8b 92 f8 ff ff ff    	mov    -0x8(%edx),%edx
 5a6:	85 d2                	test   %edx,%edx
 5a8:	74 ed                	je     597 <frame_dummy+0x17>
 5aa:	55                   	push   %ebp
 5ab:	89 e5                	mov    %esp,%ebp
 5ad:	83 ec 14             	sub    $0x14,%esp
 5b0:	50                   	push   %eax
 5b1:	ff d2                	call   *%edx
 5b3:	83 c4 10             	add    $0x10,%esp
 5b6:	c9                   	leave  
 5b7:	e9 24 ff ff ff       	jmp    4e0 <register_tm_clones>

000005bc <__x86.get_pc_thunk.dx>:
 5bc:	8b 14 24             	mov    (%esp),%edx
 5bf:	c3                   	ret    

000005c0 <main>:
 5c0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 5c4:	83 e4 f0             	and    $0xfffffff0,%esp
 5c7:	ff 71 fc             	pushl  -0x4(%ecx)
 5ca:	55                   	push   %ebp
 5cb:	89 e5                	mov    %esp,%ebp
 5cd:	53                   	push   %ebx
 5ce:	51                   	push   %ecx
 5cf:	e8 24 00 00 00       	call   5f8 <__x86.get_pc_thunk.ax>
 5d4:	05 e0 12 00 00       	add    $0x12e0,%eax
 5d9:	83 ec 0c             	sub    $0xc,%esp
 5dc:	8d 90 cc ed ff ff    	lea    -0x1234(%eax),%edx
 5e2:	52                   	push   %edx
 5e3:	89 c3                	mov    %eax,%ebx
 5e5:	e8 36 fe ff ff       	call   420 <printf@plt>
 5ea:	83 c4 10             	add    $0x10,%esp
 5ed:	90                   	nop
 5ee:	8d 65 f8             	lea    -0x8(%ebp),%esp
 5f1:	59                   	pop    %ecx
 5f2:	5b                   	pop    %ebx
 5f3:	5d                   	pop    %ebp
 5f4:	8d 61 fc             	lea    -0x4(%ecx),%esp
 5f7:	c3                   	ret    

000005f8 <__x86.get_pc_thunk.ax>:
 5f8:	8b 04 24             	mov    (%esp),%eax
 5fb:	c3                   	ret    
 5fc:	66 90                	xchg   %ax,%ax
 5fe:	66 90                	xchg   %ax,%ax

00000600 <__libc_csu_init>:
 600:	55                   	push   %ebp
 601:	57                   	push   %edi
 602:	56                   	push   %esi
 603:	53                   	push   %ebx
 604:	e8 87 fe ff ff       	call   490 <__x86.get_pc_thunk.bx>
 609:	81 c3 ab 12 00 00    	add    $0x12ab,%ebx
 60f:	83 ec 0c             	sub    $0xc,%esp
 612:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 616:	8d b3 f0 fe ff ff    	lea    -0x110(%ebx),%esi
 61c:	e8 cb fd ff ff       	call   3ec <_init>
 621:	8d 83 ec fe ff ff    	lea    -0x114(%ebx),%eax
 627:	29 c6                	sub    %eax,%esi
 629:	c1 fe 02             	sar    $0x2,%esi
 62c:	85 f6                	test   %esi,%esi
 62e:	74 25                	je     655 <__libc_csu_init+0x55>
 630:	31 ff                	xor    %edi,%edi
 632:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 638:	83 ec 04             	sub    $0x4,%esp
 63b:	ff 74 24 2c          	pushl  0x2c(%esp)
 63f:	ff 74 24 2c          	pushl  0x2c(%esp)
 643:	55                   	push   %ebp
 644:	ff 94 bb ec fe ff ff 	call   *-0x114(%ebx,%edi,4)
 64b:	83 c7 01             	add    $0x1,%edi
 64e:	83 c4 10             	add    $0x10,%esp
 651:	39 f7                	cmp    %esi,%edi
 653:	75 e3                	jne    638 <__libc_csu_init+0x38>
 655:	83 c4 0c             	add    $0xc,%esp
 658:	5b                   	pop    %ebx
 659:	5e                   	pop    %esi
 65a:	5f                   	pop    %edi
 65b:	5d                   	pop    %ebp
 65c:	c3                   	ret    
 65d:	8d 76 00             	lea    0x0(%esi),%esi

00000660 <__libc_csu_fini>:
 660:	f3 c3                	repz ret 

Disassembly of section .fini:

00000664 <_fini>:
 664:	53                   	push   %ebx
 665:	83 ec 08             	sub    $0x8,%esp
 668:	e8 23 fe ff ff       	call   490 <__x86.get_pc_thunk.bx>
 66d:	81 c3 47 12 00 00    	add    $0x1247,%ebx
 673:	83 c4 08             	add    $0x8,%esp
 676:	5b                   	pop    %ebx
 677:	c3                   	ret    

Disassembly of section .rodata:

00000678 <_fp_hw>:
 678:	03 00                	add    (%eax),%eax
	...

0000067c <_IO_stdin_used>:
 67c:	01 00                	add    %eax,(%eax)
 67e:	02 00                	add    (%eax),%al
 680:	67 6f                	outsl  %ds:(%si),(%dx)
	...

Disassembly of section .eh_frame_hdr:

00000684 <__GNU_EH_FRAME_HDR>:
 684:	01 1b                	add    %ebx,(%ebx)
 686:	03 3b                	add    (%ebx),%edi
 688:	30 00                	xor    %al,(%eax)
 68a:	00 00                	add    %al,(%eax)
 68c:	05 00 00 00 8c       	add    $0x8c000000,%eax
 691:	fd                   	std    
 692:	ff                   	(bad)  
 693:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 697:	00 3c ff             	add    %bh,(%edi,%edi,8)
 69a:	ff                   	(bad)  
 69b:	ff 70 00             	pushl  0x0(%eax)
 69e:	00 00                	add    %al,(%eax)
 6a0:	74 ff                	je     6a1 <__GNU_EH_FRAME_HDR+0x1d>
 6a2:	ff                   	(bad)  
 6a3:	ff a4 00 00 00 7c ff 	jmp    *-0x840000(%eax,%eax,1)
 6aa:	ff                   	(bad)  
 6ab:	ff                   	(bad)  
 6ac:	b8 00 00 00 dc       	mov    $0xdc000000,%eax
 6b1:	ff                   	(bad)  
 6b2:	ff                   	(bad)  
 6b3:	ff 04 01             	incl   (%ecx,%eax,1)
	...

Disassembly of section .eh_frame:

000006b8 <__FRAME_END__-0xe4>:
 6b8:	14 00                	adc    $0x0,%al
 6ba:	00 00                	add    %al,(%eax)
 6bc:	00 00                	add    %al,(%eax)
 6be:	00 00                	add    %al,(%eax)
 6c0:	01 7a 52             	add    %edi,0x52(%edx)
 6c3:	00 01                	add    %al,(%ecx)
 6c5:	7c 08                	jl     6cf <__GNU_EH_FRAME_HDR+0x4b>
 6c7:	01 1b                	add    %ebx,(%ebx)
 6c9:	0c 04                	or     $0x4,%al
 6cb:	04 88                	add    $0x88,%al
 6cd:	01 00                	add    %eax,(%eax)
 6cf:	00 20                	add    %ah,(%eax)
 6d1:	00 00                	add    %al,(%eax)
 6d3:	00 1c 00             	add    %bl,(%eax,%eax,1)
 6d6:	00 00                	add    %al,(%eax)
 6d8:	38 fd                	cmp    %bh,%ch
 6da:	ff                   	(bad)  
 6db:	ff 30                	pushl  (%eax)
 6dd:	00 00                	add    %al,(%eax)
 6df:	00 00                	add    %al,(%eax)
 6e1:	0e                   	push   %cs
 6e2:	08 46 0e             	or     %al,0xe(%esi)
 6e5:	0c 4a                	or     $0x4a,%al
 6e7:	0f 0b                	ud2    
 6e9:	74 04                	je     6ef <__GNU_EH_FRAME_HDR+0x6b>
 6eb:	78 00                	js     6ed <__GNU_EH_FRAME_HDR+0x69>
 6ed:	3f                   	aas    
 6ee:	1a 3b                	sbb    (%ebx),%bh
 6f0:	2a 32                	sub    (%edx),%dh
 6f2:	24 22                	and    $0x22,%al
 6f4:	30 00                	xor    %al,(%eax)
 6f6:	00 00                	add    %al,(%eax)
 6f8:	40                   	inc    %eax
 6f9:	00 00                	add    %al,(%eax)
 6fb:	00 c4                	add    %al,%ah
 6fd:	fe                   	(bad)  
 6fe:	ff                   	(bad)  
 6ff:	ff                   	(bad)  
 700:	38 00                	cmp    %al,(%eax)
 702:	00 00                	add    %al,(%eax)
 704:	00 44 0c 01          	add    %al,0x1(%esp,%ecx,1)
 708:	00 47 10             	add    %al,0x10(%edi)
 70b:	05 02 75 00 44       	add    $0x44007502,%eax
 710:	0f 03 75 78          	lsl    0x78(%ebp),%esi
 714:	06                   	push   %es
 715:	10 03                	adc    %al,(%ebx)
 717:	02 75 7c             	add    0x7c(%ebp),%dh
 71a:	63 c1                	arpl   %ax,%cx
 71c:	0c 01                	or     $0x1,%al
 71e:	00 41 c3             	add    %al,-0x3d(%ecx)
 721:	41                   	inc    %ecx
 722:	c5 43 0c             	lds    0xc(%ebx),%eax
 725:	04 04                	add    $0x4,%al
 727:	00 10                	add    %dl,(%eax)
 729:	00 00                	add    %al,(%eax)
 72b:	00 74 00 00          	add    %dh,0x0(%eax,%eax,1)
 72f:	00 c8                	add    %cl,%al
 731:	fe                   	(bad)  
 732:	ff                   	(bad)  
 733:	ff 04 00             	incl   (%eax,%eax,1)
 736:	00 00                	add    %al,(%eax)
 738:	00 00                	add    %al,(%eax)
 73a:	00 00                	add    %al,(%eax)
 73c:	48                   	dec    %eax
 73d:	00 00                	add    %al,(%eax)
 73f:	00 88 00 00 00 bc    	add    %cl,-0x44000000(%eax)
 745:	fe                   	(bad)  
 746:	ff                   	(bad)  
 747:	ff 5d 00             	lcall  *0x0(%ebp)
 74a:	00 00                	add    %al,(%eax)
 74c:	00 41 0e             	add    %al,0xe(%ecx)
 74f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 755:	87 03                	xchg   %eax,(%ebx)
 757:	41                   	inc    %ecx
 758:	0e                   	push   %cs
 759:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 75f:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 766:	24 44                	and    $0x44,%al
 768:	0e                   	push   %cs
 769:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 76d:	41                   	inc    %ecx
 76e:	0e                   	push   %cs
 76f:	30 4d 0e             	xor    %cl,0xe(%ebp)
 772:	20 47 0e             	and    %al,0xe(%edi)
 775:	14 41                	adc    $0x41,%al
 777:	c3                   	ret    
 778:	0e                   	push   %cs
 779:	10 41 c6             	adc    %al,-0x3a(%ecx)
 77c:	0e                   	push   %cs
 77d:	0c 41                	or     $0x41,%al
 77f:	c7                   	(bad)  
 780:	0e                   	push   %cs
 781:	08 41 c5             	or     %al,-0x3b(%ecx)
 784:	0e                   	push   %cs
 785:	04 00                	add    $0x0,%al
 787:	00 10                	add    %dl,(%eax)
 789:	00 00                	add    %al,(%eax)
 78b:	00 d4                	add    %dl,%ah
 78d:	00 00                	add    %al,(%eax)
 78f:	00 d0                	add    %dl,%al
 791:	fe                   	(bad)  
 792:	ff                   	(bad)  
 793:	ff 02                	incl   (%edx)
 795:	00 00                	add    %al,(%eax)
 797:	00 00                	add    %al,(%eax)
 799:	00 00                	add    %al,(%eax)
	...

0000079c <__FRAME_END__>:
 79c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

000017a0 <__frame_dummy_init_array_entry>:
    17a0:	80                   	.byte 0x80
    17a1:	05                   	.byte 0x5
	...

Disassembly of section .fini_array:

000017a4 <__do_global_dtors_aux_fini_array_entry>:
    17a4:	30                   	.byte 0x30
    17a5:	05                   	.byte 0x5
	...

Disassembly of section .jcr:

000017a8 <__JCR_END__>:
    17a8:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

000017ac <_DYNAMIC>:
    17ac:	01 00                	add    %eax,(%eax)
    17ae:	00 00                	add    %al,(%eax)
    17b0:	01 00                	add    %eax,(%eax)
    17b2:	00 00                	add    %al,(%eax)
    17b4:	0c 00                	or     $0x0,%al
    17b6:	00 00                	add    %al,(%eax)
    17b8:	ec                   	in     (%dx),%al
    17b9:	03 00                	add    (%eax),%eax
    17bb:	00 0d 00 00 00 64    	add    %cl,0x64000000
    17c1:	06                   	push   %es
    17c2:	00 00                	add    %al,(%eax)
    17c4:	19 00                	sbb    %eax,(%eax)
    17c6:	00 00                	add    %al,(%eax)
    17c8:	a0 17 00 00 1b       	mov    0x1b000017,%al
    17cd:	00 00                	add    %al,(%eax)
    17cf:	00 04 00             	add    %al,(%eax,%eax,1)
    17d2:	00 00                	add    %al,(%eax)
    17d4:	1a 00                	sbb    (%eax),%al
    17d6:	00 00                	add    %al,(%eax)
    17d8:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    17d9:	17                   	pop    %ss
    17da:	00 00                	add    %al,(%eax)
    17dc:	1c 00                	sbb    $0x0,%al
    17de:	00 00                	add    %al,(%eax)
    17e0:	04 00                	add    $0x0,%al
    17e2:	00 00                	add    %al,(%eax)
    17e4:	04 00                	add    $0x0,%al
    17e6:	00 00                	add    %al,(%eax)
    17e8:	68 01 00 00 05       	push   $0x5000001
    17ed:	00 00                	add    %al,(%eax)
    17ef:	00 80 02 00 00 06    	add    %al,0x6000002(%eax)
    17f5:	00 00                	add    %al,(%eax)
    17f7:	00 b0 01 00 00 0a    	add    %dh,0xa000001(%eax)
    17fd:	00 00                	add    %al,(%eax)
    17ff:	00 c9                	add    %cl,%cl
    1801:	00 00                	add    %al,(%eax)
    1803:	00 0b                	add    %cl,(%ebx)
    1805:	00 00                	add    %al,(%eax)
    1807:	00 10                	add    %dl,(%eax)
    1809:	00 00                	add    %al,(%eax)
    180b:	00 15 00 00 00 00    	add    %dl,0x0
    1811:	00 00                	add    %al,(%eax)
    1813:	00 03                	add    %al,(%ebx)
    1815:	00 00                	add    %al,(%eax)
    1817:	00 b4 18 00 00 02 00 	add    %dh,0x20000(%eax,%ebx,1)
    181e:	00 00                	add    %al,(%eax)
    1820:	10 00                	adc    %al,(%eax)
    1822:	00 00                	add    %al,(%eax)
    1824:	14 00                	adc    $0x0,%al
    1826:	00 00                	add    %al,(%eax)
    1828:	11 00                	adc    %eax,(%eax)
    182a:	00 00                	add    %al,(%eax)
    182c:	17                   	pop    %ss
    182d:	00 00                	add    %al,(%eax)
    182f:	00 dc                	add    %bl,%ah
    1831:	03 00                	add    (%eax),%eax
    1833:	00 11                	add    %dl,(%ecx)
    1835:	00 00                	add    %al,(%eax)
    1837:	00 94 03 00 00 12 00 	add    %dl,0x120000(%ebx,%eax,1)
    183e:	00 00                	add    %al,(%eax)
    1840:	48                   	dec    %eax
    1841:	00 00                	add    %al,(%eax)
    1843:	00 13                	add    %dl,(%ebx)
    1845:	00 00                	add    %al,(%eax)
    1847:	00 08                	add    %cl,(%eax)
    1849:	00 00                	add    %al,(%eax)
    184b:	00 fb                	add    %bh,%bl
    184d:	ff                   	(bad)  
    184e:	ff 6f 00             	ljmp   *0x0(%edi)
    1851:	00 00                	add    %al,(%eax)
    1853:	08 fe                	or     %bh,%dh
    1855:	ff                   	(bad)  
    1856:	ff 6f 64             	ljmp   *0x64(%edi)
    1859:	03 00                	add    (%eax),%eax
    185b:	00 ff                	add    %bh,%bh
    185d:	ff                   	(bad)  
    185e:	ff 6f 01             	ljmp   *0x1(%edi)
    1861:	00 00                	add    %al,(%eax)
    1863:	00 f0                	add    %dh,%al
    1865:	ff                   	(bad)  
    1866:	ff 6f 4a             	ljmp   *0x4a(%edi)
    1869:	03 00                	add    (%eax),%eax
    186b:	00 fa                	add    %bh,%dl
    186d:	ff                   	(bad)  
    186e:	ff 6f 04             	ljmp   *0x4(%edi)
	...

Disassembly of section .got:

0000189c <.got>:
	...
    18a8:	c0 05 00 00 00 00 00 	rolb   $0x0,0x0
    18af:	00 00                	add    %al,(%eax)
    18b1:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

000018b4 <_GLOBAL_OFFSET_TABLE_>:
    18b4:	ac                   	lods   %ds:(%esi),%al
    18b5:	17                   	pop    %ss
	...
    18be:	00 00                	add    %al,(%eax)
    18c0:	26 04 00             	es add $0x0,%al
    18c3:	00 36                	add    %dh,(%esi)
    18c5:	04 00                	add    $0x0,%al
	...

Disassembly of section .data:

000018c8 <__data_start>:
    18c8:	00 00                	add    %al,(%eax)
	...

000018cc <__dso_handle>:
    18cc:	cc                   	int3   
    18cd:	18 00                	sbb    %al,(%eax)
	...

Disassembly of section .bss:

000018d0 <__bss_start>:
    18d0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 47 4e             	sub    %al,0x4e(%edi)
   8:	55                   	push   %ebp
   9:	29 20                	sub    %esp,(%eax)
   b:	35 2e 35 2e 30       	xor    $0x302e352e,%eax
	...
